Started solving  /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU
% Command line arguments:
% --aslib-dir /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU --model-dir MODEL_DIR --print-times /home/misir/Desktop/liclipse/Workspace/flexfolio-data_filtering-v3/output/res-19062015120444799809-SAT11-INDU.csv
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/description.txt
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/algorithm_runs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/feature_values.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/feature_runstatus.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/ground_truth.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/feature_costs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/cv.arff
% 1-th repetition: 30,30,30,30,30,30,30,30,30,30 distribution
% Used Feature Steps: Pre,Basic,KLB,CG
% Used features: CG_mean,BINARYp,reducedVars,VG_mean,VCG_VAR_mean,VG_min,VCG_VAR_coeff_variation,nvarsOrig,CG_coeff_variation,VG_max,CG_max,POSNEG_RATIO_CLAUSE_max,horn_clauses_fraction,nclauses,vars_clauses_ratio,CG_entropy,UNARY,cluster_coeff_mean,VCG_CLAUSE_coeff_variation,POSNEG_RATIO_VAR_max,VCG_VAR_max,POSNEG_RATIO_VAR_entropy,TRINARYp,POSNEG_RATIO_VAR_min,HORNY_VAR_max,VCG_CLAUSE_mean,VCG_CLAUSE_min,cluster_coeff_entropy,POSNEG_RATIO_CLAUSE_min,HORNY_VAR_coeff_variation,VCG_VAR_min,nvars,nclausesOrig,POSNEG_RATIO_CLAUSE_mean,CG_min,VG_coeff_variation,POSNEG_RATIO_VAR_mean,cluster_coeff_coeff_variation,POSNEG_RATIO_CLAUSE_coeff_variation,VCG_CLAUSE_entropy,VCG_VAR_entropy,cluster_coeff_min,POSNEG_RATIO_VAR_stdev,HORNY_VAR_entropy,cluster_coeff_max,HORNY_VAR_mean,VCG_CLAUSE_max,HORNY_VAR_min,POSNEG_RATIO_CLAUSE_entropy,reducedClauses
% 
% Check Consistency and Completeness of input data
% Instances: 		 300
% Algorithms: 		 18
% Incomplete Feature Vector: 	 0 (maybe imputed)
% Unsolvable Instances (status): 	 47
% Unsolvable Instances (runtime): 	 47
% Valid Instances: 	 253
% Presolved: 		 10
% Average Feature Costs: 	 135.3471
% Use given CV of 1-th repetition
% >>> 1-th iteration<<<
('sr: ', array([ 857.25622129,  188.00595792,  131.67902384,  122.30453603,
         88.70831998,   82.47457296,   74.80107242]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
('top_ft_inx_arr: ', array([ 3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26, 29, 31,
       33, 35, 37, 39, 41, 44, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [-0.07542562  0.15009641  0.09931983  0.16247156  0.13549978  0.29676846
  0.24837645  0.29851872  0.20184911  0.14035569]
top_ft_inx_arr:  [ 3  4  5  7  8 11 13 15 16 18 19 21 24 25 26 29 31 33 35 37 39 41 44 46 47]
(25 out of 50) Features to keep are determined: 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26, 29, 31, 33, 35, 37, 39, 41, 44, 46, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17')
(18 out of 18) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 8887.84 (30 instances)
% >>> 2-th iteration<<<
('sr: ', array([ 846.03913564,  187.95453961,  130.52700451,  122.9867759 ,
         90.59222728,   84.26801222,   74.93453758]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
('top_ft_inx_arr: ', array([ 3,  4,  5,  6,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29, 33,
       34, 35, 37, 39, 41, 46, 47, 48]))
ft_imp_total =  0.9
ft cv scores:  [ 0.15534541  0.23713508  0.15918013  0.21468407  0.30484299  0.03395544
  0.01717868  0.1763285   0.13898891  0.20472663]
top_ft_inx_arr:  [ 3  4  5  6  7  8 11 13 15 16 18 19 21 24 26 29 33 34 35 37 39 41 46 47 48]
(25 out of 50) Features to keep are determined: 3, 4, 5, 6, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29, 33, 34, 35, 37, 39, 41, 46, 47, 48
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17')
(18 out of 18) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 15558.62 (30 instances)
% >>> 3-th iteration<<<
('sr: ', array([ 850.81906588,  187.59683837,  132.10003858,  123.7860027 ,
         91.86164649,   82.73308551,   73.93294035]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
('top_ft_inx_arr: ', array([ 0,  1,  3,  4,  5,  6,  7,  8, 13, 14, 15, 16, 19, 21, 24, 26, 29,
       31, 34, 35, 36, 37, 39, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [ 0.1237332   0.21531838  0.21729278  0.22581547  0.11756566  0.17604686
  0.14916845  0.28446977  0.25070994  0.12890491]
top_ft_inx_arr:  [ 0  1  3  4  5  6  7  8 13 14 15 16 19 21 24 26 29 31 34 35 36 37 39 46 47]
(25 out of 50) Features to keep are determined: 0, 1, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 19, 21, 24, 26, 29, 31, 34, 35, 36, 37, 39, 46, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17')
(18 out of 18) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 17029.65 (30 instances)
% >>> 4-th iteration<<<
('sr: ', array([ 852.26751891,  186.5630564 ,  131.57015826,  124.80700411,
         91.91209407,   81.99798781,   73.6383728 ]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
('top_ft_inx_arr: ', array([ 3,  4,  5,  6,  7,  8, 11, 15, 16, 18, 19, 21, 24, 26, 29, 33, 34,
       35, 36, 37, 39, 41, 46, 47, 48]))
ft_imp_total =  0.9
ft cv scores:  [ 0.17515804  0.25154562  0.09715189  0.25254346  0.09292896  0.19124366
  0.13443757  0.2057442   0.18997249  0.19849323]
top_ft_inx_arr:  [ 3  4  5  6  7  8 11 15 16 18 19 21 24 26 29 33 34 35 36 37 39 41 46 47 48]
(25 out of 50) Features to keep are determined: 3, 4, 5, 6, 7, 8, 11, 15, 16, 18, 19, 21, 24, 26, 29, 33, 34, 35, 36, 37, 39, 41, 46, 47, 48
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17')
(18 out of 18) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 8895.37 (30 instances)
% >>> 5-th iteration<<<
('sr: ', array([ 850.54743738,  188.68551392,  129.29703694,  124.42529551,
         88.512154  ,   82.91047006,   75.42973175]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
('top_ft_inx_arr: ', array([ 1,  2,  3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26,
       29, 35, 36, 37, 39, 41, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [ 0.03081222  0.17165173  0.095521    0.20898736  0.10772781  0.17058872
 -0.05775435  0.2749827   0.18544541  0.17071326]
top_ft_inx_arr:  [ 1  2  3  4  5  7  8 11 13 15 16 18 19 21 24 25 26 29 35 36 37 39 41 46 47]
(25 out of 50) Features to keep are determined: 1, 2, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26, 29, 35, 36, 37, 39, 41, 46, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17')
(18 out of 18) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 12152.23 (30 instances)
% >>> 6-th iteration<<<
('sr: ', array([ 851.51020245,  185.88328746,  131.87092063,  123.74146817,
         89.15419152,   81.88014174,   72.55813445]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
('top_ft_inx_arr: ', array([ 0,  3,  4,  5,  7,  8, 13, 15, 16, 18, 19, 21, 24, 25, 26, 29, 31,
       33, 34, 35, 37, 39, 41, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [-0.00735013  0.1361092   0.2077706   0.11731858  0.12421412  0.27536571
  0.14745003  0.29570623  0.14845099  0.03303409]
top_ft_inx_arr:  [ 0  3  4  5  7  8 13 15 16 18 19 21 24 25 26 29 31 33 34 35 37 39 41 46 47]
(25 out of 50) Features to keep are determined: 0, 3, 4, 5, 7, 8, 13, 15, 16, 18, 19, 21, 24, 25, 26, 29, 31, 33, 34, 35, 37, 39, 41, 46, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17')
(18 out of 18) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 17131.64 (30 instances)
% >>> 7-th iteration<<<
('sr: ', array([ 855.55885297,  185.53124867,  130.34249177,  124.16268867,
         91.68015352,   84.15635315,   74.98760026]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
('top_ft_inx_arr: ', array([ 2,  3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29, 31,
       33, 35, 37, 39, 41, 44, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [ 0.06702993  0.0621644   0.17476094  0.06478059  0.10000933  0.12596737
  0.20646412  0.10191601  0.03133633  0.10836986]
top_ft_inx_arr:  [ 2  3  4  5  7  8 11 13 15 16 18 19 21 24 26 29 31 33 35 37 39 41 44 46 47]
(25 out of 50) Features to keep are determined: 2, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29, 31, 33, 35, 37, 39, 41, 44, 46, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17')
(18 out of 18) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 8773.52 (30 instances)
% >>> 8-th iteration<<<
('sr: ', array([ 852.36572047,  189.81523505,  129.02440771,  122.71159786,
         89.54987038,   82.93460205,   74.56499245]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
('top_ft_inx_arr: ', array([ 2,  3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 24, 25, 26, 28, 29,
       34, 35, 37, 39, 41, 44, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [ 0.06364908  0.20118516  0.10864626  0.32434882  0.08022691  0.12798732
  0.10373583  0.22100325  0.09451878  0.24557289]
top_ft_inx_arr:  [ 2  3  4  5  7  8 11 13 15 16 18 19 24 25 26 28 29 34 35 37 39 41 44 46 47]
(25 out of 50) Features to keep are determined: 2, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 24, 25, 26, 28, 29, 34, 35, 37, 39, 41, 44, 46, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17')
(18 out of 18) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glueminisat_2.2.5
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 9056.34 (30 instances)
% >>> 9-th iteration<<<
('sr: ', array([ 852.57558432,  187.61940442,  131.22463882,  122.77623418,
         86.67310396,   83.21613592,   75.04783018]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
('top_ft_inx_arr: ', array([ 1,  3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26, 27,
       29, 33, 34, 35, 37, 39, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [-0.01867874  0.2274573   0.12340655  0.19367635  0.20097542  0.18291543
  0.14104429  0.30530122  0.16444828  0.12980376]
top_ft_inx_arr:  [ 1  3  4  5  7  8 11 13 15 16 18 19 21 24 25 26 27 29 33 34 35 37 39 46 47]
(25 out of 50) Features to keep are determined: 1, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26, 27, 29, 33, 34, 35, 37, 39, 46, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17')
(18 out of 18) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 9066.63 (30 instances)
% >>> 10-th iteration<<<
('sr: ', array([ 847.64782841,  191.47345724,  130.04051009,  125.1861245 ,
         90.03246621,   83.33196438,   75.32466893]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
('top_ft_inx_arr: ', array([ 1,  2,  3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29,
       33, 35, 36, 37, 39, 41, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [ 0.00288604  0.13603787  0.24005174  0.26229319  0.13820332  0.12338181
  0.13471689  0.29063614  0.23744878  0.15402683]
top_ft_inx_arr:  [ 1  2  3  4  5  7  8 11 13 15 16 18 19 21 24 26 29 33 35 36 37 39 41 46 47]
(25 out of 50) Features to keep are determined: 1, 2, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29, 33, 35, 36, 37, 39, 41, 46, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17')
(18 out of 18) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 13848.85 (30 instances)
% 
%  >>> Instances: 300 <<<
%  >>> Oracle Evaluation (w/o unsolved) <<<
% 
% Unsolved (not by any algorithm and not by feature computation): 47
% PAR1 time: 1137.674485 (420.167373)
% Par10 time: 8187.517818 (419.981603)
% #TOs: 47 (0)
% 
%  >>> Cross Fold Evaluation <<<
% 
% Presolved: 10
% >>>With Unsolvable Instances
% Timeouts per #Thread: {1: 69, 2: 58, 3: 56, 4: 53, 5: 51, 6: 50, 7: 49, 8: 49, 9: 49, 10: 49, 11: 48, 12: 48, 13: 48, 14: 48, 15: 47, 16: 47, 17: 47, 18: 47}
% Solved (perc) per #Thread: {1: 0.77, 2: 0.8066666666666666, 3: 0.8133333333333334, 4: 0.8233333333333334, 5: 0.83, 6: 0.8333333333333334, 7: 0.8366666666666667, 8: 0.8366666666666667, 9: 0.8366666666666667, 10: 0.8366666666666667, 11: 0.84, 12: 0.84, 13: 0.84, 14: 0.84, 15: 0.8433333333333333, 16: 0.8433333333333333, 17: 0.8433333333333333, 18: 0.8433333333333333}
% AVG per #Thread: {1: 1690.068442653337, 2: 1471.2022586033322, 3: 1400.8833197733356, 4: 1369.6562858533362, 5: 1343.2847179099995, 6: 1315.8340766966637, 7: 1306.9963061133337, 8: 1286.7821635900002, 9: 1278.6097623233327, 10: 1274.1681214899988, 11: 1261.26899606, 12: 1259.8215194366655, 13: 1257.4960524466665, 14: 1257.1256727833315, 15: 1243.9396912799978, 16: 1240.4027459566637, 17: 1240.3896880899958, 18: 1225.7568748699966}
% PAR10 per #Thread: {1: 12040.068442653337, 2: 10171.202258603333, 3: 9800.883319773335, 4: 9319.656285853336, 5: 8993.284717909999, 6: 8815.834076696663, 7: 8656.996306113333, 8: 8636.78216359, 9: 8628.609762323333, 10: 8624.168121489998, 11: 8461.26899606, 12: 8459.821519436666, 13: 8457.496052446666, 14: 8457.125672783332, 15: 8293.939691279998, 16: 8290.402745956664, 17: 8290.389688089996, 18: 8275.756874869996}
% >>>Without Unsolved Instances (depends on pre-solved in feature groups)
% Timeouts: {1: 22, 2: 11, 3: 9, 4: 6, 5: 4, 6: 3, 7: 2, 8: 2, 9: 2, 10: 2, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0}
% Solved (perc): {1: 0.9130434782608695, 2: 0.9565217391304348, 3: 0.9644268774703557, 4: 0.9762845849802372, 5: 0.9841897233201581, 6: 0.9881422924901185, 7: 0.9920948616600791, 8: 0.9920948616600791, 9: 0.9920948616600791, 10: 0.9920948616600791, 11: 0.9960474308300395, 12: 0.9960474308300395, 13: 0.9960474308300395, 14: 0.9960474308300395, 15: 0.9999999999999999, 16: 0.9999999999999999, 17: 0.9999999999999999, 18: 0.9999999999999999}
% PAR1: {1: 1075.179971525696, 2: 815.654852098813, 3: 732.2727111936786, 4: 695.2446077312287, 5: 663.9739738063236, 6: 631.4238063596804, 7: 620.9442364980242, 8: 596.9748975375495, 9: 587.2843031501968, 10: 582.017535363635, 11: 566.7221297154151, 12: 565.0057542727259, 13: 562.2482835335966, 14: 561.8090981620534, 15: 546.1735469723293, 16: 541.9795406600755, 17: 541.9640570237104, 18: 524.6128951027629}
% PAR10: {1: 4988.223449786566, 2: 2772.1765912292476, 3: 2333.063225027669, 4: 1762.4382836205568, 5: 1375.4364243992088, 6: 1165.0206443043444, 7: 976.6754617944669, 8: 952.7061228339925, 9: 943.0155284466395, 10: 937.7487606600778, 11: 744.5877423636365, 12: 742.8713669209473, 13: 740.113896181818, 14: 739.6747108102746, 15: 546.1735469723293, 16: 541.9795406600755, 17: 541.9640570237107, 18: 524.6128951027629}
% 
% Time used by each solver: {'minisathackLR_GL_SHR_2011-03-02': 10703.686000000002, 'rcl_2011-04-01': 0, 'minisathackcontrasat_2011-03-02': 58301.017707, 'SAT09referencesolverglucose_1.0': 8854.76, 'minisathackminisat_psm_2011-04-01': 5661.4643, 'MPhaseSAT64_2011-05-14_fixed_': 36283.1752, 'EBGlucose_1.0': 11381.889565999998, 'minisathackMiniSAT_2.2.0-agile-26': 17723.44012, 'CryptoMiniSat_Strange-Night2-st_fixed_': 53947.375243, 'minisathackcir_minisat_2011-05-13_simp_': 4941.28, 'QuteRSat_2011-05-12_fixed_': 62220.298833999994, 'SAT09referencesolverprecosat_236': 31110.46, 'Lingeling_587f_fixed_': 27276.8642, 'RestartSAT_B95': 18699.148265999997, 'minisathackreferenceminisat_2.2.0': 10671.021949999998, 'minisathackEBMiniSAT_2011-03-02': 7181.970176, 'glucose_2': 78327.77034599999, 'glueminisat_2.2.5': 34454.440888}
% Optimal Time used by each solver: {'minisathackLR_GL_SHR_2011-03-02': 241445.91419599997, 'rcl_2011-04-01': 999.5696999999999, 'minisathackcontrasat_2011-03-02': 748.676488, 'SAT09referencesolverglucose_1.0': 1761.96, 'minisathackminisat_psm_2011-04-01': 1175.1730499999999, 'MPhaseSAT64_2011-05-14_fixed_': 18139.24949, 'EBGlucose_1.0': 3012.9838, 'minisathackMiniSAT_2.2.0-agile-26': 1611.924971, 'CryptoMiniSat_Strange-Night2-st_fixed_': 7449.210459999999, 'minisathackcir_minisat_2011-05-13_simp_': 794.152497, 'QuteRSat_2011-05-12_fixed_': 20680.214415, 'SAT09referencesolverprecosat_236': 4432.881372, 'Lingeling_587f_fixed_': 10308.949500000002, 'RestartSAT_B95': 9362.944313999998, 'minisathackreferenceminisat_2.2.0': 3026.339996, 'minisathackEBMiniSAT_2011-03-02': 181.82723800000002, 'glucose_2': 9830.662042, 'glueminisat_2.2.5': 6339.7119330000005}
