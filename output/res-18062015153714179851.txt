Started solving  /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-HAND
% Command line arguments:
% --aslib-dir /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-HAND --model-dir MODEL_DIR --print-times /home/misir/Desktop/liclipse/Workspace/flexfolio-data_filtering-v3/output/res-18062015153714179851-SAT11-HAND.csv
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-HAND/description.txt
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-HAND/algorithm_runs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-HAND/feature_values.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-HAND/feature_runstatus.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-HAND/ground_truth.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-HAND/feature_costs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-HAND/cv.arff
% 1-th repetition: 30,29,30,29,30,30,30,30,29,29 distribution
% Used Feature Steps: Pre,Basic,KLB,CG
% Used features: CG_mean,BINARYp,reducedVars,VG_mean,VCG_VAR_mean,VG_min,VCG_VAR_coeff_variation,nvarsOrig,CG_coeff_variation,VG_max,CG_max,POSNEG_RATIO_CLAUSE_max,horn_clauses_fraction,nclauses,vars_clauses_ratio,CG_entropy,UNARY,cluster_coeff_mean,VCG_CLAUSE_coeff_variation,POSNEG_RATIO_VAR_max,VCG_VAR_max,POSNEG_RATIO_VAR_entropy,TRINARYp,POSNEG_RATIO_VAR_min,HORNY_VAR_max,VCG_CLAUSE_mean,VCG_CLAUSE_min,cluster_coeff_entropy,POSNEG_RATIO_CLAUSE_min,HORNY_VAR_coeff_variation,VCG_VAR_min,nvars,nclausesOrig,POSNEG_RATIO_CLAUSE_mean,CG_min,VG_coeff_variation,POSNEG_RATIO_VAR_mean,cluster_coeff_coeff_variation,POSNEG_RATIO_CLAUSE_coeff_variation,VCG_CLAUSE_entropy,VCG_VAR_entropy,cluster_coeff_min,POSNEG_RATIO_VAR_stdev,HORNY_VAR_entropy,cluster_coeff_max,HORNY_VAR_mean,VCG_CLAUSE_max,HORNY_VAR_min,POSNEG_RATIO_CLAUSE_entropy,reducedClauses
% 
% Check Consistency and Completeness of input data
% Instances: 		 296
% Algorithms: 		 15
% Incomplete Feature Vector: 	 0 (maybe imputed)
% Unsolvable Instances (status): 	 77
% Unsolvable Instances (runtime): 	 77
% Valid Instances: 	 219
% Presolved: 		 0
% Average Feature Costs: 	 41.2297
% Use given CV of 1-th repetition
% >>> 1-th iteration<<<
('sr: ', array([ 239129.98488024,   51481.71873625,   29372.77628454,
         27011.63364644,   22577.10751281,   22058.6590417 ]), ' - svd_k: ', 6)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])
('top_ft_inx_arr: ', array([ 0,  3,  5,  7, 11, 13, 15, 16, 19, 20, 23, 24, 25, 26, 27, 29, 35,
       39, 41, 42, 43, 45, 46, 47, 48]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  3  5  7 11 13 15 16 19 20 23 24 25 26 27 29 35 39 41 42 43 45 46 47 48]
(25 out of 50) Features to keep are determined: 0, 3, 5, 7, 11, 13, 15, 16, 19, 20, 23, 24, 25, 26, 27, 29, 35, 39, 41, 42, 43, 45, 46, 47, 48
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14')
(15 out of 15) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
('INIT -> Best k = ', 2, ' - best_score = ', 0.34580855439957447)
('INIT -> Best k = ', 3, ' - best_score = ', 0.36242299462759631)
('INIT -> Best k = ', 5, ' - best_score = ', 0.39824781227629119)
('INIT -> Best k = ', 6, ' - best_score = ', 0.41528684958218975)
('INIT -> Best k = ', 7, ' - best_score = ', 0.43800991828094987)
('INIT -> Best k = ', 8, ' - best_score = ', 0.45420859283312082)
('INIT -> Best k = ', 9, ' - best_score = ', 0.50199305234346114)
('INIT -> Best k = ', 10, ' - best_score = ', 0.52242425200979059)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 87, ' - score_right = ', -1)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.66610436847554333, 'k_right = ', 87, ' - score_right = ', 0.59584721492877801)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.66610436847554333, 'k_right = ', 67, ' - score_right = ', 0.65504923353044342)
('Best k = ', 57, 'k_left = ', 48, ' - score_left = ', 0.66610436847554333, 'k_right = ', 57, ' - score_right = ', 0.66767278271288433)
(@choose_rep_subset_insts_as_reduction) num_clusters=  57
('inst_per_cls : ', array([155, 225,  21, 157, 238, 183, 169, 127, 216,  28, 105, 214,  15,
        48, 109, 162,  87, 133, 185, 240,   6, 250, 210, 211,  84, 122,
        57,   9, 104, 181, 107, 222,  42, 130, 230, 259,  94, 161, 223,
        22, 132,  49,  78,  37, 226, 233, 192, 237,  31, 113, 150,  24,
       189, 153, 156, 167,  54,  59, 196, 258,   2, 262, 187,  62,   7,
       265,  41,   5,  56, 117, 111, 140, 197, 154, 120,  29, 131,  90,
       188, 119,  60,  14,  71, 142,  53,  95, 184, 165,  20, 103, 141]))
(91 out of 266) Instances to keep are determined: 2, 5, 6, 7, 9, 14, 15, 20, 21, 22, 24, 28, 29, 31, 37, 41, 42, 48, 49, 53, 54, 56, 57, 59, 60, 62, 71, 78, 84, 87, 90, 94, 95, 103, 104, 105, 107, 109, 111, 113, 117, 119, 120, 122, 127, 130, 131, 132, 133, 140, 141, 142, 150, 153, 154, 155, 156, 157, 161, 162, 165, 167, 169, 181, 183, 184, 185, 187, 188, 189, 192, 196, 197, 210, 211, 214, 216, 222, 223, 225, 226, 230, 233, 237, 238, 240, 250, 258, 259, 262, 265
% Backup Solver: SAT09referencesolverclasp_1.2.0-SAT09-32
% Input Instances for Training: 91 (-unsolvable)
% Used Instances for Training: 91 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 17149.87 (30 instances)
% >>> 2-th iteration<<<
('sr: ', array([ 237996.3051929 ,   53040.52857871,   30789.72106803,
         27819.99501693,   23576.73579964,   22949.88738089]), ' - svd_k: ', 6)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])
('top_ft_inx_arr: ', array([ 2,  5,  6,  7,  8, 11, 13, 15, 16, 23, 24, 25, 26, 29, 30, 31, 33,
       35, 38, 39, 41, 43, 45, 47, 49]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 2  5  6  7  8 11 13 15 16 23 24 25 26 29 30 31 33 35 38 39 41 43 45 47 49]
(25 out of 50) Features to keep are determined: 2, 5, 6, 7, 8, 11, 13, 15, 16, 23, 24, 25, 26, 29, 30, 31, 33, 35, 38, 39, 41, 43, 45, 47, 49
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14')
(15 out of 15) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
('INIT -> Best k = ', 2, ' - best_score = ', 0.33442553560053934)
('INIT -> Best k = ', 3, ' - best_score = ', 0.35743159345578668)
('INIT -> Best k = ', 4, ' - best_score = ', 0.36368798760739374)
('INIT -> Best k = ', 5, ' - best_score = ', 0.3951688737557657)
('INIT -> Best k = ', 6, ' - best_score = ', 0.42712158429354369)
('INIT -> Best k = ', 7, ' - best_score = ', 0.45246237360162406)
('INIT -> Best k = ', 8, ' - best_score = ', 0.45389431666293301)
('INIT -> Best k = ', 9, ' - best_score = ', 0.48780543405766807)
('INIT -> Best k = ', 10, ' - best_score = ', 0.52646976572318904)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 88, ' - score_right = ', -1)
('Best k = ', 49, 'k_left = ', 49, ' - score_left = ', 0.67043633069496222, 'k_right = ', 88, ' - score_right = ', 0.61037717259985114)
('Best k = ', 49, 'k_left = ', 49, ' - score_left = ', 0.67043633069496222, 'k_right = ', 68, ' - score_right = ', 0.66782593479751517)
(@choose_rep_subset_insts_as_reduction) num_clusters=  49
('inst_per_cls : ', array([  8, 134, 153,  99, 222, 122, 230, 260, 113, 223,  25,  48,  36,
        74, 226, 233, 159,  56, 109,   7, 266, 117,  57,  10,  97, 156,
       238, 185, 169, 119, 216,  31,  98, 124, 199, 212,  80, 114,  60,
       136,  89, 186,  87,  47, 101, 162, 246,  16,  23, 174, 240,   6,
       220, 175,  55,  90,  53, 100,  43, 155, 167,  34, 105, 148, 125,
       259,  46, 263, 189,   2,  11, 195, 237, 149, 128, 191, 228,  44,
        39, 218, 215, 151,  27,  67, 108, 154, 219, 112, 200, 190, 127,
        85,  59, 103,  32,  15,  71,  96]))
(98 out of 267) Instances to keep are determined: 2, 6, 7, 8, 10, 11, 15, 16, 23, 25, 27, 31, 32, 34, 36, 39, 43, 44, 46, 47, 48, 53, 55, 56, 57, 59, 60, 67, 71, 74, 80, 85, 87, 89, 90, 96, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 113, 114, 117, 119, 122, 124, 125, 127, 128, 134, 136, 148, 149, 151, 153, 154, 155, 156, 159, 162, 167, 169, 174, 175, 185, 186, 189, 190, 191, 195, 199, 200, 212, 215, 216, 218, 219, 220, 222, 223, 226, 228, 230, 233, 237, 238, 240, 246, 259, 260, 263, 266
% Backup Solver: SAT09referencesolverclasp_1.2.0-SAT09-32
% Input Instances for Training: 98 (-unsolvable)
% Used Instances for Training: 98 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 16288.07 (29 instances)
% >>> 3-th iteration<<<
('sr: ', array([ 240271.98720955,   51766.48937005,   30042.41409309,
         27491.84836125,   23099.23916584,   21951.27353838]), ' - svd_k: ', 6)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])
('top_ft_inx_arr: ', array([ 3,  4,  5,  7, 11, 13, 15, 16, 18, 19, 21, 23, 24, 26, 29, 31, 33,
       34, 35, 38, 39, 41, 43, 45, 47]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 3  4  5  7 11 13 15 16 18 19 21 23 24 26 29 31 33 34 35 38 39 41 43 45 47]
(25 out of 50) Features to keep are determined: 3, 4, 5, 7, 11, 13, 15, 16, 18, 19, 21, 23, 24, 26, 29, 31, 33, 34, 35, 38, 39, 41, 43, 45, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14')
(15 out of 15) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
('INIT -> Best k = ', 2, ' - best_score = ', 0.33824622891837808)
('INIT -> Best k = ', 4, ' - best_score = ', 0.35451058772791727)
('INIT -> Best k = ', 5, ' - best_score = ', 0.39483793319747607)
('INIT -> Best k = ', 6, ' - best_score = ', 0.42036538956596992)
('INIT -> Best k = ', 7, ' - best_score = ', 0.44993734547464509)
('INIT -> Best k = ', 8, ' - best_score = ', 0.47384566231505765)
('INIT -> Best k = ', 9, ' - best_score = ', 0.48821549552187637)
('INIT -> Best k = ', 10, ' - best_score = ', 0.50239003004998484)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 87, ' - score_right = ', -1)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.67610779459322989, 'k_right = ', 87, ' - score_right = ', 0.61158684959745591)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.67610779459322989, 'k_right = ', 67, ' - score_right = ', 0.64889773716882471)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.67610779459322989, 'k_right = ', 57, ' - score_right = ', 0.67101641412396962)
(@choose_rep_subset_insts_as_reduction) num_clusters=  48
('inst_per_cls : ', array([105, 223,  41, 161, 231, 260,  92, 224,  22, 128,  48,  32,  78,
        36, 157, 186,  65, 217,  28, 103, 244,  23,  30, 111, 151, 247,
        97,  42, 202, 100,   8, 102, 110, 199, 214,  84, 191, 229, 116,
       140,  53,  93, 187, 250, 258, 201,  15,  47, 107, 164, 160,  20,
       176, 240, 221, 177,  54,  60, 132,  39, 156, 169,  61,  44, 195,
       238,   9, 127,  63,   5,  94, 179, 129, 259,  89, 120, 200, 190,
        24,  56, 155,   4, 189, 197, 131, 109,  57, 108, 207, 101, 153,
       138,  34,   6]))
(94 out of 266) Instances to keep are determined: 4, 5, 6, 8, 9, 15, 20, 22, 23, 24, 28, 30, 32, 34, 36, 39, 41, 42, 44, 47, 48, 53, 54, 56, 57, 60, 61, 63, 65, 78, 84, 89, 92, 93, 94, 97, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 116, 120, 127, 128, 129, 131, 132, 138, 140, 151, 153, 155, 156, 157, 160, 161, 164, 169, 176, 177, 179, 186, 187, 189, 190, 191, 195, 197, 199, 200, 201, 202, 207, 214, 217, 221, 223, 224, 229, 231, 238, 240, 244, 247, 250, 258, 259, 260
% Backup Solver: SAT09referencesolverclasp_1.2.0-SAT09-32
% Input Instances for Training: 94 (-unsolvable)
% Used Instances for Training: 94 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 16808.59 (30 instances)
% >>> 4-th iteration<<<
('sr: ', array([ 238496.90439815,   52434.11953665,   29220.12148468,
         26048.72029926,   22982.18075351,   20432.18465331]), ' - svd_k: ', 6)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])
('top_ft_inx_arr: ', array([ 0,  6,  7,  8, 11, 13, 15, 16, 18, 23, 24, 25, 26, 27, 29, 31, 32,
       33, 35, 39, 41, 43, 45, 47, 49]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  6  7  8 11 13 15 16 18 23 24 25 26 27 29 31 32 33 35 39 41 43 45 47 49]
(25 out of 50) Features to keep are determined: 0, 6, 7, 8, 11, 13, 15, 16, 18, 23, 24, 25, 26, 27, 29, 31, 32, 33, 35, 39, 41, 43, 45, 47, 49
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14')
(15 out of 15) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
('INIT -> Best k = ', 2, ' - best_score = ', 0.36209068034333552)
('INIT -> Best k = ', 5, ' - best_score = ', 0.4042107168103285)
('INIT -> Best k = ', 6, ' - best_score = ', 0.43544915764651537)
('INIT -> Best k = ', 8, ' - best_score = ', 0.47300087520507617)
('INIT -> Best k = ', 9, ' - best_score = ', 0.49381967262194942)
('INIT -> Best k = ', 10, ' - best_score = ', 0.53957278324633795)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 88, ' - score_right = ', -1)
('Best k = ', 49, 'k_left = ', 49, ' - score_left = ', 0.6708977996151948, 'k_right = ', 88, ' - score_right = ', 0.59750349338143238)
('Best k = ', 49, 'k_left = ', 49, ' - score_left = ', 0.6708977996151948, 'k_right = ', 68, ' - score_right = ', 0.65808564759745258)
('Best k = ', 58, 'k_left = ', 49, ' - score_left = ', 0.6708977996151948, 'k_right = ', 58, ' - score_right = ', 0.67121865645274992)
(@choose_rep_subset_insts_as_reduction) num_clusters=  58
('inst_per_cls : ', array([190, 258, 202,  45, 230,   9, 108, 213, 215,  88, 125, 160, 242,
       189, 238, 130, 220, 187, 218,  24, 233,  16,  50, 112, 167,  91,
       163,  21, 264, 244,   6, 224, 180,  47,  65,  58, 110,  44, 235,
       260,  98, 254, 227,  23, 134,  51,  34,  81,  39, 231, 237, 164,
       114,  32, 121, 200, 259,   2, 256, 266,  25, 206, 221, 153, 249,
       136,  43, 263, 192, 203, 159, 172,  62, 176,  59, 156,  76, 158,
       122,  37,  30,  94,  15,  75, 223,  22, 120, 143,  99, 124, 201, 107]))
(92 out of 267) Instances to keep are determined: 2, 6, 9, 15, 16, 21, 22, 23, 24, 25, 30, 32, 34, 37, 39, 43, 44, 45, 47, 50, 51, 58, 59, 62, 65, 75, 76, 81, 88, 91, 94, 98, 99, 107, 108, 110, 112, 114, 120, 121, 122, 124, 125, 130, 134, 136, 143, 153, 156, 158, 159, 160, 163, 164, 167, 172, 176, 180, 187, 189, 190, 192, 200, 201, 202, 203, 206, 213, 215, 218, 220, 221, 223, 224, 227, 230, 231, 233, 235, 237, 238, 242, 244, 249, 254, 256, 258, 259, 260, 263, 264, 266
% Backup Solver: SAT09referencesolverclasp_1.2.0-SAT09-32
% Input Instances for Training: 92 (-unsolvable)
% Used Instances for Training: 92 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 25969.36 (29 instances)
% >>> 5-th iteration<<<
('sr: ', array([ 235470.14090719,   51846.9750951 ,   31035.68089828,
         27726.57252427,   23111.14070226,   22639.01002026]), ' - svd_k: ', 6)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])
('top_ft_inx_arr: ', array([ 1,  3,  6,  7, 11, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 32,
       33, 35, 36, 38, 41, 43, 45, 47]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 1  3  6  7 11 13 15 16 18 21 22 23 25 27 29 31 32 33 35 36 38 41 43 45 47]
(25 out of 50) Features to keep are determined: 1, 3, 6, 7, 11, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 32, 33, 35, 36, 38, 41, 43, 45, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14')
(15 out of 15) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
('INIT -> Best k = ', 2, ' - best_score = ', 0.32437588380009391)
('INIT -> Best k = ', 3, ' - best_score = ', 0.35400036632599075)
('INIT -> Best k = ', 5, ' - best_score = ', 0.37591015787450505)
('INIT -> Best k = ', 6, ' - best_score = ', 0.39921865365311815)
('INIT -> Best k = ', 7, ' - best_score = ', 0.42335502405360825)
('INIT -> Best k = ', 8, ' - best_score = ', 0.45659020587348625)
('INIT -> Best k = ', 10, ' - best_score = ', 0.51592452033915703)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 87, ' - score_right = ', -1)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.66163375510670974, 'k_right = ', 87, ' - score_right = ', 0.60050436685223696)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.66163375510670974, 'k_right = ', 67, ' - score_right = ', 0.64896554645062343)
('Best k = ', 57, 'k_left = ', 48, ' - score_left = ', 0.66163375510670974, 'k_right = ', 57, ' - score_right = ', 0.66284374324918605)
(@choose_rep_subset_insts_as_reduction) num_clusters=  57
('inst_per_cls : ', array([194, 222,  45, 131, 259,  97, 123, 223,  24, 133,  50,  34,  80,
        40, 226, 232, 127, 104,   9, 107, 185, 161, 237, 186,  72, 128,
       216,  29, 108, 214, 262, 207,  95,  49, 114, 245,  15,  22, 188,
       239,   6, 220, 118,  55,  98, 187, 249, 191, 228, 195,  14,  74,
       210, 211,  87, 124,  62,  47,  56, 110,  61, 156, 254,   7,  99,
        32, 154, 246,   2,  58, 197, 184,  44,  38, 116, 160, 219,  23,
        10,  30, 135, 142, 169, 122,  12, 117, 159, 120, 119,  93, 170,
       148,  26,  19, 106]))
(95 out of 266) Instances to keep are determined: 2, 6, 7, 9, 10, 12, 14, 15, 19, 22, 23, 24, 26, 29, 30, 32, 34, 38, 40, 44, 45, 47, 49, 50, 55, 56, 58, 61, 62, 72, 74, 80, 87, 93, 95, 97, 98, 99, 104, 106, 107, 108, 110, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 131, 133, 135, 142, 148, 154, 156, 159, 160, 161, 169, 170, 184, 185, 186, 187, 188, 191, 194, 195, 197, 207, 210, 211, 214, 216, 219, 220, 222, 223, 226, 228, 232, 237, 239, 245, 246, 249, 254, 259, 262
% Backup Solver: clasp_2.0-R4092-crafted
% Input Instances for Training: 95 (-unsolvable)
% Used Instances for Training: 95 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 28495.06 (30 instances)
% >>> 6-th iteration<<<
('sr: ', array([ 238684.38322719,   51572.31201158,   29721.03843926,
         27764.69419204,   23269.36466756,   22132.69732307]), ' - svd_k: ', 6)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])
('top_ft_inx_arr: ', array([ 0,  4,  7,  8, 11, 13, 15, 16, 21, 23, 24, 27, 29, 30, 31, 33, 35,
       38, 39, 40, 41, 43, 45, 47, 48]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  4  7  8 11 13 15 16 21 23 24 27 29 30 31 33 35 38 39 40 41 43 45 47 48]
(25 out of 50) Features to keep are determined: 0, 4, 7, 8, 11, 13, 15, 16, 21, 23, 24, 27, 29, 30, 31, 33, 35, 38, 39, 40, 41, 43, 45, 47, 48
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14')
(15 out of 15) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
('INIT -> Best k = ', 2, ' - best_score = ', 0.36410911710177279)
('INIT -> Best k = ', 5, ' - best_score = ', 0.39650313070926657)
('INIT -> Best k = ', 6, ' - best_score = ', 0.42503066006100565)
('INIT -> Best k = ', 8, ' - best_score = ', 0.47383247845179211)
('INIT -> Best k = ', 9, ' - best_score = ', 0.50533586842173972)
('INIT -> Best k = ', 10, ' - best_score = ', 0.54728959519756504)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 87, ' - score_right = ', -1)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.6703487963581316, 'k_right = ', 87, ' - score_right = ', 0.59403366029000304)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.6703487963581316, 'k_right = ', 67, ' - score_right = ', 0.64970258323533314)
('Best k = ', 57, 'k_left = ', 48, ' - score_left = ', 0.6703487963581316, 'k_right = ', 57, ' - score_right = ', 0.67327563703232873)
(@choose_rep_subset_insts_as_reduction) num_clusters=  57
('inst_per_cls : ', array([ 63,   6,  15,  17, 155, 238, 184, 234, 121, 216,  30,  99, 133,
        16,  48, 162, 246, 158,  22, 264, 240,   5, 220, 175, 101, 222,
        43, 124, 230, 260,  90, 115, 223,  24, 126,  49,  34,  39, 227,
       159, 229,  54,  60,  44, 226,   9, 182, 210, 137,  53,  91, 250,
        21, 258, 263, 187, 135, 114,  92,   2, 196, 259,  56, 104, 128,
       202, 106, 147, 247, 231,  37, 150, 153, 219,  23,  26, 193, 212,
        80, 116, 110,  31, 112, 205,  32, 111, 154, 166,  46, 233]))
(90 out of 266) Instances to keep are determined: 2, 5, 6, 9, 15, 16, 17, 21, 22, 23, 24, 26, 30, 31, 32, 34, 37, 39, 43, 44, 46, 48, 49, 53, 54, 56, 60, 63, 80, 90, 91, 92, 99, 101, 104, 106, 110, 111, 112, 114, 115, 116, 121, 124, 126, 128, 133, 135, 137, 147, 150, 153, 154, 155, 158, 159, 162, 166, 175, 182, 184, 187, 193, 196, 202, 205, 210, 212, 216, 219, 220, 222, 223, 226, 227, 229, 230, 231, 233, 234, 238, 240, 246, 247, 250, 258, 259, 260, 263, 264
% Backup Solver: SAT09referencesolverclasp_1.2.0-SAT09-32
% Input Instances for Training: 90 (-unsolvable)
% Used Instances for Training: 90 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 15550.55 (30 instances)
% >>> 7-th iteration<<<
('sr: ', array([ 237157.43940312,   51322.45318595,   28917.84666363,
         26461.19688958,   22636.19160593,   21866.98414733]), ' - svd_k: ', 6)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])
('top_ft_inx_arr: ', array([ 0,  2,  5,  6, 11, 13, 15, 16, 18, 19, 23, 25, 27, 28, 29, 33, 35,
       36, 39, 40, 41, 42, 43, 45, 47]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  2  5  6 11 13 15 16 18 19 23 25 27 28 29 33 35 36 39 40 41 42 43 45 47]
(25 out of 50) Features to keep are determined: 0, 2, 5, 6, 11, 13, 15, 16, 18, 19, 23, 25, 27, 28, 29, 33, 35, 36, 39, 40, 41, 42, 43, 45, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14')
(15 out of 15) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
('INIT -> Best k = ', 2, ' - best_score = ', 0.26551983935105572)
('INIT -> Best k = ', 3, ' - best_score = ', 0.31630720084126451)
('INIT -> Best k = ', 4, ' - best_score = ', 0.39685423538812792)
('INIT -> Best k = ', 5, ' - best_score = ', 0.40389322185720783)
('INIT -> Best k = ', 6, ' - best_score = ', 0.42169114702807126)
('INIT -> Best k = ', 7, ' - best_score = ', 0.45072516358195436)
('INIT -> Best k = ', 8, ' - best_score = ', 0.46767659765909769)
('INIT -> Best k = ', 9, ' - best_score = ', 0.49229252806980528)
('INIT -> Best k = ', 10, ' - best_score = ', 0.53183431799871217)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 87, ' - score_right = ', -1)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.66680200525282507, 'k_right = ', 87, ' - score_right = ', 0.60687685729020813)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.66680200525282507, 'k_right = ', 67, ' - score_right = ', 0.66358060607105107)
(@choose_rep_subset_insts_as_reduction) num_clusters=  48
('inst_per_cls : ', array([ 66,   7,  47,  75,  16,  46, 203,  61,  10, 105, 214,  87, 124,
        15,  51, 114, 167, 247, 213,  22, 263, 241,   6, 222, 107, 224,
        45, 132, 231, 260,  96, 123, 225,  24, 134,  35,  81,  40, 218,
        27,  33, 119, 193, 196, 239, 235, 129,  30, 245,  26, 230,  64,
        48,  71, 118, 143,  56, 188, 249, 217, 175,   3, 256, 111,   2,
       146,  98, 200, 259, 262, 191, 136, 104, 116, 159, 221,  59, 160,
       147,  60, 229, 207,  31, 179, 113, 153, 158, 120,   8,  57,  63,
        39, 141, 122]))
(94 out of 266) Instances to keep are determined: 2, 3, 6, 7, 8, 10, 15, 16, 22, 24, 26, 27, 30, 31, 33, 35, 39, 40, 45, 46, 47, 48, 51, 56, 57, 59, 60, 61, 63, 64, 66, 71, 75, 81, 87, 96, 98, 104, 105, 107, 111, 113, 114, 116, 118, 119, 120, 122, 123, 124, 129, 132, 134, 136, 141, 143, 146, 147, 153, 158, 159, 160, 167, 175, 179, 188, 191, 193, 196, 200, 203, 207, 213, 214, 217, 218, 221, 222, 224, 225, 229, 230, 231, 235, 239, 241, 245, 247, 249, 256, 259, 260, 262, 263
% Backup Solver: SAT09referencesolverclasp_1.2.0-SAT09-32
% Input Instances for Training: 94 (-unsolvable)
% Used Instances for Training: 94 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 16987.15 (30 instances)
% >>> 8-th iteration<<<
('sr: ', array([ 238796.74798225,   50724.65239146,   30510.30835069,
         26806.00579548,   22836.51504836,   22289.90721112]), ' - svd_k: ', 6)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])
('top_ft_inx_arr: ', array([ 1,  5,  6,  7,  8, 11, 13, 15, 16, 23, 27, 29, 30, 31, 32, 33, 34,
       35, 36, 37, 39, 40, 43, 45, 47]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 1  5  6  7  8 11 13 15 16 23 27 29 30 31 32 33 34 35 36 37 39 40 43 45 47]
(25 out of 50) Features to keep are determined: 1, 5, 6, 7, 8, 11, 13, 15, 16, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 45, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14')
(15 out of 15) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
('INIT -> Best k = ', 2, ' - best_score = ', 0.36427885348315153)
('INIT -> Best k = ', 5, ' - best_score = ', 0.40289412382858458)
('INIT -> Best k = ', 6, ' - best_score = ', 0.42634663132431433)
('INIT -> Best k = ', 7, ' - best_score = ', 0.45626167823958047)
('INIT -> Best k = ', 8, ' - best_score = ', 0.47269133750803738)
('INIT -> Best k = ', 9, ' - best_score = ', 0.51480450310075465)
('INIT -> Best k = ', 10, ' - best_score = ', 0.5356142063619338)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 87, ' - score_right = ', -1)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.65291229066795808, 'k_right = ', 87, ' - score_right = ', 0.59959337607615459)
('Best k = ', 48, 'k_left = ', 48, ' - score_left = ', 0.65291229066795808, 'k_right = ', 67, ' - score_right = ', 0.63103504116775011)
('Best k = ', 57, 'k_left = ', 48, ' - score_left = ', 0.65291229066795808, 'k_right = ', 57, ' - score_right = ', 0.65797079672062542)
(@choose_rep_subset_insts_as_reduction) num_clusters=  57
('inst_per_cls : ', array([161, 224, 102, 163, 238, 190, 235, 129, 221,  31, 107, 140, 116,
       169, 246,  17,  24, 192, 240,   6, 225, 180, 217, 218, 125,  71,
       119, 144,  55,  97, 191, 172, 113,  34, 120, 109, 227,  46, 131,
       231,  96, 124,  25, 133,  51,  36,  82,  41, 228,  28, 166, 229,
        63,  48,  98,  60,  10, 106, 188, 216,  44, 162, 174, 202, 259,
        65,   7,  47, 147, 256, 208, 115, 247, 232,  92, 211,  56,  62,
       142, 123, 262,  35,  32,  59, 158,  16,  75,  39,  21, 105, 160]))
(91 out of 266) Instances to keep are determined: 6, 7, 10, 16, 17, 21, 24, 25, 28, 31, 32, 34, 35, 36, 39, 41, 44, 46, 47, 48, 51, 55, 56, 59, 60, 62, 63, 65, 71, 75, 82, 92, 96, 97, 98, 102, 105, 106, 107, 109, 113, 115, 116, 119, 120, 123, 124, 125, 129, 131, 133, 140, 142, 144, 147, 158, 160, 161, 162, 163, 166, 169, 172, 174, 180, 188, 190, 191, 192, 202, 208, 211, 216, 217, 218, 221, 224, 225, 227, 228, 229, 231, 232, 235, 238, 240, 246, 247, 256, 259, 262
% Backup Solver: SAT09referencesolverclasp_1.2.0-SAT09-32
% Input Instances for Training: 91 (-unsolvable)
% Used Instances for Training: 91 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 22059.03 (30 instances)
% >>> 9-th iteration<<<
('sr: ', array([ 237480.34459304,   51303.92784215,   29958.7226333 ,
         27005.65262298,   23623.20540195,   21585.21877867]), ' - svd_k: ', 6)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])
('top_ft_inx_arr: ', array([ 3,  7,  8, 11, 13, 15, 16, 19, 22, 23, 27, 29, 31, 32, 33, 34, 35,
       36, 38, 39, 40, 41, 42, 45, 47]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 3  7  8 11 13 15 16 19 22 23 27 29 31 32 33 34 35 36 38 39 40 41 42 45 47]
(25 out of 50) Features to keep are determined: 3, 7, 8, 11, 13, 15, 16, 19, 22, 23, 27, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14')
(15 out of 15) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
('INIT -> Best k = ', 2, ' - best_score = ', 0.2608743509983395)
('INIT -> Best k = ', 3, ' - best_score = ', 0.29868900464739828)
('INIT -> Best k = ', 5, ' - best_score = ', 0.35378063591154424)
('INIT -> Best k = ', 7, ' - best_score = ', 0.42494819255392086)
('INIT -> Best k = ', 8, ' - best_score = ', 0.45580848301103372)
('INIT -> Best k = ', 9, ' - best_score = ', 0.47926774883699896)
('INIT -> Best k = ', 10, ' - best_score = ', 0.51743088961783101)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 88, ' - score_right = ', -1)
('Best k = ', 49, 'k_left = ', 49, ' - score_left = ', 0.64300898335198187, 'k_right = ', 88, ' - score_right = ', 0.59615492027826034)
('Best k = ', 49, 'k_left = ', 49, ' - score_left = ', 0.64300898335198187, 'k_right = ', 68, ' - score_right = ', 0.64287680579765039)
(@choose_rep_subset_insts_as_reduction) num_clusters=  49
('inst_per_cls : ', array([157, 240, 187, 236, 218,  27, 102, 155, 221,  21,  13,  47, 109,
       164, 246, 160,  20,   5, 222, 178,  33, 214,  82, 119, 224,  42,
       126, 232, 260,  91, 118, 225, 127,  48,  32,  77,  37, 228,  24,
       161, 197,  56, 230, 168, 205, 108, 149,  93,  99, 101, 185, 213,
       113, 137,  52,  92, 188,  19,  69, 208,  53,  59, 150,  60,  45,
       154, 115,  55,  40, 156, 106,  28, 135, 117, 200,  30,  62,   6,
        44, 259, 129,  23,  87, 256,  35,   2, 140,  10,  12,  71,   7,
       136, 263, 193, 217, 152, 100]))
(97 out of 267) Instances to keep are determined: 2, 5, 6, 7, 10, 12, 13, 19, 20, 21, 23, 24, 27, 28, 30, 32, 33, 35, 37, 40, 42, 44, 45, 47, 48, 52, 53, 55, 56, 59, 60, 62, 69, 71, 77, 82, 87, 91, 92, 93, 99, 100, 101, 102, 106, 108, 109, 113, 115, 117, 118, 119, 126, 127, 129, 135, 136, 137, 140, 149, 150, 152, 154, 155, 156, 157, 160, 161, 164, 168, 178, 185, 187, 188, 193, 197, 200, 205, 208, 213, 214, 217, 218, 221, 222, 224, 225, 228, 230, 232, 236, 240, 246, 256, 259, 260, 263
% Backup Solver: SAT09referencesolverclasp_1.2.0-SAT09-32
% Input Instances for Training: 97 (-unsolvable)
% Used Instances for Training: 97 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 22771.76 (29 instances)
% >>> 10-th iteration<<<
('sr: ', array([ 238492.30889223,   51619.2745839 ,   30732.13420569,
         27177.67371228,   23431.6442503 ,   21844.17458595]), ' - svd_k: ', 6)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])
('top_ft_inx_arr: ', array([ 2,  3,  4,  5,  6,  7, 11, 13, 15, 16, 18, 21, 23, 24, 25, 27, 28,
       33, 35, 38, 39, 41, 45, 46, 48]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 2  3  4  5  6  7 11 13 15 16 18 21 23 24 25 27 28 33 35 38 39 41 45 46 48]
(25 out of 50) Features to keep are determined: 2, 3, 4, 5, 6, 7, 11, 13, 15, 16, 18, 21, 23, 24, 25, 27, 28, 33, 35, 38, 39, 41, 45, 46, 48
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14')
(15 out of 15) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
('INIT -> Best k = ', 2, ' - best_score = ', 0.35859769288593318)
('INIT -> Best k = ', 3, ' - best_score = ', 0.36806766257627527)
('INIT -> Best k = ', 5, ' - best_score = ', 0.38127655100130731)
('INIT -> Best k = ', 6, ' - best_score = ', 0.40794966124312454)
('INIT -> Best k = ', 7, ' - best_score = ', 0.43190981341910295)
('INIT -> Best k = ', 8, ' - best_score = ', 0.46427686703739846)
('INIT -> Best k = ', 9, ' - best_score = ', 0.48125237643404573)
('INIT -> Best k = ', 10, ' - best_score = ', 0.50075317178550194)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 88, ' - score_right = ', -1)
('Best k = ', 49, 'k_left = ', 49, ' - score_left = ', 0.65656670395094474, 'k_right = ', 88, ' - score_right = ', 0.58893215703931101)
('Best k = ', 49, 'k_left = ', 49, ' - score_left = ', 0.65656670395094474, 'k_right = ', 68, ' - score_right = ', 0.64831383813921539)
(@choose_rep_subset_insts_as_reduction) num_clusters=  49
('inst_per_cls : ', array([ 77, 145,  49,   9, 107, 188,  74, 164, 240, 190, 236, 131, 221,
        32, 108,  16,  54, 116, 169, 248,  23, 192, 242,   5, 224,  33,
       215, 216,  88,   7, 144, 120, 146,  58,  99, 191, 251,  22, 109,
       226,  48, 134, 233, 261,  98, 125, 227,  25, 135,  55,  37,  82,
        43,  28, 100,  62, 119, 124,  35,  92,  46, 163, 113,  13,  10,
        68,   6,  66,  51, 257, 206, 115, 156, 249,  61, 203, 260, 157,
       263, 194, 159, 137, 162, 223,  24, 103, 179,  59,  65, 161, 122,
        15,  76, 200,  94, 231]))
(96 out of 267) Instances to keep are determined: 5, 6, 7, 9, 10, 13, 15, 16, 22, 23, 24, 25, 28, 32, 33, 35, 37, 43, 46, 48, 49, 51, 54, 55, 58, 59, 61, 62, 65, 66, 68, 74, 76, 77, 82, 88, 92, 94, 98, 99, 100, 103, 107, 108, 109, 113, 115, 116, 119, 120, 122, 124, 125, 131, 134, 135, 137, 144, 145, 146, 156, 157, 159, 161, 162, 163, 164, 169, 179, 188, 190, 191, 192, 194, 200, 203, 206, 215, 216, 221, 223, 224, 226, 227, 231, 233, 236, 240, 242, 248, 249, 251, 257, 260, 261, 263
% Backup Solver: SAT09referencesolverclasp_1.2.0-SAT09-32
% Input Instances for Training: 96 (-unsolvable)
% Used Instances for Training: 96 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 22636.72 (29 instances)
% 
%  >>> Instances: 296 <<<
%  >>> Oracle Evaluation (w/o unsolved) <<<
% 
% Unsolved (not by any algorithm and not by feature computation): 77
% PAR1 time: 1654.842993 (478.691899)
% Par10 time: 13360.663939 (478.340301)
% #TOs: 77 (0)
% 
%  >>> Cross Fold Evaluation <<<
% 
% Presolved: 0
% >>>With Unsolvable Instances
% Timeouts per #Thread: {1: 119, 2: 109, 3: 101, 4: 93, 5: 88, 6: 86, 7: 85, 8: 84, 9: 82, 10: 80, 11: 79, 12: 79, 13: 79, 14: 78, 15: 77}
% Solved (perc) per #Thread: {1: 0.597972972972973, 2: 0.6317567567567568, 3: 0.6587837837837838, 4: 0.6858108108108107, 5: 0.7027027027027026, 6: 0.7094594594594594, 7: 0.7128378378378378, 8: 0.7162162162162162, 9: 0.722972972972973, 10: 0.7297297297297297, 11: 0.7331081081081081, 12: 0.7331081081081081, 13: 0.7331081081081081, 14: 0.7364864864864865, 15: 0.7398648648648649}
% AVG per #Thread: {1: 2360.874701047297, 2: 2185.2570607702696, 3: 2022.3786471756837, 4: 1949.1019652601476, 5: 1873.0764709932516, 6: 1830.7061648412193, 7: 1814.0247870405406, 8: 1796.2050756993262, 9: 1767.4457703141898, 10: 1733.6877019290523, 11: 1716.6320095574295, 12: 1716.5338083479705, 13: 1716.5296299324286, 14: 1699.9016860540487, 15: 1682.914377760128}
% PAR10 per #Thread: {1: 20452.090917263515, 2: 18756.203006716216, 3: 17377.108376905413, 4: 16087.615478773661, 5: 15251.45484937163, 6: 14905.030489165543, 7: 14736.322084337839, 8: 14566.475345969597, 9: 14233.661986530406, 10: 13895.849864091215, 11: 13726.767144692565, 12: 13726.668943483106, 13: 13726.664765067564, 14: 13558.009794162157, 15: 13388.99545884121}
% >>>Without Unsolved Instances (depends on pre-solved in feature groups)
% Timeouts: {1: 42, 2: 32, 3: 24, 4: 16, 5: 11, 6: 9, 7: 8, 8: 7, 9: 5, 10: 3, 11: 2, 12: 2, 13: 2, 14: 1, 15: 0}
% Solved (perc): {1: 0.8082191780821919, 2: 0.8538812785388128, 3: 0.8904109589041096, 4: 0.9269406392694063, 5: 0.9497716894977167, 6: 0.958904109589041, 7: 0.9634703196347032, 8: 0.9680365296803652, 9: 0.9771689497716897, 10: 0.9863013698630136, 11: 0.9908675799086758, 12: 0.9908675799086758, 13: 0.9908675799086758, 14: 0.9954337899543378, 15: 1.0}
% PAR1: {1: 1432.9630662557072, 2: 1195.5985844200902, 3: 975.4524181004673, 4: 876.4117886621174, 5: 773.6558694703309, 6: 716.388241063931, 7: 693.8417212968037, 8: 669.7566319954365, 9: 630.8856073652977, 10: 585.2582637945181, 11: 562.2058211369823, 12: 562.0730925616405, 13: 562.0674450228258, 14: 539.5931464474814, 15: 516.6331315844651}
% PAR10: {1: 10063.100052557078, 2: 7770.941050173515, 3: 5906.959267415536, 4: 4164.08302153883, 5: 3033.9298420730706, 6: 2565.703309557082, 7: 2337.67733773516, 8: 2108.112796378998, 9: 1658.2828676392703, 10: 1201.6966199589017, 11: 973.1647252465713, 12: 973.0319966712294, 13: 973.0263491324149, 14: 745.0725985022759, 15: 516.6331315844651}
% 
% Time used by each solver: {'RestartSAT_B95': 8804.476928, 'Sol_2011-04-04': 69129.25403, 'clasp_2.0-R4092-crafted': 188438.26140199995, 'CryptoMiniSat_Strange-Night2-st_fixed_': 155.124, 'MPhaseSAT_2011-02-15': 110725.49023400001, 'jMiniSat_2011': 0, 'QuteRSat_2011-05-12_fixed_': 14801.309999999998, 'glucose_2': 0, 'sathys_2011-04-01': 4999.64, 'sattime+_2011-03-02': 40890.917067999995, 'sattime_2011-03-02': 117419.03577500003, 'SAT09referencesolverclasp_1.2.0-SAT09-32': 42095.257000000005, 'SAT07referencesolverminisat_SAT2007': 33498.310227, 'SApperloT2010_2011-05-15_fixed_': 10289.198213, 'PicoSAT_941': 45368.646633000004}
% Optimal Time used by each solver: {'RestartSAT_B95': 5.46017, 'Sol_2011-04-04': 386222.6910439999, 'clasp_2.0-R4092-crafted': 31187.016032, 'CryptoMiniSat_Strange-Night2-st_fixed_': 462.69877099999997, 'MPhaseSAT_2011-02-15': 6329.150169999999, 'jMiniSat_2011': 0, 'QuteRSat_2011-05-12_fixed_': 6874.512899999999, 'glucose_2': 806.4449000000001, 'sathys_2011-04-01': 12.165192000000003, 'sattime+_2011-03-02': 2388.4237799999996, 'sattime_2011-03-02': 9533.683721, 'SAT09referencesolverclasp_1.2.0-SAT09-32': 37657.77352, 'SAT07referencesolverminisat_SAT2007': 1605.1305450000002, 'SApperloT2010_2011-05-15_fixed_': 96.45335200000001, 'PicoSAT_941': 6651.921719999999}
