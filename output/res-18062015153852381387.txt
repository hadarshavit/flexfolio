Started solving  /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-RAND
% Command line arguments:
% --aslib-dir /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-RAND --model-dir MODEL_DIR --print-times /home/misir/Desktop/liclipse/Workspace/flexfolio-data_filtering-v3/output/res-18062015153852381387-SAT11-RAND.csv
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-RAND/description.txt
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-RAND/algorithm_runs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-RAND/feature_values.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-RAND/feature_runstatus.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-RAND/ground_truth.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-RAND/feature_costs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-RAND/cv.arff
% 1-th repetition: 60,60,60,60,60,60,60,60,60,60 distribution
% Used Feature Steps: Pre,Basic,KLB,CG
% Used features: CG_mean,BINARYp,reducedVars,VG_mean,VCG_VAR_mean,VG_min,VCG_VAR_coeff_variation,nvarsOrig,CG_coeff_variation,VG_max,CG_max,POSNEG_RATIO_CLAUSE_max,horn_clauses_fraction,nclauses,vars_clauses_ratio,CG_entropy,UNARY,cluster_coeff_mean,VCG_CLAUSE_coeff_variation,POSNEG_RATIO_VAR_max,VCG_VAR_max,POSNEG_RATIO_VAR_entropy,TRINARYp,POSNEG_RATIO_VAR_min,HORNY_VAR_max,VCG_CLAUSE_mean,VCG_CLAUSE_min,cluster_coeff_entropy,POSNEG_RATIO_CLAUSE_min,HORNY_VAR_coeff_variation,VCG_VAR_min,nvars,nclausesOrig,POSNEG_RATIO_CLAUSE_mean,CG_min,VG_coeff_variation,POSNEG_RATIO_VAR_mean,cluster_coeff_coeff_variation,POSNEG_RATIO_CLAUSE_coeff_variation,VCG_CLAUSE_entropy,VCG_VAR_entropy,cluster_coeff_min,POSNEG_RATIO_VAR_stdev,HORNY_VAR_entropy,cluster_coeff_max,HORNY_VAR_mean,VCG_CLAUSE_max,HORNY_VAR_min,POSNEG_RATIO_CLAUSE_entropy,reducedClauses
% 
% Check Consistency and Completeness of input data
% Instances: 		 600
% Algorithms: 		 9
% Incomplete Feature Vector: 	 0 (maybe imputed)
% Unsolvable Instances (status): 	 108
% Unsolvable Instances (runtime): 	 108
% Valid Instances: 	 492
% Presolved: 		 0
% Average Feature Costs: 	 22.0647
% Use given CV of 1-th repetition
% >>> 1-th iteration<<<
('sr: ', array([ 456.30377849,  151.05406897,   53.19384647,   46.58976067]), ' - svd_k: ', 4)

opt_portfolio:  [0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8])
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  5,  7,  8, 11, 15, 22, 23, 24, 25, 26, 28, 29, 30,
       31, 32, 33, 35, 37, 38, 39, 44]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  1  2  3  5  7  8 11 15 22 23 24 25 26 28 29 30 31 32 33 35 37 38 39 44]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 5, 7, 8, 11, 15, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 44
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8')
(9 out of 9) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8
('INIT -> Best k = ', 2, ' - best_score = ', 0.33334501801588989)
('INIT -> Best k = ', 3, ' - best_score = ', 0.42449600871449972)
('INIT -> Best k = ', 4, ' - best_score = ', 0.48018382834880285)
('INIT -> Best k = ', 5, ' - best_score = ', 0.5335947133551886)
('INIT -> Best k = ', 6, ' - best_score = ', 0.5568394426636013)
('INIT -> Best k = ', 7, ' - best_score = ', 0.58624562835514038)
('INIT -> Best k = ', 8, ' - best_score = ', 0.60321542441122689)
('AFTER INIT -> Best k = ', 8, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 179, ' - score_right = ', -1)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.64296771290775379, 'k_right = ', 179, ' - score_right = ', 0.6349767370301872)
(@choose_rep_subset_insts_as_reduction) num_clusters=  94
('inst_per_cls : ', array([ 41, 281,  84, 419, 511, 108,  93, 479, 145, 381, 418, 538, 393,
       512, 486, 207,  29, 436, 457, 279, 131, 304, 424,  12, 181, 510,
       310, 394,  53,  28, 123, 188, 178, 329, 167,  25, 342, 483, 454,
       336, 139,  36, 194,   1, 220,  56,  46, 185, 151, 114, 254, 382,
        58, 264, 197,  91, 199, 326, 533, 296, 502, 192, 305, 238, 319,
       403, 300, 528, 117,  70, 506, 146,  73, 162, 323, 343, 316, 261,
       216, 209, 485, 234, 410,  96, 156,  51, 463, 163, 202, 536, 298,
        83,  86,  20, 357, 525, 341, 196, 499, 263, 212,  72, 388, 140,
       498, 484, 530, 344, 128, 474, 473, 179, 442, 308, 475, 518,  54,
       154, 256, 204, 169, 278,  48, 352,  47, 414, 250, 277, 527, 301,
       176, 401, 203,  21,  16, 399, 273, 453, 413,  60,  31,  76, 252, 491]))
(144 out of 540) Instances to keep are determined: 1, 12, 16, 20, 21, 25, 28, 29, 31, 36, 41, 46, 47, 48, 51, 53, 54, 56, 58, 60, 70, 72, 73, 76, 83, 84, 86, 91, 93, 96, 108, 114, 117, 123, 128, 131, 139, 140, 145, 146, 151, 154, 156, 162, 163, 167, 169, 176, 178, 179, 181, 185, 188, 192, 194, 196, 197, 199, 202, 203, 204, 207, 209, 212, 216, 220, 234, 238, 250, 252, 254, 256, 261, 263, 264, 273, 277, 278, 279, 281, 296, 298, 300, 301, 304, 305, 308, 310, 316, 319, 323, 326, 329, 336, 341, 342, 343, 344, 352, 357, 381, 382, 388, 393, 394, 399, 401, 403, 410, 413, 414, 418, 419, 424, 436, 442, 453, 454, 457, 463, 473, 474, 475, 479, 483, 484, 485, 486, 491, 498, 499, 502, 506, 510, 511, 512, 518, 525, 527, 528, 530, 533, 536, 538
% Backup Solver: MPhaseSAT_M_2011-02-16
% Input Instances for Training: 144 (-unsolvable)
% Used Instances for Training: 144 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 12614.79 (60 instances)
% >>> 2-th iteration<<<
('sr: ', array([ 455.60656974,  149.8363596 ,   53.27048717,   46.4048271 ]), ' - svd_k: ', 4)

opt_portfolio:  [0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8])
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  7,  8, 11, 13, 15, 21, 22, 23, 24, 25, 26, 28, 29,
       32, 33, 34, 35, 38, 39, 44, 45]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  1  2  3  7  8 11 13 15 21 22 23 24 25 26 28 29 32 33 34 35 38 39 44 45]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 7, 8, 11, 13, 15, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 38, 39, 44, 45
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8')
(9 out of 9) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8
('INIT -> Best k = ', 2, ' - best_score = ', 0.36173785410881398)
('INIT -> Best k = ', 3, ' - best_score = ', 0.42821208660276822)
('INIT -> Best k = ', 4, ' - best_score = ', 0.47258671856492113)
('INIT -> Best k = ', 5, ' - best_score = ', 0.48237928190057627)
('INIT -> Best k = ', 6, ' - best_score = ', 0.55577199646024722)
('INIT -> Best k = ', 7, ' - best_score = ', 0.57701155641096713)
('INIT -> Best k = ', 8, ' - best_score = ', 0.58793317720988059)
('INIT -> Best k = ', 9, ' - best_score = ', 0.58949599093600702)
('AFTER INIT -> Best k = ', 9, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 179, ' - score_right = ', -1)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.61962679913087382, 'k_right = ', 179, ' - score_right = ', 0.6116251950716024)
(@choose_rep_subset_insts_as_reduction) num_clusters=  94
('inst_per_cls : ', array([426, 516, 115,  99, 483, 157, 388, 539, 400, 517, 491, 214, 440,
       284, 141, 431,  11, 190, 515, 401,  53,  26, 133, 197,  34, 336,
       251, 344, 253, 250, 234, 371, 348, 389, 187, 490, 266, 497,  19,
       177,  76, 102, 531,   8, 529, 125, 132, 114, 188, 243, 164, 194,
        90, 162, 122,  72, 221, 126,  87,  91, 207, 534, 225, 507, 201,
       109, 476, 304, 350,  23, 349, 211, 469, 210, 464, 308, 184,  88,
        80, 269, 138,  74, 170, 283,  47, 406, 216, 419,  45, 204, 496,
       240, 343, 150, 506, 203,   1, 407, 215, 179, 374, 502, 291,  71,
       421, 172, 220, 111, 282, 528, 123,  68,  56, 205,  97, 254,  46,
       519, 457, 416,  60, 169, 218, 329, 155, 520,  54, 244, 305, 166,
        69, 173, 362, 183, 505,  51, 532, 165, 537, 302,  18, 409, 375,
       478,  73, 458,  78, 285, 174]))
(149 out of 540) Instances to keep are determined: 1, 8, 11, 18, 19, 23, 26, 34, 45, 46, 47, 51, 53, 54, 56, 60, 68, 69, 71, 72, 73, 74, 76, 78, 80, 87, 88, 90, 91, 97, 99, 102, 109, 111, 114, 115, 122, 123, 125, 126, 132, 133, 138, 141, 150, 155, 157, 162, 164, 165, 166, 169, 170, 172, 173, 174, 177, 179, 183, 184, 187, 188, 190, 194, 197, 201, 203, 204, 205, 207, 210, 211, 214, 215, 216, 218, 220, 221, 225, 234, 240, 243, 244, 250, 251, 253, 254, 266, 269, 282, 283, 284, 285, 291, 302, 304, 305, 308, 329, 336, 343, 344, 348, 349, 350, 362, 371, 374, 375, 388, 389, 400, 401, 406, 407, 409, 416, 419, 421, 426, 431, 440, 457, 458, 464, 469, 476, 478, 483, 490, 491, 496, 497, 502, 505, 506, 507, 515, 516, 517, 519, 520, 528, 529, 531, 532, 534, 537, 539
% Backup Solver: MPhaseSAT_M_2011-02-16
% Input Instances for Training: 149 (-unsolvable)
% Used Instances for Training: 149 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 13439.37 (60 instances)
% >>> 3-th iteration<<<
('sr: ', array([ 459.02198291,  151.25464148,   53.47726011,   47.18675905]), ' - svd_k: ', 4)

opt_portfolio:  [0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8])
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  5,  7,  8, 11, 15, 21, 22, 23, 24, 25, 26, 29, 30,
       31, 32, 33, 34, 35, 43, 44, 49]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  1  2  3  5  7  8 11 15 21 22 23 24 25 26 29 30 31 32 33 34 35 43 44 49]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 5, 7, 8, 11, 15, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 43, 44, 49
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8')
(9 out of 9) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8
('INIT -> Best k = ', 2, ' - best_score = ', 0.33447079871900487)
('INIT -> Best k = ', 3, ' - best_score = ', 0.42386100175912284)
('INIT -> Best k = ', 4, ' - best_score = ', 0.47823634132054105)
('INIT -> Best k = ', 5, ' - best_score = ', 0.48619581135310919)
('INIT -> Best k = ', 6, ' - best_score = ', 0.55695577555019393)
('INIT -> Best k = ', 7, ' - best_score = ', 0.58627777228388267)
('INIT -> Best k = ', 8, ' - best_score = ', 0.60177918475861636)
('INIT -> Best k = ', 9, ' - best_score = ', 0.60404251278797516)
('INIT -> Best k = ', 10, ' - best_score = ', 0.60496364473412179)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 179, ' - score_right = ', -1)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.6499927191677598, 'k_right = ', 179, ' - score_right = ', 0.64257315945541471)
(@choose_rep_subset_insts_as_reduction) num_clusters=  94
('inst_per_cls : ', array([282, 536, 302, 426, 514, 113,  96, 483, 156, 388, 425, 538, 400,
       515, 491, 213,  25, 441, 460, 139, 308, 431,   9, 192, 513, 314,
       401,  53,  24, 130, 217, 189, 338, 230, 254, 346, 210, 124, 283,
       245, 325, 409, 195,  89, 312, 120, 477, 430, 345, 148,  33,  34,
       203, 275, 529, 123, 172, 207, 144, 533, 300, 506, 201, 105,  79,
       121, 271, 353, 439,  16, 374,  46, 150, 488, 278, 502,  87, 215,
       490, 419,  56, 205, 434, 284, 112,  70, 157, 495,  12,   5, 496,
       252,  94, 407, 227, 328, 303, 352, 142,  72, 518,  60,  27, 364,
        30, 153, 167, 218, 223, 389, 265, 173, 209, 392, 285, 305, 187,
       309,  86, 165,  47,  18,  39, 466, 331, 204, 270, 129, 190, 244,
        73, 126, 415, 530, 408,  93, 238,  40,  80, 125, 520,  54]))
(142 out of 540) Instances to keep are determined: 5, 9, 12, 16, 18, 24, 25, 27, 30, 33, 34, 39, 40, 46, 47, 53, 54, 56, 60, 70, 72, 73, 79, 80, 86, 87, 89, 93, 94, 96, 105, 112, 113, 120, 121, 123, 124, 125, 126, 129, 130, 139, 142, 144, 148, 150, 153, 156, 157, 165, 167, 172, 173, 187, 189, 190, 192, 195, 201, 203, 204, 205, 207, 209, 210, 213, 215, 217, 218, 223, 227, 230, 238, 244, 245, 252, 254, 265, 270, 271, 275, 278, 282, 283, 284, 285, 300, 302, 303, 305, 308, 309, 312, 314, 325, 328, 331, 338, 345, 346, 352, 353, 364, 374, 388, 389, 392, 400, 401, 407, 408, 409, 415, 419, 425, 426, 430, 431, 434, 439, 441, 460, 466, 477, 483, 488, 490, 491, 495, 496, 502, 506, 513, 514, 515, 518, 520, 529, 530, 533, 536, 538
% Backup Solver: MPhaseSAT_M_2011-02-16
% Input Instances for Training: 142 (-unsolvable)
% Used Instances for Training: 142 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 7602.03 (60 instances)
% >>> 4-th iteration<<<
('sr: ', array([ 450.65452074,  152.97462152,   51.55126076,   46.54278958]), ' - svd_k: ', 4)

opt_portfolio:  [0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8])
('top_ft_inx_arr: ', array([ 1,  2,  3,  7,  8, 15, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32,
       33, 34, 35, 43, 44, 45, 48, 49]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 1  2  3  7  8 15 21 22 23 24 25 26 28 29 30 31 32 33 34 35 43 44 45 48 49]
(25 out of 50) Features to keep are determined: 1, 2, 3, 7, 8, 15, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 43, 44, 45, 48, 49
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8')
(9 out of 9) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8
('INIT -> Best k = ', 2, ' - best_score = ', 0.36529049941510094)
('INIT -> Best k = ', 3, ' - best_score = ', 0.43570663822255246)
('INIT -> Best k = ', 4, ' - best_score = ', 0.48357527955431839)
('INIT -> Best k = ', 5, ' - best_score = ', 0.49333495079604794)
('INIT -> Best k = ', 6, ' - best_score = ', 0.55668172186566944)
('INIT -> Best k = ', 7, ' - best_score = ', 0.57174640899250684)
('INIT -> Best k = ', 8, ' - best_score = ', 0.59240683368672054)
('INIT -> Best k = ', 9, ' - best_score = ', 0.59257630793491956)
('INIT -> Best k = ', 10, ' - best_score = ', 0.59439997285254598)
('AFTER INIT -> Best k = ', 10, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 179, ' - score_right = ', -1)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.62733536970817605, 'k_right = ', 179, ' - score_right = ', 0.61464942261919042)
('Best k = ', 136, 'k_left = ', 94, ' - score_left = ', 0.62733536970817605, 'k_right = ', 136, ' - score_right = ', 0.63251941393369882)
(@choose_rep_subset_insts_as_reduction) num_clusters=  136
('inst_per_cls : ', array([168, 206, 123,  64, 203, 332, 533, 299, 505, 197, 396, 323, 357,
       343, 146,  34, 234, 503, 309, 140, 425, 513, 113,  97, 480, 153,
       388, 424, 538, 487, 211,  26, 253, 457, 282, 139, 308, 430,  10,
       188, 512, 314, 399,  51,  25, 130, 215, 185, 336, 227, 249, 344,
       251, 416, 232, 370, 428, 421, 316, 422, 254, 161, 208, 525, 102,
       468, 378, 270, 142, 347, 507,  36,   1, 223,  95, 212, 192,  88,
       217, 119,  65, 104, 486, 238, 170, 214, 527, 320, 122, 329, 407,
        92,  57, 466, 207, 294, 121, 423, 247,  22, 493,  12,  55,  60,
       129, 186, 240, 414,  98, 162,   7, 218, 324, 303, 237, 159, 167,
        33, 437, 499, 125, 389, 179, 349, 467, 352, 326,  18,  67, 429,
        76, 290,  69,  23, 354, 455, 509, 287,  85,  89,  13,   6, 529,
       288, 515, 469,  52, 112, 340, 382, 526, 362,  49, 350, 492, 536,
       182, 189, 335,  16, 374, 365, 259, 451, 475, 165,  83, 417, 281,
       530,  31, 419, 252, 484, 275, 453, 519, 154,  72, 267, 201, 473,
       351, 241,   8,  28, 284, 285, 304, 136, 495, 199, 263, 441, 502,
       489,  63, 406, 534, 312,  45, 385, 213,  77, 460, 145, 157, 394,
        71, 330, 390, 375,  40, 127,  78, 302, 321]))
(217 out of 540) Instances to keep are determined: 1, 6, 7, 8, 10, 12, 13, 16, 18, 22, 23, 25, 26, 28, 31, 33, 34, 36, 40, 45, 49, 51, 52, 55, 57, 60, 63, 64, 65, 67, 69, 71, 72, 76, 77, 78, 83, 85, 88, 89, 92, 95, 97, 98, 102, 104, 112, 113, 119, 121, 122, 123, 125, 127, 129, 130, 136, 139, 140, 142, 145, 146, 153, 154, 157, 159, 161, 162, 165, 167, 168, 170, 179, 182, 185, 186, 188, 189, 192, 197, 199, 201, 203, 206, 207, 208, 211, 212, 213, 214, 215, 217, 218, 223, 227, 232, 234, 237, 238, 240, 241, 247, 249, 251, 252, 253, 254, 259, 263, 267, 270, 275, 281, 282, 284, 285, 287, 288, 290, 294, 299, 302, 303, 304, 308, 309, 312, 314, 316, 320, 321, 323, 324, 326, 329, 330, 332, 335, 336, 340, 343, 344, 347, 349, 350, 351, 352, 354, 357, 362, 365, 370, 374, 375, 378, 382, 385, 388, 389, 390, 394, 396, 399, 406, 407, 414, 416, 417, 419, 421, 422, 423, 424, 425, 428, 429, 430, 437, 441, 451, 453, 455, 457, 460, 466, 467, 468, 469, 473, 475, 480, 484, 486, 487, 489, 492, 493, 495, 499, 502, 503, 505, 507, 509, 512, 513, 515, 519, 525, 526, 527, 529, 530, 533, 534, 536, 538
% Backup Solver: MPhaseSAT_M_2011-02-16
% Input Instances for Training: 217 (-unsolvable)
% Used Instances for Training: 217 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 17755.17 (60 instances)
% >>> 5-th iteration<<<
('sr: ', array([ 455.10732309,  150.00340827,   52.77955894,   47.47721566]), ' - svd_k: ', 4)

opt_portfolio:  [0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8])
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  5,  7,  8, 15, 22, 23, 24, 25, 26, 29, 30, 31, 32,
       33, 34, 35, 38, 42, 44, 47, 49]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  1  2  3  5  7  8 15 22 23 24 25 26 29 30 31 32 33 34 35 38 42 44 47 49]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 5, 7, 8, 15, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 42, 44, 47, 49
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8')
(9 out of 9) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8
('INIT -> Best k = ', 2, ' - best_score = ', 0.33566751244753262)
('INIT -> Best k = ', 3, ' - best_score = ', 0.42194276874292125)
('INIT -> Best k = ', 4, ' - best_score = ', 0.4734702213629387)
('INIT -> Best k = ', 5, ' - best_score = ', 0.52611209136083292)
('INIT -> Best k = ', 6, ' - best_score = ', 0.54794330818960924)
('INIT -> Best k = ', 7, ' - best_score = ', 0.57277100037853546)
('INIT -> Best k = ', 8, ' - best_score = ', 0.59721676776231192)
('AFTER INIT -> Best k = ', 8, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 179, ' - score_right = ', -1)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.63606214745500034, 'k_right = ', 179, ' - score_right = ', 0.61834570715824233)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.63606214745500034, 'k_right = ', 136, ' - score_right = ', 0.62217218648755956)
('Best k = ', 115, 'k_left = ', 94, ' - score_left = ', 0.63606214745500034, 'k_right = ', 115, ' - score_right = ', 0.64005808888241911)
(@choose_rep_subset_insts_as_reduction) num_clusters=  115
('inst_per_cls : ', array([474, 242, 332, 339, 420, 113,  96, 480, 382, 419, 391, 513, 488,
       213,  25, 520, 458, 281, 139, 307, 424,  11, 189, 313, 392,  52,
       131, 196, 186, 335, 229, 251, 412, 367, 422, 416, 315, 417, 254,
       163, 299, 527, 102, 469, 374, 271, 144,  43, 361, 234, 185, 215,
       487, 240, 210,  13, 308, 140, 150,  82, 383, 493, 149,   0, 226,
       327,   9, 205, 330, 154, 504, 122, 105, 388, 321, 337, 470,  53,
        19, 370, 362, 349, 319, 133, 148,  33, 331, 503,  64, 536, 300,
       160, 452, 268, 203, 414, 252,  92, 248, 146, 152, 325, 301, 490,
       193,  87, 120, 258, 103, 397, 396, 347, 484, 518,  67, 128, 399,
        36,  69,  23,  50, 438, 283, 303, 183,  77, 334,  84,  88, 239,
       162, 433, 336, 221, 178, 467, 202, 351, 275, 516, 499,   5, 190,
       280, 322, 402, 302, 310, 235, 401,  91, 502, 260, 201, 265, 214,
       218, 223,  57, 466, 209, 237,  99, 164,   8, 366,  39, 506, 408,
        70, 170, 126, 463, 485, 208, 435, 168,  12, 130, 112,  28,  46,
        94, 501,  15, 328, 282, 529, 123, 134, 291, 220, 476,  76, 284,
        30,  26, 409, 167, 286,  45, 171,  38,  75, 423, 514, 350, 136,
       508,  63,  29, 494,  44, 166, 380, 320, 456, 175, 279, 528,  37,
       454, 521]))
(223 out of 540) Instances to keep are determined: 0, 5, 8, 9, 11, 12, 13, 15, 19, 23, 25, 26, 28, 29, 30, 33, 36, 37, 38, 39, 43, 44, 45, 46, 50, 52, 53, 57, 63, 64, 67, 69, 70, 75, 76, 77, 82, 84, 87, 88, 91, 92, 94, 96, 99, 102, 103, 105, 112, 113, 120, 122, 123, 126, 128, 130, 131, 133, 134, 136, 139, 140, 144, 146, 148, 149, 150, 152, 154, 160, 162, 163, 164, 166, 167, 168, 170, 171, 175, 178, 183, 185, 186, 189, 190, 193, 196, 201, 202, 203, 205, 208, 209, 210, 213, 214, 215, 218, 220, 221, 223, 226, 229, 234, 235, 237, 239, 240, 242, 248, 251, 252, 254, 258, 260, 265, 268, 271, 275, 279, 280, 281, 282, 283, 284, 286, 291, 299, 300, 301, 302, 303, 307, 308, 310, 313, 315, 319, 320, 321, 322, 325, 327, 328, 330, 331, 332, 334, 335, 336, 337, 339, 347, 349, 350, 351, 361, 362, 366, 367, 370, 374, 380, 382, 383, 388, 391, 392, 396, 397, 399, 401, 402, 408, 409, 412, 414, 416, 417, 419, 420, 422, 423, 424, 433, 435, 438, 452, 454, 456, 458, 463, 466, 467, 469, 470, 474, 476, 480, 484, 485, 487, 488, 490, 493, 494, 499, 501, 502, 503, 504, 506, 508, 513, 514, 516, 518, 520, 521, 527, 528, 529, 536
% Backup Solver: MPhaseSAT_M_2011-02-16
% Input Instances for Training: 223 (-unsolvable)
% Used Instances for Training: 223 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 11845.45 (60 instances)
% >>> 6-th iteration<<<
('sr: ', array([ 456.53169012,  149.38120267,   52.45491505,   47.1517043 ]), ' - svd_k: ', 4)

opt_portfolio:  [0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8])
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  5,  7,  8, 11, 15, 22, 23, 24, 25, 26, 29, 30, 31,
       32, 33, 34, 35, 38, 41, 44, 49]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  1  2  3  5  7  8 11 15 22 23 24 25 26 29 30 31 32 33 34 35 38 41 44 49]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 5, 7, 8, 11, 15, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 41, 44, 49
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8')
(9 out of 9) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8
('INIT -> Best k = ', 2, ' - best_score = ', 0.33297995180138651)
('INIT -> Best k = ', 3, ' - best_score = ', 0.42301419555143782)
('INIT -> Best k = ', 4, ' - best_score = ', 0.47341095392873145)
('INIT -> Best k = ', 5, ' - best_score = ', 0.48295081819373842)
('INIT -> Best k = ', 6, ' - best_score = ', 0.55717445210137995)
('INIT -> Best k = ', 7, ' - best_score = ', 0.58320404606909992)
('INIT -> Best k = ', 8, ' - best_score = ', 0.59862858681119613)
('AFTER INIT -> Best k = ', 8, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 179, ' - score_right = ', -1)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.63032794167235262, 'k_right = ', 179, ' - score_right = ', 0.62088922652370848)
(@choose_rep_subset_insts_as_reduction) num_clusters=  94
('inst_per_cls : ', array([427, 512, 113, 482, 152, 390, 426, 538, 402, 513, 489, 215,  28,
       520, 462, 289, 315, 430,  11, 189, 511, 320, 403,  27, 130, 196,
       186, 519, 255, 351, 257,  15,  40, 350, 146,  35, 161,   9, 193,
        88, 222, 120, 526, 223,  42, 202, 229, 169,  34,  14, 207, 338,
       533, 306, 504, 200, 206, 508, 518, 528, 326, 204,  67, 507, 153,
        77, 121,  19, 380, 478,  74, 445,  53, 291, 311,  78, 217, 488,
       530, 166, 293, 205, 230, 397, 243, 439, 412, 358, 136, 335, 410,
       240, 422, 258,  48, 219, 247, 170, 210, 420, 428, 502, 336, 333,
       253, 187, 246, 340,  24,  71, 176, 330, 300, 310, 287, 527, 183,
       172, 499,   5, 401, 356, 220, 151,  41, 467, 318, 272,  56,  98,
       163,   8,  85, 167, 371,  20, 429,  94, 460, 486, 282, 327, 133,
       391, 271,  49, 308, 399, 129, 112]))
(150 out of 540) Instances to keep are determined: 5, 8, 9, 11, 14, 15, 19, 20, 24, 27, 28, 34, 35, 40, 41, 42, 48, 49, 53, 56, 67, 71, 74, 77, 78, 85, 88, 94, 98, 112, 113, 120, 121, 129, 130, 133, 136, 146, 151, 152, 153, 161, 163, 166, 167, 169, 170, 172, 176, 183, 186, 187, 189, 193, 196, 200, 202, 204, 205, 206, 207, 210, 215, 217, 219, 220, 222, 223, 229, 230, 240, 243, 246, 247, 253, 255, 257, 258, 271, 272, 282, 287, 289, 291, 293, 300, 306, 308, 310, 311, 315, 318, 320, 326, 327, 330, 333, 335, 336, 338, 340, 350, 351, 356, 358, 371, 380, 390, 391, 397, 399, 401, 402, 403, 410, 412, 420, 422, 426, 427, 428, 429, 430, 439, 445, 460, 462, 467, 478, 482, 486, 488, 489, 499, 502, 504, 507, 508, 511, 512, 513, 518, 519, 520, 526, 527, 528, 530, 533, 538
% Backup Solver: MPhaseSAT_M_2011-02-16
% Input Instances for Training: 150 (-unsolvable)
% Used Instances for Training: 150 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 14244.93 (60 instances)
% >>> 7-th iteration<<<
('sr: ', array([ 457.32605669,  148.88117857,   52.42987263,   47.50413097]), ' - svd_k: ', 4)

opt_portfolio:  [0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8])
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  7,  8, 11, 15, 19, 21, 22, 23, 24, 25, 26, 29, 30,
       31, 32, 34, 39, 40, 43, 44, 45]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  1  2  3  7  8 11 15 19 21 22 23 24 25 26 29 30 31 32 34 39 40 43 44 45]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 7, 8, 11, 15, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 39, 40, 43, 44, 45
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8')
(9 out of 9) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8
('INIT -> Best k = ', 2, ' - best_score = ', 0.33482638710484752)
('INIT -> Best k = ', 3, ' - best_score = ', 0.42205653649376301)
('INIT -> Best k = ', 4, ' - best_score = ', 0.47514069503481182)
('INIT -> Best k = ', 5, ' - best_score = ', 0.48492808541972759)
('INIT -> Best k = ', 6, ' - best_score = ', 0.55381780702869532)
('INIT -> Best k = ', 7, ' - best_score = ', 0.58842327775291114)
('INIT -> Best k = ', 8, ' - best_score = ', 0.60151984275858561)
('INIT -> Best k = ', 9, ' - best_score = ', 0.60881317785248834)
('AFTER INIT -> Best k = ', 9, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 179, ' - score_right = ', -1)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.64118436119995481, 'k_right = ', 179, ' - score_right = ', 0.62288113317834415)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.64118436119995481, 'k_right = ', 136, ' - score_right = ', 0.63711555512464224)
(@choose_rep_subset_insts_as_reduction) num_clusters=  94
('inst_per_cls : ', array([475, 185, 236, 514,  93, 482, 154, 382, 419, 538, 394, 515, 490,
        25, 522, 458, 279, 138, 305, 423,  10, 187, 513, 311, 395,  53,
        24, 130, 212, 334, 521, 246, 342, 248,  17, 264, 350, 306, 278,
       322, 191,  88, 214, 118, 197,   1, 220, 529, 121, 256,  27, 468,
       412, 325, 330, 534, 297, 506, 104, 391, 341,  34, 331, 199, 176,
       351,  14,   8, 299, 146, 159,  21, 348,  72, 184, 489, 261, 200,
        92, 221, 210, 455, 233, 319, 477, 531, 349, 288, 282, 301, 181,
        85,  89, 168, 203, 435, 414, 249, 383,  57, 520, 517, 453, 230,
       151, 163,   9, 433, 501,   6, 487, 272,  51, 498, 292, 320, 147,
       277, 528, 399, 393, 504,  76, 119, 129, 111,  55,  45, 495,  47,
        18,  40,  68, 422,  71, 125, 309, 106, 327, 401, 408, 165]))
(142 out of 540) Instances to keep are determined: 1, 6, 8, 9, 10, 14, 17, 18, 21, 24, 25, 27, 34, 40, 45, 47, 51, 53, 55, 57, 68, 71, 72, 76, 85, 88, 89, 92, 93, 104, 106, 111, 118, 119, 121, 125, 129, 130, 138, 146, 147, 151, 154, 159, 163, 165, 168, 176, 181, 184, 185, 187, 191, 197, 199, 200, 203, 210, 212, 214, 220, 221, 230, 233, 236, 246, 248, 249, 256, 261, 264, 272, 277, 278, 279, 282, 288, 292, 297, 299, 301, 305, 306, 309, 311, 319, 320, 322, 325, 327, 330, 331, 334, 341, 342, 348, 349, 350, 351, 382, 383, 391, 393, 394, 395, 399, 401, 408, 412, 414, 419, 422, 423, 433, 435, 453, 455, 458, 468, 475, 477, 482, 487, 489, 490, 495, 498, 501, 504, 506, 513, 514, 515, 517, 520, 521, 522, 528, 529, 531, 534, 538
% Backup Solver: MPhaseSAT_M_2011-02-16
% Input Instances for Training: 142 (-unsolvable)
% Used Instances for Training: 142 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 10953.71 (60 instances)
% >>> 8-th iteration<<<
('sr: ', array([ 454.99622892,  149.48483164,   51.89555287,   47.10251653]), ' - svd_k: ', 4)

opt_portfolio:  [0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8])
('top_ft_inx_arr: ', array([ 1,  2,  3,  7,  8, 11, 15, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31,
       32, 33, 34, 35, 44, 46, 48, 49]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 1  2  3  7  8 11 15 21 22 23 24 25 26 28 29 30 31 32 33 34 35 44 46 48 49]
(25 out of 50) Features to keep are determined: 1, 2, 3, 7, 8, 11, 15, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 44, 46, 48, 49
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8')
(9 out of 9) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8
('INIT -> Best k = ', 2, ' - best_score = ', 0.36131165235218293)
('INIT -> Best k = ', 3, ' - best_score = ', 0.42738944782469079)
('INIT -> Best k = ', 4, ' - best_score = ', 0.46509997911652001)
('INIT -> Best k = ', 5, ' - best_score = ', 0.47248234810100703)
('INIT -> Best k = ', 6, ' - best_score = ', 0.54662543928413254)
('INIT -> Best k = ', 7, ' - best_score = ', 0.57388173365525241)
('INIT -> Best k = ', 8, ' - best_score = ', 0.58883096517700129)
('INIT -> Best k = ', 9, ' - best_score = ', 0.59256416029482828)
('AFTER INIT -> Best k = ', 9, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 179, ' - score_right = ', -1)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.63523429819180377, 'k_right = ', 179, ' - score_right = ', 0.62752845649340738)
(@choose_rep_subset_insts_as_reduction) num_clusters=  94
('inst_per_cls : ', array([247, 142, 346, 317, 421, 511, 109,  92, 478, 152, 420, 538, 394,
       512, 211,  25, 455, 280, 135, 307,   9, 189, 510, 312, 515,  49,
        24, 127, 215, 186, 332, 518, 249, 340, 339, 144,  32, 499, 220,
        66, 169,  22,  67, 192,  83, 217, 115,  33, 198,   0, 264, 344,
       278, 526, 187, 241, 536, 320, 303, 309, 203, 328, 533, 299, 502,
       197, 102, 218, 120, 200,  18, 124, 453, 474, 483, 496, 301, 167,
       410,  55, 213, 416,  65, 401, 212, 485, 239, 504,  43, 323,  90,
       427, 149, 238, 461, 170, 283, 304, 183,  74, 178, 347, 132,  29,
        17, 370, 302,  13,   5, 527, 118,  80,  84, 333, 153,  69,  50,
       199,   3, 190, 310, 273,  27, 399, 524, 380, 402, 360, 201, 252,
       107, 414, 175, 235, 242, 403,  37, 206, 163, 529, 126, 108, 148,
       266, 389, 279, 325,  87, 259, 472, 424]))
(151 out of 540) Instances to keep are determined: 0, 3, 5, 9, 13, 17, 18, 22, 24, 25, 27, 29, 32, 33, 37, 43, 49, 50, 55, 65, 66, 67, 69, 74, 80, 83, 84, 87, 90, 92, 102, 107, 108, 109, 115, 118, 120, 124, 126, 127, 132, 135, 142, 144, 148, 149, 152, 153, 163, 167, 169, 170, 175, 178, 183, 186, 187, 189, 190, 192, 197, 198, 199, 200, 201, 203, 206, 211, 212, 213, 215, 217, 218, 220, 235, 238, 239, 241, 242, 247, 249, 252, 259, 264, 266, 273, 278, 279, 280, 283, 299, 301, 302, 303, 304, 307, 309, 310, 312, 317, 320, 323, 325, 328, 332, 333, 339, 340, 344, 346, 347, 360, 370, 380, 389, 394, 399, 401, 402, 403, 410, 414, 416, 420, 421, 424, 427, 453, 455, 461, 472, 474, 478, 483, 485, 496, 499, 502, 504, 510, 511, 512, 515, 518, 524, 526, 527, 529, 533, 536, 538
% Backup Solver: MPhaseSAT_M_2011-02-16
% Input Instances for Training: 151 (-unsolvable)
% Used Instances for Training: 151 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 14368.19 (60 instances)
% >>> 9-th iteration<<<
('sr: ', array([ 455.63444955,  148.51167304,   52.18859329,   47.48734918]), ' - svd_k: ', 4)

opt_portfolio:  [0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8])
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  7,  8, 11, 15, 21, 22, 23, 24, 25, 26, 30, 31, 32,
       33, 34, 35, 42, 43, 44, 45, 47]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  1  2  3  7  8 11 15 21 22 23 24 25 26 30 31 32 33 34 35 42 43 44 45 47]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 7, 8, 11, 15, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 42, 43, 44, 45, 47
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8')
(9 out of 9) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8
('INIT -> Best k = ', 2, ' - best_score = ', 0.33456892516818088)
('INIT -> Best k = ', 3, ' - best_score = ', 0.41197081998317531)
('INIT -> Best k = ', 4, ' - best_score = ', 0.46684132181165994)
('INIT -> Best k = ', 5, ' - best_score = ', 0.47770584015668793)
('INIT -> Best k = ', 6, ' - best_score = ', 0.54857276761764229)
('INIT -> Best k = ', 7, ' - best_score = ', 0.59053970357674734)
('INIT -> Best k = ', 8, ' - best_score = ', 0.60357057089464572)
('INIT -> Best k = ', 9, ' - best_score = ', 0.60578812231705892)
('AFTER INIT -> Best k = ', 9, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 179, ' - score_right = ', -1)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.64025771177511992, 'k_right = ', 179, ' - score_right = ', 0.61422632228897089)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.64025771177511992, 'k_right = ', 136, ' - score_right = ', 0.61944463582871911)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.64025771177511992, 'k_right = ', 115, ' - score_right = ', 0.62604274240040581)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.64025771177511992, 'k_right = ', 104, ' - score_right = ', 0.63574079282896878)
(@choose_rep_subset_insts_as_reduction) num_clusters=  94
('inst_per_cls : ', array([277, 499, 120, 162,  35, 201, 326, 533, 505, 194,  98, 345, 130,
        46, 276, 337, 142,  31, 188,  81, 212, 114, 420, 513, 106,  89,
       149, 381, 419, 538, 392, 514, 487, 208,  23, 519, 460, 274, 133,
       303, 424,  10, 184, 512, 308,  48,  22, 181, 331, 518, 241, 338,
       324, 344, 316,  32, 196,   1, 399, 213, 409, 146, 159,   7, 492,
       165, 203, 437, 215, 325,  20,  68, 536, 178,  25, 516, 336, 402,
       397, 210, 211, 528, 315, 261, 199, 182, 232, 328,  54, 413, 239,
        53, 414, 244,  30, 366, 357, 354, 284,  17,  65, 477, 456,  72,
       231, 164, 467, 204, 145, 157,   8, 342, 273, 527, 299, 343, 257,
       502,  87, 458, 306, 258, 475, 124, 401,  84,  13,  36,  51,  41,
         6, 115, 319, 298, 287, 485, 268,  69, 297]))
(139 out of 540) Instances to keep are determined: 1, 6, 7, 8, 10, 13, 17, 20, 22, 23, 25, 30, 31, 32, 35, 36, 41, 46, 48, 51, 53, 54, 65, 68, 69, 72, 81, 84, 87, 89, 98, 106, 114, 115, 120, 124, 130, 133, 142, 145, 146, 149, 157, 159, 162, 164, 165, 178, 181, 182, 184, 188, 194, 196, 199, 201, 203, 204, 208, 210, 211, 212, 213, 215, 231, 232, 239, 241, 244, 257, 258, 261, 268, 273, 274, 276, 277, 284, 287, 297, 298, 299, 303, 306, 308, 315, 316, 319, 324, 325, 326, 328, 331, 336, 337, 338, 342, 343, 344, 345, 354, 357, 366, 381, 392, 397, 399, 401, 402, 409, 413, 414, 419, 420, 424, 437, 456, 458, 460, 467, 475, 477, 485, 487, 492, 499, 502, 505, 512, 513, 514, 516, 518, 519, 527, 528, 533, 536, 538
% Backup Solver: MPhaseSAT_M_2011-02-16
% Input Instances for Training: 139 (-unsolvable)
% Used Instances for Training: 139 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 13478.01 (60 instances)
% >>> 10-th iteration<<<
('sr: ', array([ 456.46073496,  150.82474585,   51.97994838,   46.99688249]), ' - svd_k: ', 4)

opt_portfolio:  [0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8])
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  7,  8, 11, 15, 19, 21, 22, 23, 24, 25, 26, 28, 29,
       30, 32, 33, 34, 35, 44, 45, 48]))
ft_imp_total =  1.0
top_ft_inx_arr:  [ 0  1  2  3  7  8 11 15 19 21 22 23 24 25 26 28 29 30 32 33 34 35 44 45 48]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 7, 8, 11, 15, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 44, 45, 48
('No algorithm subset selection, just get the optimal portfolio: ', '0, 1, 2, 3, 4, 5, 6, 7, 8')
(9 out of 9) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8
('INIT -> Best k = ', 2, ' - best_score = ', 0.36330701523712655)
('INIT -> Best k = ', 3, ' - best_score = ', 0.43132564755761066)
('INIT -> Best k = ', 4, ' - best_score = ', 0.48132316539487191)
('INIT -> Best k = ', 5, ' - best_score = ', 0.49335495345317731)
('INIT -> Best k = ', 6, ' - best_score = ', 0.56398427787790195)
('INIT -> Best k = ', 7, ' - best_score = ', 0.58514267103294582)
('INIT -> Best k = ', 8, ' - best_score = ', 0.6009448864062662)
('AFTER INIT -> Best k = ', 8, 'k_left = ', 2, ' - score_left = ', -1, 'k_right = ', 179, ' - score_right = ', -1)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.63086398149249057, 'k_right = ', 179, ' - score_right = ', 0.60960837501156717)
('Best k = ', 94, 'k_left = ', 94, ' - score_left = ', 0.63086398149249057, 'k_right = ', 136, ' - score_right = ', 0.62286681136108746)
(@choose_rep_subset_insts_as_reduction) num_clusters=  94
('inst_per_cls : ', array([520,  52,  54,  44, 217, 122, 424, 515, 113,  96, 483, 153, 387,
       423, 539, 398, 516, 491, 210,  24, 522, 461, 279, 137, 307, 428,
       514, 313, 399,  51,  23, 129, 191, 183, 335, 521, 248, 343,  70,
       124,  39,  58,  26, 471, 128, 184, 238, 332,  56,  88, 216, 257,
       103, 212, 490, 504, 328, 202, 330, 535, 299, 195, 105, 351, 135,
        17,  38, 467, 342, 146,  32, 199, 278, 310, 174, 432, 163,   8,
       246, 150,  28,  13,   7, 479, 350, 320, 404, 197,   1,  69,   2,
       200,  94, 232,  45, 308, 239, 322, 408, 501, 360, 537, 301, 145,
       214, 218, 213, 169,  31,  85,  89, 438, 348, 388, 518, 481, 488,
       413, 531,  16, 375,  46, 161,   9, 311, 273, 508,  21,  71,  67,
       427, 282, 304,  78, 417, 325, 327, 407, 419,  76, 120, 235, 277,
       529, 205, 440, 112]))
(147 out of 540) Instances to keep are determined: 1, 2, 7, 8, 9, 13, 16, 17, 21, 23, 24, 26, 28, 31, 32, 38, 39, 44, 45, 46, 51, 52, 54, 56, 58, 67, 69, 70, 71, 76, 78, 85, 88, 89, 94, 96, 103, 105, 112, 113, 120, 122, 124, 128, 129, 135, 137, 145, 146, 150, 153, 161, 163, 169, 174, 183, 184, 191, 195, 197, 199, 200, 202, 205, 210, 212, 213, 214, 216, 217, 218, 232, 235, 238, 239, 246, 248, 257, 273, 277, 278, 279, 282, 299, 301, 304, 307, 308, 310, 311, 313, 320, 322, 325, 327, 328, 330, 332, 335, 342, 343, 348, 350, 351, 360, 375, 387, 388, 398, 399, 404, 407, 408, 413, 417, 419, 423, 424, 427, 428, 432, 438, 440, 461, 467, 471, 479, 481, 483, 488, 490, 491, 501, 504, 508, 514, 515, 516, 518, 520, 521, 522, 529, 531, 535, 537, 539
% Backup Solver: MPhaseSAT_M_2011-02-16
% Input Instances for Training: 147 (-unsolvable)
% Used Instances for Training: 147 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 8430.48 (60 instances)
% 
%  >>> Instances: 600 <<<
%  >>> Oracle Evaluation (w/o unsolved) <<<
% 
% Unsolved (not by any algorithm and not by feature computation): 108
% PAR1 time: 1086.620565 (227.586055)
% Par10 time: 9186.440565 (227.366543)
% #TOs: 108 (0)
% 
%  >>> Cross Fold Evaluation <<<
% 
% Presolved: 0
% >>>With Unsolvable Instances
% Timeouts per #Thread: {1: 148, 2: 144, 3: 141, 4: 140, 5: 137, 6: 131, 7: 117, 8: 108, 9: 108}
% Solved (perc) per #Thread: {1: 0.7533333333333333, 2: 0.76, 3: 0.765, 4: 0.7666666666666666, 5: 0.7716666666666667, 6: 0.7816666666666667, 7: 0.8049999999999999, 8: 0.8200000000000001, 9: 0.8200000000000001}
% AVG per #Thread: {1: 1373.2134499333301, 2: 1344.4506520733285, 3: 1309.0440888600021, 4: 1299.9494620366659, 5: 1276.0442449533334, 6: 1228.8962545216643, 7: 1123.6129036199923, 8: 1103.5149963116708, 9: 1102.640965003337}
% PAR10 per #Thread: {1: 12473.21344993333, 2: 12144.450652073328, 3: 11884.044088860002, 4: 11799.949462036666, 5: 11551.044244953333, 6: 11053.896254521664, 7: 9898.612903619993, 8: 9203.514996311671, 9: 9202.640965003337}
% >>>Without Unsolved Instances (depends on pre-solved in feature groups)
% Timeouts: {1: 40, 2: 36, 3: 33, 4: 32, 5: 29, 6: 23, 7: 9, 8: 0, 9: 0}
% Solved (perc): {1: 0.9186991869918699, 2: 0.926829268292683, 3: 0.9329268292682927, 4: 0.9349593495934958, 5: 0.9410569105691058, 6: 0.9532520325203253, 7: 0.9817073170731706, 8: 1.0000000000000002, 9: 1.0000000000000002}
% PAR1: {1: 577.0895730894271, 2: 542.0129903333273, 3: 498.8342547073198, 4: 487.7432463861779, 5: 458.5905426260163, 6: 401.09299331910296, 7: 272.69866295121005, 8: 248.18901989228146, 9: 247.12312805284986}
% PAR10: {1: 4235.62615845528, 2: 3834.6959171625954, 3: 3517.126937634149, 4: 3414.572514678861, 5: 3111.0295670162604, 6: 2504.7515299044685, 7: 1095.8693946585272, 8: 248.18901989228146, 9: 247.12312805285012}
% 
% Time used by each solver: {'EagleUP_1.565.350': 422360.593444, 'MPhaseSAT_M_2011-02-16': 163.335128, 'sparrow2011_sparrow2011_ubcsat1.2_2011-03-02': 202317.93093499995, 'sattime2011_2011-03-02': 24960.139623000003, 'SAT09referencesolvermarch_hi_hi': 2169.4090969999997, 'SAT09referencesolvergnovelty+2_2009-03-22': 74992.597365, 'SAT09referencesolverTNM_2009-03-22': 34713.744785, 'adaptg2wsat2011_2011-03-02': 20014.553958, 'march_rw_2011-03-02': 28996.935624999995}
% Optimal Time used by each solver: {'EagleUP_1.565.350': 544541.9798989999, 'MPhaseSAT_M_2011-02-16': 352.325057, 'sparrow2011_sparrow2011_ubcsat1.2_2011-03-02': 34880.54265800001, 'sattime2011_2011-03-02': 182.019304, 'SAT09referencesolvermarch_hi_hi': 28268.427819999997, 'SAT09referencesolvergnovelty+2_2009-03-22': 867.5445749999994, 'SAT09referencesolverTNM_2009-03-22': 2560.3926169999995, 'adaptg2wsat2011_2011-03-02': 3459.4752309999994, 'march_rw_2011-03-02': 36859.631841}
