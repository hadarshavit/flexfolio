inst_clst_ft_type	: 1
svd_type	: 1
dim_rd_type	: 0
clst_method	: 2
ft_selection_method	: 6
svd_dim	: 10
svd_outlier_threshold	: 20
ft_outlier_threshold	: 0
to_report	: True
to_plot	: True
alg_subset_selection	: True
inst_subset_selection	: False
ft_subset_selection	: True
ft_postprocessing	: False
Started solving  /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU
% Command line arguments:
% --aslib-dir /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU --model-dir MODEL_DIR --print-times /home/misir/Desktop/liclipse/Workspace/flexfolio-data_filtering-v3/output/17082015161556555077/SAT11-INDU.csv
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/description.txt
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/algorithm_runs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/feature_values.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/feature_runstatus.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/ground_truth.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/feature_costs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT11-INDU/cv.arff
% 1-th repetition: 30,30,30,30,30,30,30,30,30,30 distribution
% Used Feature Steps: Pre,Basic,KLB,CG
% Used features: CG_mean,BINARYp,reducedVars,VG_mean,VCG_VAR_mean,VG_min,VCG_VAR_coeff_variation,nvarsOrig,CG_coeff_variation,VG_max,CG_max,POSNEG_RATIO_CLAUSE_max,horn_clauses_fraction,nclauses,vars_clauses_ratio,CG_entropy,UNARY,cluster_coeff_mean,VCG_CLAUSE_coeff_variation,POSNEG_RATIO_VAR_max,VCG_VAR_max,POSNEG_RATIO_VAR_entropy,TRINARYp,POSNEG_RATIO_VAR_min,HORNY_VAR_max,VCG_CLAUSE_mean,VCG_CLAUSE_min,cluster_coeff_entropy,POSNEG_RATIO_CLAUSE_min,HORNY_VAR_coeff_variation,VCG_VAR_min,nvars,nclausesOrig,POSNEG_RATIO_CLAUSE_mean,CG_min,VG_coeff_variation,POSNEG_RATIO_VAR_mean,cluster_coeff_coeff_variation,POSNEG_RATIO_CLAUSE_coeff_variation,VCG_CLAUSE_entropy,VCG_VAR_entropy,cluster_coeff_min,POSNEG_RATIO_VAR_stdev,HORNY_VAR_entropy,cluster_coeff_max,HORNY_VAR_mean,VCG_CLAUSE_max,HORNY_VAR_min,POSNEG_RATIO_CLAUSE_entropy,reducedClauses
% 
% Check Consistency and Completeness of input data
% Instances: 		 300
% Algorithms: 		 18
% Incomplete Feature Vector: 	 0 (maybe imputed)
% Unsolvable Instances (status): 	 47
% Unsolvable Instances (runtime): 	 47
% Valid Instances: 	 253
% Presolved: 		 10
% Average Feature Costs: 	 135.3471
% Use given CV of 1-th repetition
% >>> 1-th iteration<<<
('sr: ', array([ 857.25622129,  188.00595792,  131.67902384,  122.30453603,
         88.70831998,   82.47457296,   74.80107242]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	227.0 	440.095468612
2 	221.0 	1850.0612113
3 	215.0 	3227.67470653
4 	207.0 	4962.9606023
5 	199.0 	6637.28029543
6 	195.0 	7519.00225407
7 	194.0 	7823.06289227
8 	189.0 	8924.65658115
9 	186.0 	9616.08672895
10 	180.0 	10934.1071823
11 	170.0 	13010.3370838
12 	167.0 	13685.8019246
13 	159.0 	15393.327808
14 	152.0 	16916.4506755
15 	145.0 	18398.5771997
16 	142.0 	19091.6663208
17 	132.0 	21208.8934698
18 	115.0 	24940.3087424
('top_ft_inx_arr: ', array([ 3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26, 29, 31,
       33, 35, 37, 39, 41, 44, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [-0.07542562  0.15009641  0.09931983  0.16247156  0.13549978  0.29676846
  0.24837645  0.29851872  0.20184911  0.14035569]
top_ft_inx_arr:  [ 3  4  5  7  8 11 13 15 16 18 19 21 24 25 26 29 31 33 35 37 39 41 44 46 47]
(25 out of 50) Features to keep are determined: 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26, 29, 31, 33, 35, 37, 39, 41, 44, 46, 47
Oracle performance before algorithm subset selection: num_inst_solved =  227  - par10 =  440.095468612
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.42626457  0.42626457  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.59420529  0.59420529  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 55.  55.  65.  65.] ,  [ 0.          0.36986845  0.36986845  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.09251072  0.09251072  0.        ] ,  r
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.27653832  0.27653832  0.        ] ,  r
plt.plot(xs, ys,  color) =  [  80.   80.  100.  100.] ,  [ 0.09251072  0.40236838  0.40236838  0.27653832] ,  r
plt.plot(xs, ys,  color) =  [ 60.  60.  90.  90.] ,  [ 0.36986845  0.46777083  0.46777083  0.40236838] ,  r
plt.plot(xs, ys,  color) =  [ 45.  45.  75.  75.] ,  [ 0.          0.53558046  0.53558046  0.46777083] ,  b
plt.plot(xs, ys,  color) =  [ 145.  145.  155.  155.] ,  [ 0.          0.40607863  0.40607863  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 135.  135.  150.  150.] ,  [ 0.          0.42635385  0.42635385  0.40607863] ,  c
plt.plot(xs, ys,  color) =  [ 125.   125.   142.5  142.5] ,  [ 0.          0.48355916  0.48355916  0.42635385] ,  c
plt.plot(xs, ys,  color) =  [ 115.    115.    133.75  133.75] ,  [ 0.          0.54069023  0.54069023  0.48355916] ,  b
plt.plot(xs, ys,  color) =  [  60.      60.     124.375  124.375] ,  [ 0.53558046  0.59516304  0.59516304  0.54069023] ,  b
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.65534406  0.65534406  0.        ] ,  b
plt.plot(xs, ys,  color) =  [  92.1875   92.1875  170.      170.    ] ,  [ 0.59516304  0.65886618  0.65886618  0.65534406] ,  b
plt.plot(xs, ys,  color) =  [  30.        30.       131.09375  131.09375] ,  [ 0.59420529  0.66662584  0.66662584  0.65886618] ,  b
plt.plot(xs, ys,  color) =  [ 10.        10.        80.546875  80.546875] ,  [ 0.42626457  0.69158047  0.69158047  0.66662584] ,  b
leaves:  [ 4  7  1 12  8  5 10  3 11  9 15 13  6 14  2 16  0 17]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  5
5  is removed from pair - new par10:  3246.13754085
alg_portfolio =  [ 0  1  2  3  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  3  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  3
3  is removed from pair - new par10:  3252.69881818
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  11
11  is removed from pair - new par10:  3262.91451589
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  15
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  2
2  is removed from pair - new par10:  3280.20508453
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  16
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  1
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  12
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  8
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  6
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  13
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  14
14  is removed from pair - new par10:  3286.72645085
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  0
0  is removed from pair - new par10:  3294.37344411
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  17
Oracle performance after algorithm subset selection: num_inst_solved =  227  - par10 =  482.016805176
(12 out of 18) Algorithms/solvers to keep are determined: 1, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 8879.79 (30 instances)
% >>> 2-th iteration<<<
('sr: ', array([ 846.03913564,  187.95453961,  130.52700451,  122.9867759 ,
         90.59222728,   84.26801222,   74.93453758]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	230.0 	413.407921787
2 	224.0 	1804.92054803
3 	218.0 	3161.58585475
4 	211.0 	4665.4560701
5 	204.0 	6116.46388557
6 	202.0 	6584.89992178
7 	200.0 	7095.07162241
8 	195.0 	8182.16231533
9 	192.0 	8864.22707863
10 	185.0 	10364.8468324
11 	176.0 	12222.8143364
12 	173.0 	12890.9021622
13 	163.0 	14968.3255355
14 	157.0 	16260.4633131
15 	150.0 	17734.312449
16 	148.0 	18221.7400708
17 	138.0 	20328.8394196
18 	121.0 	24014.9906635
('top_ft_inx_arr: ', array([ 3,  4,  5,  6,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29, 33,
       34, 35, 37, 39, 41, 46, 47, 48]))
ft_imp_total =  0.9
ft cv scores:  [ 0.15534541  0.23713508  0.15918013  0.21468407  0.30484299  0.03395544
  0.01717868  0.1763285   0.13898891  0.20472663]
top_ft_inx_arr:  [ 3  4  5  6  7  8 11 13 15 16 18 19 21 24 26 29 33 34 35 37 39 41 46 47 48]
(25 out of 50) Features to keep are determined: 3, 4, 5, 6, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29, 33, 34, 35, 37, 39, 41, 46, 47, 48
Oracle performance before algorithm subset selection: num_inst_solved =  230  - par10 =  413.407921787
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.35252978  0.35252978  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 85.  85.  95.  95.] ,  [ 0.          0.35320434  0.35320434  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 115.  115.  125.  125.] ,  [ 0.          0.12696519  0.12696519  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 135.  135.  145.  145.] ,  [ 0.          0.23720194  0.23720194  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 120.  120.  140.  140.] ,  [ 0.12696519  0.36169889  0.36169889  0.23720194] ,  r
plt.plot(xs, ys,  color) =  [ 105.  105.  130.  130.] ,  [ 0.          0.40736355  0.40736355  0.36169889] ,  r
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.43565632  0.43565632  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 155.  155.  170.  170.] ,  [ 0.          0.43927622  0.43927622  0.43565632] ,  r
plt.plot(xs, ys,  color) =  [ 117.5  117.5  162.5  162.5] ,  [ 0.40736355  0.4657901   0.4657901   0.43927622] ,  r
plt.plot(xs, ys,  color) =  [  90.   90.  140.  140.] ,  [ 0.35320434  0.46722984  0.46722984  0.4657901 ] ,  r
plt.plot(xs, ys,  color) =  [  75.   75.  115.  115.] ,  [ 0.          0.55821476  0.55821476  0.46722984] ,  b
plt.plot(xs, ys,  color) =  [ 65.  65.  95.  95.] ,  [ 0.          0.56839142  0.56839142  0.55821476] ,  b
plt.plot(xs, ys,  color) =  [ 55.  55.  80.  80.] ,  [ 0.          0.59414403  0.59414403  0.56839142] ,  b
plt.plot(xs, ys,  color) =  [ 45.   45.   67.5  67.5] ,  [ 0.          0.64578331  0.64578331  0.59414403] ,  b
plt.plot(xs, ys,  color) =  [ 35.    35.    56.25  56.25] ,  [ 0.          0.66309703  0.66309703  0.64578331] ,  b
plt.plot(xs, ys,  color) =  [ 25.     25.     45.625  45.625] ,  [ 0.          0.68046366  0.68046366  0.66309703] ,  b
plt.plot(xs, ys,  color) =  [ 10.      10.      35.3125  35.3125] ,  [ 0.35252978  0.69151766  0.69151766  0.68046366] ,  b
leaves:  [ 4  7 17 12  1  0 13  6  5 10  8  3 11  9 15 14  2 16]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  3
3  is removed from pair - new par10:  3165.51984429
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  11
11  is removed from pair - new par10:  3175.81394403
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  15
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  5
5  is removed from pair - new par10:  3197.33518199
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  2
2  is removed from pair - new par10:  3218.41644799
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  16
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  14
14  is removed from pair - new par10:  3225.24961201
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  6
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  13
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  0
0  is removed from pair - new par10:  3231.50426054
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  1
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  12
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  17
Oracle performance after algorithm subset selection: num_inst_solved =  230  - par10 =  456.990495748
(12 out of 18) Algorithms/solvers to keep are determined: 1, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 15550.57 (30 instances)
% >>> 3-th iteration<<<
('sr: ', array([ 850.81906588,  187.59683837,  132.10003858,  123.7860027 ,
         91.86164649,   82.73308551,   73.93294035]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	228.0 	421.136905982
2 	223.0 	1599.01463769
3 	217.0 	2967.68855901
4 	209.0 	4693.08238723
5 	203.0 	5960.74036618
6 	200.0 	6645.07054093
7 	198.0 	7156.05645026
8 	191.0 	8655.44509629
9 	189.0 	9145.00524374
10 	182.0 	10657.8510451
11 	173.0 	12527.1113182
12 	171.0 	13003.2922656
13 	161.0 	15098.7845139
14 	154.0 	16610.0272564
15 	149.0 	17698.0169206
16 	146.0 	18398.507618
17 	135.0 	20718.6493871
18 	118.0 	24418.9405098
('top_ft_inx_arr: ', array([ 0,  1,  3,  4,  5,  6,  7,  8, 13, 14, 15, 16, 19, 21, 24, 26, 29,
       31, 34, 35, 36, 37, 39, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [ 0.1237332   0.21531838  0.21729278  0.22581547  0.11756566  0.17604686
  0.14916845  0.28446977  0.25070994  0.12890491]
top_ft_inx_arr:  [ 0  1  3  4  5  6  7  8 13 14 15 16 19 21 24 26 29 31 34 35 36 37 39 46 47]
(25 out of 50) Features to keep are determined: 0, 1, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 19, 21, 24, 26, 29, 31, 34, 35, 36, 37, 39, 46, 47
Oracle performance before algorithm subset selection: num_inst_solved =  228  - par10 =  421.136905982
plt.plot(xs, ys,  color) =  [ 15.  15.  25.  25.] ,  [ 0.          0.30041405  0.30041405  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 85.  85.  95.  95.] ,  [ 0.          0.27812846  0.27812846  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 115.  115.  125.  125.] ,  [ 0.         0.1314748  0.1314748  0.       ] ,  r
plt.plot(xs, ys,  color) =  [ 135.  135.  145.  145.] ,  [ 0.          0.31414199  0.31414199  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 120.  120.  140.  140.] ,  [ 0.1314748   0.3726199   0.3726199   0.31414199] ,  r
plt.plot(xs, ys,  color) =  [ 105.  105.  130.  130.] ,  [ 0.          0.42221917  0.42221917  0.3726199 ] ,  r
plt.plot(xs, ys,  color) =  [  90.    90.   117.5  117.5] ,  [ 0.27812846  0.46804525  0.46804525  0.42221917] ,  r
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.40497804  0.40497804  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 155.  155.  170.  170.] ,  [ 0.          0.48716089  0.48716089  0.40497804] ,  c
plt.plot(xs, ys,  color) =  [ 103.75  103.75  162.5   162.5 ] ,  [ 0.46804525  0.55190143  0.55190143  0.48716089] ,  b
plt.plot(xs, ys,  color) =  [  75.      75.     133.125  133.125] ,  [ 0.          0.5559503   0.5559503   0.55190143] ,  b
plt.plot(xs, ys,  color) =  [  65.       65.      104.0625  104.0625] ,  [ 0.          0.59831742  0.59831742  0.5559503 ] ,  b
plt.plot(xs, ys,  color) =  [ 55.       55.       84.53125  84.53125] ,  [ 0.          0.63250132  0.63250132  0.59831742] ,  b
plt.plot(xs, ys,  color) =  [ 45.        45.        69.765625  69.765625] ,  [ 0.          0.63561498  0.63561498  0.63250132] ,  b
plt.plot(xs, ys,  color) =  [ 35.         35.         57.3828125  57.3828125] ,  [ 0.          0.65049016  0.65049016  0.63561498] ,  b
plt.plot(xs, ys,  color) =  [ 20.          20.          46.19140625  46.19140625] ,  [ 0.30041405  0.69203807  0.69203807  0.65049016] ,  b
plt.plot(xs, ys,  color) =  [  5.           5.          33.09570312  33.09570312] ,  [ 0.          0.78065338  0.78065338  0.69203807] ,  b
leaves:  [12  4  7  1 17 13  0  6  5 10  8  3 11  9 15 14  2 16]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  5
5  is removed from pair - new par10:  2981.44305318
alg_portfolio =  [ 0  1  2  3  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  3  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  3
3  is removed from pair - new par10:  2986.56596548
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  11
11  is removed from pair - new par10:  2996.31642857
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  15
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  2
2  is removed from pair - new par10:  3017.41778506
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  16
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  14
14  is removed from pair - new par10:  3024.89039832
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  6
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  0
0  is removed from pair - new par10:  3033.52792675
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  13
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  17
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  1
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  12
Oracle performance after algorithm subset selection: num_inst_solved =  228  - par10 =  455.70568736
(12 out of 18) Algorithms/solvers to keep are determined: 1, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 17085.37 (30 instances)
% >>> 4-th iteration<<<
('sr: ', array([ 852.26751891,  186.5630564 ,  131.57015826,  124.80700411,
         91.91209407,   81.99798781,   73.6383728 ]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	226.0 	406.275182889
2 	222.0 	1415.03356972
3 	217.0 	2583.02012502
4 	211.0 	3921.86251539
5 	203.0 	5603.84161115
6 	199.0 	6493.33811069
7 	197.0 	7014.25367666
8 	190.0 	8519.84479614
9 	188.0 	9009.58313762
10 	182.0 	10338.9500057
11 	172.0 	12424.5766135
12 	169.0 	13098.1954157
13 	160.0 	15001.6900423
14 	155.0 	16105.4025625
15 	148.0 	17604.8282191
16 	146.0 	18096.0140723
17 	136.0 	20240.4889092
18 	119.0 	23986.0512499
('top_ft_inx_arr: ', array([ 3,  4,  5,  6,  7,  8, 11, 15, 16, 18, 19, 21, 24, 26, 29, 33, 34,
       35, 36, 37, 39, 41, 46, 47, 48]))
ft_imp_total =  0.9
ft cv scores:  [ 0.17515804  0.25154562  0.09715189  0.25254346  0.09292896  0.19124366
  0.13443757  0.2057442   0.18997249  0.19849323]
top_ft_inx_arr:  [ 3  4  5  6  7  8 11 15 16 18 19 21 24 26 29 33 34 35 36 37 39 41 46 47 48]
(25 out of 50) Features to keep are determined: 3, 4, 5, 6, 7, 8, 11, 15, 16, 18, 19, 21, 24, 26, 29, 33, 34, 35, 36, 37, 39, 41, 46, 47, 48
Oracle performance before algorithm subset selection: num_inst_solved =  226  - par10 =  406.275182889
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.47843338  0.47843338  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.50542198  0.50542198  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.33623017  0.33623017  0.        ] ,  c
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.12735118  0.12735118  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 115.  115.  125.  125.] ,  [ 0.         0.2906406  0.2906406  0.       ] ,  c
plt.plot(xs, ys,  color) =  [ 100.  100.  120.  120.] ,  [ 0.12735118  0.33796247  0.33796247  0.2906406 ] ,  c
plt.plot(xs, ys,  color) =  [  80.   80.  110.  110.] ,  [ 0.33623017  0.44345141  0.44345141  0.33796247] ,  c
plt.plot(xs, ys,  color) =  [ 65.  65.  95.  95.] ,  [ 0.          0.48347165  0.48347165  0.44345141] ,  c
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.        0.436139  0.436139  0.      ] ,  m
plt.plot(xs, ys,  color) =  [ 155.  155.  170.  170.] ,  [ 0.          0.44477302  0.44477302  0.436139  ] ,  m
plt.plot(xs, ys,  color) =  [ 145.   145.   162.5  162.5] ,  [ 0.          0.49140216  0.49140216  0.44477302] ,  m
plt.plot(xs, ys,  color) =  [ 135.    135.    153.75  153.75] ,  [ 0.          0.52304242  0.52304242  0.49140216] ,  b
plt.plot(xs, ys,  color) =  [  80.      80.     144.375  144.375] ,  [ 0.48347165  0.5628372   0.5628372   0.52304242] ,  b
plt.plot(xs, ys,  color) =  [  55.       55.      112.1875  112.1875] ,  [ 0.          0.60942487  0.60942487  0.5628372 ] ,  b
plt.plot(xs, ys,  color) =  [ 45.       45.       83.59375  83.59375] ,  [ 0.          0.66364601  0.66364601  0.60942487] ,  b
plt.plot(xs, ys,  color) =  [ 30.        30.        64.296875  64.296875] ,  [ 0.50542198  0.6987688   0.6987688   0.66364601] ,  b
plt.plot(xs, ys,  color) =  [ 10.         10.         47.1484375  47.1484375] ,  [ 0.47843338  0.73467979  0.73467979  0.6987688 ] ,  b
leaves:  [ 1 12  4  7 17  0  8  5 10  3 11  9 15 13 14 16  2  6]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  12
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  3
3  is removed from pair - new par10:  2586.78955672
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  5
5  is removed from pair - new par10:  2607.70128446
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  11
11  is removed from pair - new par10:  2617.05226438
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  15
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  2
2  is removed from pair - new par10:  2637.704305
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  6
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  16
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  4
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  7
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  8
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  14
14  is removed from pair - new par10:  2643.67333741
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  13
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  0
0  is removed from pair - new par10:  2652.35242047
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  17
Oracle performance after algorithm subset selection: num_inst_solved =  226  - par10 =  450.25786158
(12 out of 18) Algorithms/solvers to keep are determined: 1, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 8878.60 (30 instances)
% >>> 5-th iteration<<<
('sr: ', array([ 850.54743738,  188.68551392,  129.29703694,  124.42529551,
         88.512154  ,   82.91047006,   75.42973175]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	228.0 	420.499715575
2 	223.0 	1626.16759235
3 	218.0 	2765.58604898
4 	211.0 	4300.76802511
5 	203.0 	5964.2483139
6 	199.0 	6845.12207395
7 	197.0 	7350.31326725
8 	190.0 	8835.75311087
9 	187.0 	9510.19548787
10 	182.0 	10626.7600599
11 	172.0 	12690.1741241
12 	170.0 	13145.1260048
13 	163.0 	14627.9598267
14 	157.0 	15930.4473421
15 	152.0 	17019.2951551
16 	149.0 	17715.3098381
17 	138.0 	20037.4180136
18 	122.0 	23545.6252597
('top_ft_inx_arr: ', array([ 1,  2,  3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26,
       29, 35, 36, 37, 39, 41, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [ 0.03081222  0.17165173  0.095521    0.20898736  0.10772781  0.17058872
 -0.05775435  0.2749827   0.18544541  0.17071326]
top_ft_inx_arr:  [ 1  2  3  4  5  7  8 11 13 15 16 18 19 21 24 25 26 29 35 36 37 39 41 46 47]
(25 out of 50) Features to keep are determined: 1, 2, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26, 29, 35, 36, 37, 39, 41, 46, 47
Oracle performance before algorithm subset selection: num_inst_solved =  228  - par10 =  420.499715575
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.37211138  0.37211138  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 65.  65.  75.  75.] ,  [ 0.          0.38259216  0.38259216  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 55.  55.  70.  70.] ,  [ 0.          0.51519468  0.51519468  0.38259216] ,  b
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.29394546  0.29394546  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 125.  125.  135.  135.] ,  [ 0.          0.09498556  0.09498556  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 115.  115.  130.  130.] ,  [ 0.          0.34585383  0.34585383  0.09498556] ,  c
plt.plot(xs, ys,  color) =  [ 100.   100.   122.5  122.5] ,  [ 0.29394546  0.41307257  0.41307257  0.34585383] ,  c
plt.plot(xs, ys,  color) =  [ 145.  145.  155.  155.] ,  [ 0.          0.43443259  0.43443259  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 111.25  111.25  150.    150.  ] ,  [ 0.41307257  0.52199854  0.52199854  0.43443259] ,  b
plt.plot(xs, ys,  color) =  [  85.      85.     130.625  130.625] ,  [ 0.          0.54962349  0.54962349  0.52199854] ,  b
plt.plot(xs, ys,  color) =  [  62.5      62.5     107.8125  107.8125] ,  [ 0.51519468  0.55621764  0.55621764  0.54962349] ,  b
plt.plot(xs, ys,  color) =  [ 45.       45.       85.15625  85.15625] ,  [ 0.          0.56028739  0.56028739  0.55621764] ,  b
plt.plot(xs, ys,  color) =  [ 35.        35.        65.078125  65.078125] ,  [ 0.          0.5737811   0.5737811   0.56028739] ,  b
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.58988595  0.58988595  0.        ] ,  b
plt.plot(xs, ys,  color) =  [  50.0390625   50.0390625  170.         170.       ] ,  [ 0.5737811   0.63011875  0.63011875  0.58988595] ,  b
plt.plot(xs, ys,  color) =  [  25.           25.          110.01953125  110.01953125] ,  [ 0.          0.67021803  0.67021803  0.63011875] ,  b
plt.plot(xs, ys,  color) =  [ 10.          10.          67.50976562  67.50976562] ,  [ 0.37211138  0.69526965  0.69526965  0.67021803] ,  b
leaves:  [ 4  7 13 17  6 16  2 14  0  9 15  8  3 11  5 10  1 12]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  15
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  3
3  is removed from pair - new par10:  2770.07449189
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  11
11  is removed from pair - new par10:  2779.01585479
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  2
2  is removed from pair - new par10:  2798.74473676
alg_portfolio =  [ 0  1  4  5  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  14
14  is removed from pair - new par10:  2803.1735911
alg_portfolio =  [ 0  1  4  5  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  16
alg_portfolio =  [ 0  1  4  5  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  5
5  is removed from pair - new par10:  2827.48439324
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  10
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  0
0  is removed from pair - new par10:  2833.3687125
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  6
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  17
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  1
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  12
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  13
Oracle performance after algorithm subset selection: num_inst_solved =  228  - par10 =  464.113083794
(12 out of 18) Algorithms/solvers to keep are determined: 1, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 12158.25 (30 instances)
% >>> 6-th iteration<<<
('sr: ', array([ 851.51020245,  185.88328746,  131.87092063,  123.74146817,
         89.15419152,   81.88014174,   72.55813445]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	227.0 	410.672627137
2 	221.0 	1812.33451674
3 	216.0 	2966.4091482
4 	209.0 	4488.79077163
5 	203.0 	5757.48341014
6 	199.0 	6647.98920023
7 	198.0 	6961.60696447
8 	191.0 	8448.96158115
9 	189.0 	8941.43165867
10 	183.0 	10247.864954
11 	175.0 	11925.2938331
12 	172.0 	12600.9882006
13 	162.0 	14707.8359205
14 	157.0 	15821.888066
15 	152.0 	16894.2191672
16 	149.0 	17599.2581447
17 	140.0 	19510.2323002
18 	120.0 	23886.8833942
('top_ft_inx_arr: ', array([ 0,  3,  4,  5,  7,  8, 13, 15, 16, 18, 19, 21, 24, 25, 26, 29, 31,
       33, 34, 35, 37, 39, 41, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [-0.00735013  0.1361092   0.2077706   0.11731858  0.12421412  0.27536571
  0.14745003  0.29570623  0.14845099  0.03303409]
top_ft_inx_arr:  [ 0  3  4  5  7  8 13 15 16 18 19 21 24 25 26 29 31 33 34 35 37 39 41 46 47]
(25 out of 50) Features to keep are determined: 0, 3, 4, 5, 7, 8, 13, 15, 16, 18, 19, 21, 24, 25, 26, 29, 31, 33, 34, 35, 37, 39, 41, 46, 47
Oracle performance before algorithm subset selection: num_inst_solved =  227  - par10 =  410.672627137
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.56099195  0.56099195  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.39117287  0.39117287  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 125.  125.  135.  135.] ,  [ 0.         0.1038238  0.1038238  0.       ] ,  r
plt.plot(xs, ys,  color) =  [ 115.  115.  130.  130.] ,  [ 0.          0.32947292  0.32947292  0.1038238 ] ,  r
plt.plot(xs, ys,  color) =  [ 105.   105.   122.5  122.5] ,  [ 0.          0.35399731  0.35399731  0.32947292] ,  r
plt.plot(xs, ys,  color) =  [  95.     95.    113.75  113.75] ,  [ 0.          0.42431629  0.42431629  0.35399731] ,  r
plt.plot(xs, ys,  color) =  [  85.      85.     104.375  104.375] ,  [ 0.          0.42914715  0.42914715  0.42431629] ,  r
plt.plot(xs, ys,  color) =  [ 75.      75.      94.6875  94.6875] ,  [ 0.          0.44374777  0.44374777  0.42914715] ,  r
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.39392857  0.39392857  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 155.  155.  170.  170.] ,  [ 0.          0.42703918  0.42703918  0.39392857] ,  c
plt.plot(xs, ys,  color) =  [ 145.   145.   162.5  162.5] ,  [ 0.          0.50092423  0.50092423  0.42703918] ,  c
plt.plot(xs, ys,  color) =  [  84.84375   84.84375  153.75     153.75   ] ,  [ 0.44374777  0.55127909  0.55127909  0.50092423] ,  b
plt.plot(xs, ys,  color) =  [  65.         65.        119.296875  119.296875] ,  [ 0.          0.62511359  0.62511359  0.55127909] ,  b
plt.plot(xs, ys,  color) =  [ 55.         55.         92.1484375  92.1484375] ,  [ 0.          0.63757975  0.63757975  0.62511359] ,  b
plt.plot(xs, ys,  color) =  [ 45.          45.          73.57421875  73.57421875] ,  [ 0.          0.66276084  0.66276084  0.63757975] ,  b
plt.plot(xs, ys,  color) =  [ 30.          30.          59.28710938  59.28710938] ,  [ 0.39117287  0.72025322  0.72025322  0.66276084] ,  b
plt.plot(xs, ys,  color) =  [ 10.          10.          44.64355469  44.64355469] ,  [ 0.56099195  0.72877029  0.72877029  0.72025322] ,  b
leaves:  [ 1 12  4  7 13 17  0  5  9 10 15  8  3 11 14 16  2  6]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  12
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  2
2  is removed from pair - new par10:  2985.97945269
alg_portfolio =  [ 0  1  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  3
3  is removed from pair - new par10:  2990.10054077
alg_portfolio =  [ 0  1  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  5
5  is removed from pair - new par10:  3002.3304827
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  6
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  8
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  9
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  10
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  11
11  is removed from pair - new par10:  3013.1628358
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  14
14  is removed from pair - new par10:  3020.85106463
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  15
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  16
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  0
0  is removed from pair - new par10:  3029.38388486
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  17
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  13
Oracle performance after algorithm subset selection: num_inst_solved =  227  - par10 =  448.787770273
(12 out of 18) Algorithms/solvers to keep are determined: 1, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 15685.81 (30 instances)
% >>> 7-th iteration<<<
('sr: ', array([ 855.55885297,  185.53124867,  130.34249177,  124.16268867,
         91.68015352,   84.15635315,   74.98760026]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	228.0 	431.058605254
2 	222.0 	1843.35420649
3 	216.0 	3214.57068131
4 	208.0 	4943.35728015
5 	200.0 	6611.88979199
6 	196.0 	7496.40763189
7 	194.0 	8004.71696318
8 	189.0 	9110.30716664
9 	186.0 	9794.52781719
10 	179.0 	11310.7361519
11 	171.0 	12980.0239317
12 	168.0 	13650.7369098
13 	158.0 	15748.5117369
14 	151.0 	17258.231776
15 	144.0 	18734.1150086
16 	142.0 	19223.910563
17 	133.0 	21130.2122019
18 	113.0 	25476.6575645
('top_ft_inx_arr: ', array([ 2,  3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29, 31,
       33, 35, 37, 39, 41, 44, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [ 0.06702993  0.0621644   0.17476094  0.06478059  0.10000933  0.12596737
  0.20646412  0.10191601  0.03133633  0.10836986]
top_ft_inx_arr:  [ 2  3  4  5  7  8 11 13 15 16 18 19 21 24 26 29 31 33 35 37 39 41 44 46 47]
(25 out of 50) Features to keep are determined: 2, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29, 31, 33, 35, 37, 39, 41, 44, 46, 47
Oracle performance before algorithm subset selection: num_inst_solved =  228  - par10 =  431.058605254
plt.plot(xs, ys,  color) =  [ 15.  15.  25.  25.] ,  [ 0.          0.31358332  0.31358332  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 55.  55.  65.  65.] ,  [ 0.          0.32322255  0.32322255  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 85.  85.  95.  95.] ,  [ 0.          0.11350524  0.11350524  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 75.  75.  90.  90.] ,  [ 0.          0.32445184  0.32445184  0.11350524] ,  r
plt.plot(xs, ys,  color) =  [ 60.   60.   82.5  82.5] ,  [ 0.32322255  0.37249341  0.37249341  0.32445184] ,  r
plt.plot(xs, ys,  color) =  [ 105.  105.  115.  115.] ,  [ 0.          0.39173428  0.39173428  0.        ] ,  r
plt.plot(xs, ys,  color) =  [  71.25   71.25  110.    110.  ] ,  [ 0.37249341  0.47206204  0.47206204  0.39173428] ,  r
plt.plot(xs, ys,  color) =  [ 145.  145.  155.  155.] ,  [ 0.          0.40740783  0.40740783  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 135.  135.  150.  150.] ,  [ 0.          0.4465403   0.4465403   0.40740783] ,  c
plt.plot(xs, ys,  color) =  [ 125.   125.   142.5  142.5] ,  [ 0.          0.51120985  0.51120985  0.4465403 ] ,  b
plt.plot(xs, ys,  color) =  [  90.625   90.625  133.75   133.75 ] ,  [ 0.47206204  0.51994934  0.51994934  0.51120985] ,  b
plt.plot(xs, ys,  color) =  [  45.       45.      112.1875  112.1875] ,  [ 0.          0.59841419  0.59841419  0.51994934] ,  b
plt.plot(xs, ys,  color) =  [ 35.       35.       78.59375  78.59375] ,  [ 0.          0.61095926  0.61095926  0.59841419] ,  b
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.63978656  0.63978656  0.        ] ,  b
plt.plot(xs, ys,  color) =  [  56.796875   56.796875  170.        170.      ] ,  [ 0.61095926  0.65556363  0.65556363  0.63978656] ,  b
plt.plot(xs, ys,  color) =  [  20.          20.         113.3984375  113.3984375] ,  [ 0.31358332  0.71952092  0.71952092  0.65556363] ,  b
plt.plot(xs, ys,  color) =  [  5.           5.          66.69921875  66.69921875] ,  [ 0.          0.72360631  0.72360631  0.71952092] ,  b
leaves:  [13  4  7 17  0  9 15  8  3 11  5 10  6 14  2 16  1 12]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  3
3  is removed from pair - new par10:  3219.07372646
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  11
11  is removed from pair - new par10:  3229.56266877
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  15
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  5
5  is removed from pair - new par10:  3251.21968571
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  2
2  is removed from pair - new par10:  3271.3229229
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  14
14  is removed from pair - new par10:  3278.99171029
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  16
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  6
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  0
0  is removed from pair - new par10:  3287.60489703
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  17
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  1
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  12
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  13
Oracle performance after algorithm subset selection: num_inst_solved =  228  - par10 =  474.530625684
(12 out of 18) Algorithms/solvers to keep are determined: 1, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 10330.56 (30 instances)
% >>> 8-th iteration<<<
('sr: ', array([ 852.36572047,  189.81523505,  129.02440771,  122.71159786,
         89.54987038,   82.93460205,   74.56499245]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	227.0 	416.26121504
2 	222.0 	1613.88531632
3 	217.0 	2778.82215789
4 	210.0 	4312.72281038
5 	203.0 	5784.71143714
6 	199.0 	6676.84952715
7 	197.0 	7197.03818807
8 	190.0 	8707.3406211
9 	187.0 	9396.77154471
10 	181.0 	10721.2948475
11 	173.0 	12400.9639421
12 	170.0 	13079.3083071
13 	161.0 	14971.2089892
14 	154.0 	16497.868744
15 	147.0 	17993.4409804
16 	144.0 	18689.7963604
17 	134.0 	20812.547529
18 	114.0 	25181.2031458
('top_ft_inx_arr: ', array([ 2,  3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 24, 25, 26, 28, 29,
       34, 35, 37, 39, 41, 44, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [ 0.06364908  0.20118516  0.10864626  0.32434882  0.08022691  0.12798732
  0.10373583  0.22100325  0.09451878  0.24557289]
top_ft_inx_arr:  [ 2  3  4  5  7  8 11 13 15 16 18 19 24 25 26 28 29 34 35 37 39 41 44 46 47]
(25 out of 50) Features to keep are determined: 2, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 24, 25, 26, 28, 29, 34, 35, 37, 39, 41, 44, 46, 47
Oracle performance before algorithm subset selection: num_inst_solved =  227  - par10 =  416.26121504
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.39985158  0.39985158  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.11466762  0.11466762  0.        ] ,  r
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.31302923  0.31302923  0.        ] ,  r
plt.plot(xs, ys,  color) =  [  80.   80.  100.  100.] ,  [ 0.11466762  0.34309165  0.34309165  0.31302923] ,  r
plt.plot(xs, ys,  color) =  [ 115.  115.  125.  125.] ,  [ 0.          0.38328561  0.38328561  0.        ] ,  r
plt.plot(xs, ys,  color) =  [  90.   90.  120.  120.] ,  [ 0.34309165  0.46227625  0.46227625  0.38328561] ,  r
plt.plot(xs, ys,  color) =  [  65.   65.  105.  105.] ,  [ 0.          0.51346522  0.51346522  0.46227625] ,  b
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.44752402  0.44752402  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 155.  155.  170.  170.] ,  [ 0.          0.45062409  0.45062409  0.44752402] ,  c
plt.plot(xs, ys,  color) =  [ 145.   145.   162.5  162.5] ,  [ 0.          0.47350384  0.47350384  0.45062409] ,  c
plt.plot(xs, ys,  color) =  [ 135.    135.    153.75  153.75] ,  [ 0.          0.58633678  0.58633678  0.47350384] ,  b
plt.plot(xs, ys,  color) =  [  85.      85.     144.375  144.375] ,  [ 0.51346522  0.61261863  0.61261863  0.58633678] ,  b
plt.plot(xs, ys,  color) =  [  55.       55.      114.6875  114.6875] ,  [ 0.          0.64143109  0.64143109  0.61261863] ,  b
plt.plot(xs, ys,  color) =  [ 45.       45.       84.84375  84.84375] ,  [ 0.          0.6581389   0.6581389   0.64143109] ,  b
plt.plot(xs, ys,  color) =  [ 35.        35.        64.921875  64.921875] ,  [ 0.          0.66123316  0.66123316  0.6581389 ] ,  b
plt.plot(xs, ys,  color) =  [ 25.         25.         49.9609375  49.9609375] ,  [ 0.          0.6703818   0.6703818   0.66123316] ,  b
plt.plot(xs, ys,  color) =  [ 10.          10.          37.48046875  37.48046875] ,  [ 0.39985158  0.68301632  0.68301632  0.6703818 ] ,  b
leaves:  [ 4  7 12 17  0  1  8  3 11  9 15  5 10 13  6 14  2 16]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  3
3  is removed from pair - new par10:  2783.18670764
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  11
11  is removed from pair - new par10:  2792.95298662
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  15
alg_portfolio =  [ 0  1  2  4  5  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  5
5  is removed from pair - new par10:  2811.66406637
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  2
2  is removed from pair - new par10:  2830.36728275
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  14
14  is removed from pair - new par10:  2838.11942253
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  16
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  8
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  6
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  13
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  1
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  0
0  is removed from pair - new par10:  2846.79713333
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  17
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  12
Oracle performance after algorithm subset selection: num_inst_solved =  227  - par10 =  455.287139273
(12 out of 18) Algorithms/solvers to keep are determined: 1, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glueminisat_2.2.5
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 8932.66 (30 instances)
% >>> 9-th iteration<<<
('sr: ', array([ 852.57558432,  187.61940442,  131.22463882,  122.77623418,
         86.67310396,   83.21613592,   75.04783018]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	225.0 	403.976556102
2 	220.0 	1590.88429754
3 	216.0 	2551.2895066
4 	210.0 	3885.69737348
5 	203.0 	5365.08123502
6 	200.0 	6061.8453564
7 	198.0 	6582.01545952
8 	192.0 	7892.14889601
9 	189.0 	8594.03883059
10 	182.0 	10130.2090547
11 	173.0 	12021.0765043
12 	170.0 	12695.3005031
13 	161.0 	14616.1899129
14 	154.0 	16152.4997277
15 	148.0 	17457.8336066
16 	145.0 	18151.4863337
17 	137.0 	19891.0856167
18 	118.0 	24093.5054836
('top_ft_inx_arr: ', array([ 1,  3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26, 27,
       29, 33, 34, 35, 37, 39, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [-0.01867874  0.2274573   0.12340655  0.19367635  0.20097542  0.18291543
  0.14104429  0.30530122  0.16444828  0.12980376]
top_ft_inx_arr:  [ 1  3  4  5  7  8 11 13 15 16 18 19 21 24 25 26 27 29 33 34 35 37 39 46 47]
(25 out of 50) Features to keep are determined: 1, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 25, 26, 27, 29, 33, 34, 35, 37, 39, 46, 47
Oracle performance before algorithm subset selection: num_inst_solved =  225  - par10 =  403.976556102
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.         0.5674746  0.5674746  0.       ] ,  b
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.36495583  0.36495583  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 85.  85.  95.  95.] ,  [ 0.          0.28184649  0.28184649  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 115.  115.  125.  125.] ,  [ 0.          0.12196324  0.12196324  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 135.  135.  145.  145.] ,  [ 0.          0.36855793  0.36855793  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 120.  120.  140.  140.] ,  [ 0.12196324  0.36940256  0.36940256  0.36855793] ,  r
plt.plot(xs, ys,  color) =  [ 105.  105.  130.  130.] ,  [ 0.          0.3878303   0.3878303   0.36940256] ,  r
plt.plot(xs, ys,  color) =  [  90.    90.   117.5  117.5] ,  [ 0.28184649  0.41790322  0.41790322  0.3878303 ] ,  r
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.         0.4573227  0.4573227  0.       ] ,  r
plt.plot(xs, ys,  color) =  [ 155.  155.  170.  170.] ,  [ 0.          0.48900466  0.48900466  0.4573227 ] ,  r
plt.plot(xs, ys,  color) =  [ 103.75  103.75  162.5   162.5 ] ,  [ 0.41790322  0.51135464  0.51135464  0.48900466] ,  r
plt.plot(xs, ys,  color) =  [  75.      75.     133.125  133.125] ,  [ 0.          0.51344144  0.51344144  0.51135464] ,  r
plt.plot(xs, ys,  color) =  [  65.       65.      104.0625  104.0625] ,  [ 0.          0.60131585  0.60131585  0.51344144] ,  b
plt.plot(xs, ys,  color) =  [ 55.       55.       84.53125  84.53125] ,  [ 0.          0.65875303  0.65875303  0.60131585] ,  b
plt.plot(xs, ys,  color) =  [ 45.        45.        69.765625  69.765625] ,  [ 0.          0.66732263  0.66732263  0.65875303] ,  b
plt.plot(xs, ys,  color) =  [ 30.         30.         57.3828125  57.3828125] ,  [ 0.36495583  0.68518129  0.68518129  0.66732263] ,  b
plt.plot(xs, ys,  color) =  [ 10.          10.          43.69140625  43.69140625] ,  [ 0.5674746   0.7452499   0.7452499   0.68518129] ,  b
leaves:  [ 1 12  4  7 17 13  0  6  9 15  8  3 11  5 10 16  2 14]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  12
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  2
2  is removed from pair - new par10:  2571.08593012
alg_portfolio =  [ 0  1  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  3
3  is removed from pair - new par10:  2575.7723536
alg_portfolio =  [ 0  1  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  5
5  is removed from pair - new par10:  2594.22400413
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  6
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  8
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  9
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  10
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  11
11  is removed from pair - new par10:  2606.02532468
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 14 15 16 17]  -- alg_inx =  14
14  is removed from pair - new par10:  2612.15872354
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  15
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  16
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  0
0  is removed from pair - new par10:  2619.56201782
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  13
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  17
Oracle performance after algorithm subset selection: num_inst_solved =  225  - par10 =  449.240672338
(12 out of 18) Algorithms/solvers to keep are determined: 1, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 9067.23 (30 instances)
% >>> 10-th iteration<<<
('sr: ', array([ 847.64782841,  191.47345724,  130.04051009,  125.1861245 ,
         90.03246621,   83.33196438,   75.32466893]), ' - svd_k: ', 7)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	231.0 	435.979244281
2 	225.0 	1823.85872858
3 	219.0 	3175.53547204
4 	211.0 	4871.83966961
5 	204.0 	6322.1585329
6 	200.0 	7200.2329588
7 	198.0 	7683.24831416
8 	191.0 	9164.10708542
9 	188.0 	9846.39814965
10 	182.0 	11136.2210297
11 	173.0 	12972.6558096
12 	171.0 	13436.3952125
13 	163.0 	15118.9215198
14 	157.0 	16422.7595647
15 	150.0 	17895.1497641
16 	147.0 	18586.8844004
17 	136.0 	20881.4301656
18 	119.0 	24539.6001874
('top_ft_inx_arr: ', array([ 1,  2,  3,  4,  5,  7,  8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29,
       33, 35, 36, 37, 39, 41, 46, 47]))
ft_imp_total =  0.9
ft cv scores:  [ 0.00288604  0.13603787  0.24005174  0.26229319  0.13820332  0.12338181
  0.13471689  0.29063614  0.23744878  0.15402683]
top_ft_inx_arr:  [ 1  2  3  4  5  7  8 11 13 15 16 18 19 21 24 26 29 33 35 36 37 39 41 46 47]
(25 out of 50) Features to keep are determined: 1, 2, 3, 4, 5, 7, 8, 11, 13, 15, 16, 18, 19, 21, 24, 26, 29, 33, 35, 36, 37, 39, 41, 46, 47
Oracle performance before algorithm subset selection: num_inst_solved =  231  - par10 =  435.979244281
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.47506429  0.47506429  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.         0.3707646  0.3707646  0.       ] ,  r
plt.plot(xs, ys,  color) =  [ 85.  85.  95.  95.] ,  [ 0.          0.46130747  0.46130747  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 75.  75.  90.  90.] ,  [ 0.          0.47394104  0.47394104  0.46130747] ,  c
plt.plot(xs, ys,  color) =  [ 65.   65.   82.5  82.5] ,  [ 0.          0.57062324  0.57062324  0.47394104] ,  b
plt.plot(xs, ys,  color) =  [ 125.  125.  135.  135.] ,  [ 0.          0.34273382  0.34273382  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 145.  145.  155.  155.] ,  [ 0.          0.09454376  0.09454376  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.27364986  0.27364986  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 150.  150.  170.  170.] ,  [ 0.09454376  0.34813656  0.34813656  0.27364986] ,  m
plt.plot(xs, ys,  color) =  [ 130.  130.  160.  160.] ,  [ 0.34273382  0.4579943   0.4579943   0.34813656] ,  m
plt.plot(xs, ys,  color) =  [ 115.  115.  145.  145.] ,  [ 0.          0.47368228  0.47368228  0.4579943 ] ,  m
plt.plot(xs, ys,  color) =  [ 105.  105.  130.  130.] ,  [ 0.          0.57440758  0.57440758  0.47368228] ,  b
plt.plot(xs, ys,  color) =  [  73.75   73.75  117.5   117.5 ] ,  [ 0.57062324  0.58020543  0.58020543  0.57440758] ,  b
plt.plot(xs, ys,  color) =  [ 55.     55.     95.625  95.625] ,  [ 0.          0.60055034  0.60055034  0.58020543] ,  b
plt.plot(xs, ys,  color) =  [ 45.      45.      75.3125  75.3125] ,  [ 0.          0.62018404  0.62018404  0.60055034] ,  b
plt.plot(xs, ys,  color) =  [ 30.       30.       60.15625  60.15625] ,  [ 0.3707646   0.70028763  0.70028763  0.62018404] ,  b
plt.plot(xs, ys,  color) =  [ 10.        10.        45.078125  45.078125] ,  [ 0.47506429  0.7181146   0.7181146   0.70028763] ,  b
leaves:  [ 1 12  4  7 13 17  6 14  2 16  0  8  5 10  3 11  9 15]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  12
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  2
2  is removed from pair - new par10:  3183.51607287
alg_portfolio =  [ 0  1  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17]  -- alg_inx =  14
14  is removed from pair - new par10:  3186.07173005
alg_portfolio =  [ 0  1  3  4  5  6  7  8  9 10 11 12 13 15 16 17]  -- alg_inx =  16
alg_portfolio =  [ 0  1  3  4  5  6  7  8  9 10 11 12 13 15 16 17]  -- alg_inx =  3
3  is removed from pair - new par10:  3194.9705482
alg_portfolio =  [ 0  1  4  5  6  7  8  9 10 11 12 13 15 16 17]  -- alg_inx =  5
5  is removed from pair - new par10:  3213.96246814
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 15 16 17]  -- alg_inx =  8
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 15 16 17]  -- alg_inx =  9
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 15 16 17]  -- alg_inx =  10
alg_portfolio =  [ 0  1  4  6  7  8  9 10 11 12 13 15 16 17]  -- alg_inx =  11
11  is removed from pair - new par10:  3227.48535597
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  15
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  6
alg_portfolio =  [ 0  1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  0
0  is removed from pair - new par10:  3235.61476443
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  17
alg_portfolio =  [ 1  4  6  7  8  9 10 12 13 15 16 17]  -- alg_inx =  13
Oracle performance after algorithm subset selection: num_inst_solved =  231  - par10 =  479.726186065
(12 out of 18) Algorithms/solvers to keep are determined: 1, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.]))
(270 out of 270) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0
% Backup Solver: glucose_2
% Input Instances for Training: 270 (-unsolvable)
% Used Instances for Training: 270 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 13854.14 (30 instances)
% 
%  >>> Instances: 300 <<<
%  >>> Oracle Evaluation (w/o unsolved) <<<
% 
% Unsolved (not by any algorithm and not by feature computation): 47
% PAR1 time: 1137.674485 (420.167373)
% Par10 time: 8187.517818 (419.981603)
% #TOs: 47 (0)
% 
%  >>> Cross Fold Evaluation <<<
% 
% Presolved: 10
% >>>With Unsolvable Instances
% Timeouts per #Thread: {1: 69, 2: 59, 3: 56, 4: 53, 5: 53, 6: 51, 7: 49, 8: 49, 9: 48, 10: 48, 11: 47, 12: 47, 13: 47, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0}
% Solved (perc) per #Thread: {1: 0.77, 2: 0.8033333333333333, 3: 0.8133333333333334, 4: 0.8233333333333334, 5: 0.8233333333333334, 6: 0.83, 7: 0.8366666666666667, 8: 0.8366666666666667, 9: 0.84, 10: 0.84, 11: 0.8433333333333333, 12: 0.8433333333333333, 13: 0.8433333333333333, 14: 1.0, 15: 1.0, 16: 1.0, 17: 1.0, 18: 1.0}
% AVG per #Thread: {1: 1692.2985933200052, 2: 1481.1729833666686, 3: 1399.3815105400001, 4: 1349.8800326566661, 5: 1342.7486656833362, 6: 1325.2785493933332, 7: 1297.0961567466675, 8: 1293.4047065233362, 9: 1282.119573873331, 10: 1272.9019277499988, 11: 1258.8343104333321, 12: 1258.4256728666633, 13: 1249.335426919999, 14: 0.06073333333333333, 15: 0.06073333333333333, 16: 0.06073333333333333, 17: 0.06073333333333333, 18: 0.06073333333333333}
% PAR10 per #Thread: {1: 12042.298593320005, 2: 10331.172983366669, 3: 9799.38151054, 4: 9299.880032656667, 5: 9292.748665683337, 6: 8975.278549393333, 7: 8647.096156746667, 8: 8643.404706523335, 9: 8482.119573873331, 10: 8472.90192775, 11: 8308.834310433333, 12: 8308.425672866664, 13: 8299.335426919999, 14: 0.06073333333333333, 15: 0.06073333333333333, 16: 0.06073333333333333, 17: 0.06073333333333333, 18: 0.06073333333333333}
% >>>Without Unsolved Instances (depends on pre-solved in feature groups)
% Timeouts: {1: 22, 2: 12, 3: 9, 4: 6, 5: 6, 6: 4, 7: 2, 8: 2, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: -47, 15: -47, 16: -47, 17: -47, 18: -47}
% Solved (perc): {1: 0.9130434782608695, 2: 0.9525691699604744, 3: 0.9644268774703557, 4: 0.9762845849802372, 5: 0.9762845849802372, 6: 0.9841897233201581, 7: 0.9920948616600791, 8: 0.9920948616600791, 9: 0.9960474308300395, 10: 0.9960474308300395, 11: 0.9999999999999999, 12: 0.9999999999999999, 13: 0.9999999999999999, 14: 1.1857707509881423, 15: 1.1857707509881423, 16: 1.1857707509881423, 17: 1.1857707509881423, 18: 1.1857707509881423}
% PAR1: {1: 1077.824418956528, 2: 827.4778458893303, 3: 730.4919097312255, 4: 671.7945051264817, 5: 663.3383387549442, 6: 642.6227858418971, 7: 609.2049289486176, 8: 604.8277152450627, 9: 591.4461350276654, 10: 580.5161198616587, 11: 563.8351507114611, 12: 563.3506002371502, 13: 552.571652474307, 14: -928.7817391304347, 15: -928.7817391304347, 16: -928.7817391304347, 17: -928.7817391304347, 18: -928.7817391304347}
% PAR10: {1: 4990.8678972173975, 2: 2961.865197667986, 3: 2331.2824235652174, 4: 1738.9881810158115, 5: 1730.532014644274, 6: 1354.0852364347825, 7: 964.9361542450603, 8: 960.5589405415035, 9: 769.3117476758867, 10: 758.3817325098801, 11: 563.8351507114611, 12: 563.350600237152, 13: 552.571652474307, 14: -9288.465533596836, 15: -9288.465533596836, 16: -9288.465533596836, 17: -9288.465533596836, 18: -9288.465533596836}
% 
% Time used by each solver: {'minisathackLR_GL_SHR_2011-03-02': 10703.686000000002, 'minisathackcontrasat_2011-03-02': 79141.47050699999, 'MPhaseSAT64_2011-05-14_fixed_': 33069.442, 'CryptoMiniSat_Strange-Night2-st_fixed_': 54054.523042999994, 'EBGlucose_1.0': 16055.809566, 'minisathackcir_minisat_2011-05-13_simp_': 16342.7729, 'QuteRSat_2011-05-12_fixed_': 52315.618834, 'SAT09referencesolverprecosat_236': 29124.808899999996, 'Lingeling_587f_fixed_': 27609.709400000003, 'RestartSAT_B95': 23690.259866000004, 'minisathackEBMiniSAT_2011-03-02': 27147.597895999996, 'glucose_2': 74765.76099599998, 'glueminisat_2.2.5': 34387.648087999994}
% Optimal Time used by each solver: {'minisathackLR_GL_SHR_2011-03-02': 241445.91419599997, 'rcl_2011-04-01': 999.5696999999999, 'minisathackcontrasat_2011-03-02': 748.676488, 'SAT09referencesolverglucose_1.0': 1761.96, 'minisathackminisat_psm_2011-04-01': 1175.1730499999999, 'MPhaseSAT64_2011-05-14_fixed_': 18139.24949, 'EBGlucose_1.0': 3012.9838, 'minisathackMiniSAT_2.2.0-agile-26': 1611.924971, 'CryptoMiniSat_Strange-Night2-st_fixed_': 7449.210459999999, 'minisathackcir_minisat_2011-05-13_simp_': 794.152497, 'QuteRSat_2011-05-12_fixed_': 20680.214415, 'SAT09referencesolverprecosat_236': 4432.881372, 'Lingeling_587f_fixed_': 10308.949500000002, 'RestartSAT_B95': 9362.944313999998, 'minisathackreferenceminisat_2.2.0': 3026.339996, 'minisathackEBMiniSAT_2011-03-02': 181.82723800000002, 'glucose_2': 9830.662042, 'glueminisat_2.2.5': 6339.7119330000005}
Total time passed:  91.627  seconds
Started solving  /home/misir/Desktop/aslib_data-aslib-v1.1/SAT12-ALL
% Command line arguments:
% --aslib-dir /home/misir/Desktop/aslib_data-aslib-v1.1/SAT12-ALL --model-dir MODEL_DIR --print-times /home/misir/Desktop/liclipse/Workspace/flexfolio-data_filtering-v3/output/17082015161556555077/SAT12-ALL.csv
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT12-ALL/description.txt
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT12-ALL/algorithm_runs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT12-ALL/feature_values.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT12-ALL/feature_runstatus.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT12-ALL/ground_truth.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT12-ALL/feature_costs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/SAT12-ALL/cv.arff
% 1-th repetition: 161,162,161,161,162,161,162,161,162,161 distribution
% Used Feature Steps: Pre,Basic,KLB,CG
% Used features: CG_mean,BINARYp,reducedVars,VG_mean,VCG_VAR_mean,VG_min,VCG_VAR_coeff_variation,nvarsOrig,CG_coeff_variation,VG_max,CG_max,POSNEG_RATIO_CLAUSE_max,horn_clauses_fraction,nclauses,vars_clauses_ratio,CG_entropy,UNARY,cluster_coeff_mean,VCG_CLAUSE_coeff_variation,POSNEG_RATIO_VAR_max,VCG_VAR_max,POSNEG_RATIO_VAR_entropy,TRINARYp,POSNEG_RATIO_VAR_min,HORNY_VAR_max,VCG_CLAUSE_mean,VCG_CLAUSE_min,cluster_coeff_entropy,POSNEG_RATIO_CLAUSE_min,HORNY_VAR_coeff_variation,VCG_VAR_min,nvars,nclausesOrig,POSNEG_RATIO_CLAUSE_mean,CG_min,VG_coeff_variation,POSNEG_RATIO_VAR_mean,cluster_coeff_coeff_variation,POSNEG_RATIO_CLAUSE_coeff_variation,VCG_CLAUSE_entropy,VCG_VAR_entropy,cluster_coeff_min,POSNEG_RATIO_VAR_stdev,HORNY_VAR_entropy,cluster_coeff_max,HORNY_VAR_mean,VCG_CLAUSE_max,HORNY_VAR_min,POSNEG_RATIO_CLAUSE_entropy,reducedClauses
% 
% Check Consistency and Completeness of input data
% Instances: 		 1614
% Algorithms: 		 31
% Incomplete Feature Vector: 	 0 (maybe imputed)
% Unsolvable Instances (status): 	 20
% Unsolvable Instances (runtime): 	 20
% Valid Instances: 	 1594
% Presolved: 		 20
% Average Feature Costs: 	 40.5899
% Use given CV of 1-th repetition
% >>> 1-th iteration<<<
('sr: ', array([ 4690.03709903,  1465.73613912,   622.1443515 ,   564.646992  ,
         438.0005198 ,   386.24952127,   370.60361056,   364.36376996,
         326.02719061,   316.52329553,   279.8781841 ,   259.5499105 ]), ' - svd_k: ', 12)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1436.0 	93.7804117618
2 	1341.0 	889.903545195
3 	1275.0 	1446.04000748
4 	1237.0 	1773.39422735
5 	1196.0 	2120.53533449
6 	1138.0 	2597.98587066
7 	1090.0 	2995.96261856
8 	1045.0 	3365.85190125
9 	1005.0 	3702.65477033
10 	947.0 	4182.23145556
11 	838.0 	5087.93698478
12 	779.0 	5575.02319648
13 	749.0 	5827.09099591
14 	725.0 	6024.36962403
15 	708.0 	6169.92643461
16 	687.0 	6344.37731204
17 	657.0 	6591.41704045
18 	630.0 	6816.63862123
19 	597.0 	7092.3319917
20 	555.0 	7434.47369086
21 	516.0 	7760.56193596
22 	479.0 	8070.93222844
23 	395.0 	8762.38630223
24 	214.0 	10242.9252089
25 	155.0 	10726.4067201
26 	137.0 	10875.0347214
27 	116.0 	11051.7031894
28 	93.0 	11238.1898607
29 	70.0 	11424.810954
30 	54.0 	11555.6641783
31 	36.0 	11704.1133774
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  4,  6,  7,  8, 11, 13, 16, 18, 19, 21, 23, 24, 25,
       28, 29, 31, 33, 34, 36, 37, 38]))
ft_imp_total =  0.9
ft cv scores:  [ 0.51389951  0.52935199  0.48403347  0.54020178  0.54095289  0.59802173
  0.48336643  0.40751723  0.54740936  0.45364662]
top_ft_inx_arr:  [ 0  1  2  3  4  6  7  8 11 13 16 18 19 21 23 24 25 28 29 31 33 34 36 37 38]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 4, 6, 7, 8, 11, 13, 16, 18, 19, 21, 23, 24, 25, 28, 29, 31, 33, 34, 36, 37, 38
Oracle performance before algorithm subset selection: num_inst_solved =  1436  - par10 =  93.7804117618
plt.plot(xs, ys,  color) =  [ 15.  15.  25.  25.] ,  [ 0.          0.19534866  0.19534866  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 45.  45.  55.  55.] ,  [ 0.        0.309464  0.309464  0.      ] ,  r
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.25566646  0.25566646  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 115.  115.  125.  125.] ,  [ 0.          0.34555624  0.34555624  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 135.  135.  145.  145.] ,  [ 0.          0.17486474  0.17486474  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 155.  155.  165.  165.] ,  [ 0.          0.23389153  0.23389153  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 140.  140.  160.  160.] ,  [ 0.17486474  0.43123753  0.43123753  0.23389153] ,  m
plt.plot(xs, ys,  color) =  [ 185.  185.  195.  195.] ,  [ 0.          0.36275176  0.36275176  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 175.  175.  190.  190.] ,  [ 0.          0.47072986  0.47072986  0.36275176] ,  m
plt.plot(xs, ys,  color) =  [ 215.  215.  225.  225.] ,  [ 0.          0.18159985  0.18159985  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 255.  255.  265.  265.] ,  [ 0.          0.13470277  0.13470277  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 245.  245.  260.  260.] ,  [ 0.          0.28084537  0.28084537  0.13470277] ,  m
plt.plot(xs, ys,  color) =  [ 235.   235.   252.5  252.5] ,  [ 0.          0.3012437   0.3012437   0.28084537] ,  m
plt.plot(xs, ys,  color) =  [ 220.    220.    243.75  243.75] ,  [ 0.18159985  0.30625614  0.30625614  0.3012437 ] ,  m
plt.plot(xs, ys,  color) =  [ 205.     205.     231.875  231.875] ,  [ 0.          0.50506658  0.50506658  0.30625614] ,  m
plt.plot(xs, ys,  color) =  [ 182.5     182.5     218.4375  218.4375] ,  [ 0.47072986  0.5327614   0.5327614   0.50506658] ,  m
plt.plot(xs, ys,  color) =  [ 150.       150.       200.46875  200.46875] ,  [ 0.43123753  0.54514616  0.54514616  0.5327614 ] ,  m
plt.plot(xs, ys,  color) =  [ 120.        120.        175.234375  175.234375] ,  [ 0.34555624  0.56077804  0.56077804  0.54514616] ,  m
plt.plot(xs, ys,  color) =  [ 105.         105.         147.6171875  147.6171875] ,  [ 0.          0.57118096  0.57118096  0.56077804] ,  m
plt.plot(xs, ys,  color) =  [ 295.  295.  305.  305.] ,  [ 0.          0.16978149  0.16978149  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 285.  285.  300.  300.] ,  [ 0.          0.54447567  0.54447567  0.16978149] ,  m
plt.plot(xs, ys,  color) =  [ 275.   275.   292.5  292.5] ,  [ 0.          0.57639558  0.57639558  0.54447567] ,  m
plt.plot(xs, ys,  color) =  [ 126.30859375  126.30859375  283.75        283.75      ] ,  [ 0.57118096  0.57978499  0.57978499  0.57639558] ,  m
plt.plot(xs, ys,  color) =  [  95.           95.          205.02929688  205.02929688] ,  [ 0.          0.64023506  0.64023506  0.57978499] ,  m
plt.plot(xs, ys,  color) =  [  80.           80.          150.01464844  150.01464844] ,  [ 0.25566646  0.74284093  0.74284093  0.64023506] ,  b
plt.plot(xs, ys,  color) =  [  65.           65.          115.00732422  115.00732422] ,  [ 0.          0.75630454  0.75630454  0.74284093] ,  b
plt.plot(xs, ys,  color) =  [ 50.          50.          90.00366211  90.00366211] ,  [ 0.309464    0.76865696  0.76865696  0.75630454] ,  b
plt.plot(xs, ys,  color) =  [ 35.          35.          70.00183105  70.00183105] ,  [ 0.          0.77043136  0.77043136  0.76865696] ,  b
plt.plot(xs, ys,  color) =  [ 20.          20.          52.50091553  52.50091553] ,  [ 0.19534866  0.77365467  0.77365467  0.77043136] ,  b
plt.plot(xs, ys,  color) =  [  5.           5.          36.25045776  36.25045776] ,  [ 0.          1.02069682  1.02069682  0.77365467] ,  b
leaves:  [23 22 25 30 17 29  2  3 21  9 20  1  5 12 15  0  4 11 10 16  7 18 27 13 14
 26 28  6 19  8 24]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  -- alg_inx =  22
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  25
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  12
12  is removed from pair - new par10:  1447.4065813
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25
 26 27 28 29 30]  -- alg_inx =  15
15  is removed from pair - new par10:  1448.12216625
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  18
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  27
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  26
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  28
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  24
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  17
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  29
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  21
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  0
0  is removed from pair - new par10:  1449.13280692
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  4
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  13
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  14
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  1
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  5
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  10
10  is removed from pair - new par10:  1449.28287656
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  16
16  is removed from pair - new par10:  1449.72286263
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  11
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  7
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  19
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  20
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  6
6  is removed from pair - new par10:  1453.42511889
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 17 18 19 20 21 22 23 24 25 26 27 28 29 30]  -- alg_inx =  9
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 17 18 19 20 21 22 23 24 25 26 27 28 29 30]  -- alg_inx =  2
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 17 18 19 20 21 22 23 24 25 26 27 28 29 30]  -- alg_inx =  30
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 17 18 19 20 21 22 23 24 25 26 27 28 29 30]  -- alg_inx =  23
Oracle performance after algorithm subset selection: num_inst_solved =  1436  - par10 =  95.5407599164
(25 out of 31) Algorithms/solvers to keep are determined: 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.45000000e+03,   1.45100000e+03,   1.45200000e+03]))
(1453 out of 1453) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0, 1232.0, 1233.0, 1234.0, 1235.0, 1236.0, 1237.0, 1238.0, 1239.0, 1240.0, 1241.0, 1242.0, 1243.0, 1244.0, 1245.0, 1246.0, 1247.0, 1248.0, 1249.0, 1250.0, 1251.0, 1252.0, 1253.0, 1254.0, 1255.0, 1256.0, 1257.0, 1258.0, 1259.0, 1260.0, 1261.0, 1262.0, 1263.0, 1264.0, 1265.0, 1266.0, 1267.0, 1268.0, 1269.0, 1270.0, 1271.0, 1272.0, 1273.0, 1274.0, 1275.0, 1276.0, 1277.0, 1278.0, 1279.0, 1280.0, 1281.0, 1282.0, 1283.0, 1284.0, 1285.0, 1286.0, 1287.0, 1288.0, 1289.0, 1290.0, 1291.0, 1292.0, 1293.0, 1294.0, 1295.0, 1296.0, 1297.0, 1298.0, 1299.0, 1300.0, 1301.0, 1302.0, 1303.0, 1304.0, 1305.0, 1306.0, 1307.0, 1308.0, 1309.0, 1310.0, 1311.0, 1312.0, 1313.0, 1314.0, 1315.0, 1316.0, 1317.0, 1318.0, 1319.0, 1320.0, 1321.0, 1322.0, 1323.0, 1324.0, 1325.0, 1326.0, 1327.0, 1328.0, 1329.0, 1330.0, 1331.0, 1332.0, 1333.0, 1334.0, 1335.0, 1336.0, 1337.0, 1338.0, 1339.0, 1340.0, 1341.0, 1342.0, 1343.0, 1344.0, 1345.0, 1346.0, 1347.0, 1348.0, 1349.0, 1350.0, 1351.0, 1352.0, 1353.0, 1354.0, 1355.0, 1356.0, 1357.0, 1358.0, 1359.0, 1360.0, 1361.0, 1362.0, 1363.0, 1364.0, 1365.0, 1366.0, 1367.0, 1368.0, 1369.0, 1370.0, 1371.0, 1372.0, 1373.0, 1374.0, 1375.0, 1376.0, 1377.0, 1378.0, 1379.0, 1380.0, 1381.0, 1382.0, 1383.0, 1384.0, 1385.0, 1386.0, 1387.0, 1388.0, 1389.0, 1390.0, 1391.0, 1392.0, 1393.0, 1394.0, 1395.0, 1396.0, 1397.0, 1398.0, 1399.0, 1400.0, 1401.0, 1402.0, 1403.0, 1404.0, 1405.0, 1406.0, 1407.0, 1408.0, 1409.0, 1410.0, 1411.0, 1412.0, 1413.0, 1414.0, 1415.0, 1416.0, 1417.0, 1418.0, 1419.0, 1420.0, 1421.0, 1422.0, 1423.0, 1424.0, 1425.0, 1426.0, 1427.0, 1428.0, 1429.0, 1430.0, 1431.0, 1432.0, 1433.0, 1434.0, 1435.0, 1436.0, 1437.0, 1438.0, 1439.0, 1440.0, 1441.0, 1442.0, 1443.0, 1444.0, 1445.0, 1446.0, 1447.0, 1448.0, 1449.0, 1450.0, 1451.0, 1452.0
% Backup Solver: mphaseSATm
% Input Instances for Training: 1453 (-unsolvable)
% Used Instances for Training: 1453 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 937.94 (161 instances)
% >>> 2-th iteration<<<
('sr: ', array([ 4696.74819833,  1463.93793976,   624.53432948,   572.56007164,
         433.66370293,   381.58077535,   370.3982699 ,   359.44498343,
         332.73017745,   318.70693086,   281.55138106,   254.92123062]), ' - svd_k: ', 12)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1436.0 	95.4244507382
2 	1335.0 	939.682793106
3 	1272.0 	1470.9715047
4 	1238.0 	1767.71346134
5 	1191.0 	2161.97193616
6 	1137.0 	2609.49663668
7 	1088.0 	3014.579262
8 	1047.0 	3354.39104469
9 	1001.0 	3738.92965193
10 	945.0 	4205.64681766
11 	834.0 	5126.57573129
12 	775.0 	5614.13338448
13 	741.0 	5898.40413656
14 	714.0 	6118.65766022
15 	699.0 	6248.55281342
16 	680.0 	6407.31342623
17 	652.0 	6638.49931062
18 	623.0 	6879.00342622
19 	588.0 	7170.90338444
20 	545.0 	7520.96663653
21 	504.0 	7861.67993038
22 	468.0 	8163.11573121
23 	384.0 	8853.91871866
24 	208.0 	10292.9996448
25 	151.0 	10760.3797354
26 	133.0 	10908.5877159
27 	113.0 	11076.1241365
28 	90.0 	11263.0332312
29 	67.0 	11448.9104735
30 	53.0 	11563.8045265
31 	35.0 	11712.1709889
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  4,  5,  7,  8,  9, 11, 13, 16, 18, 21, 23, 25, 28,
       29, 31, 33, 34, 36, 37, 38, 39]))
ft_imp_total =  0.9
ft cv scores:  [ 0.54985191  0.56850498  0.50509019  0.54765668  0.5159061   0.57270984
  0.50156639  0.4944465   0.56592276  0.53563774]
top_ft_inx_arr:  [ 0  1  2  3  4  5  7  8  9 11 13 16 18 21 23 25 28 29 31 33 34 36 37 38 39]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 16, 18, 21, 23, 25, 28, 29, 31, 33, 34, 36, 37, 38, 39
Oracle performance before algorithm subset selection: num_inst_solved =  1436  - par10 =  95.4244507382
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.22993957  0.22993957  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 65.  65.  75.  75.] ,  [ 0.          0.24684854  0.24684854  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 115.  115.  125.  125.] ,  [ 0.          0.28522852  0.28522852  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 105.  105.  120.  120.] ,  [ 0.          0.43262897  0.43262897  0.28522852] ,  g
plt.plot(xs, ys,  color) =  [  95.    95.   112.5  112.5] ,  [ 0.          0.51743923  0.51743923  0.43262897] ,  g
plt.plot(xs, ys,  color) =  [ 145.  145.  155.  155.] ,  [ 0.          0.20792488  0.20792488  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.15551531  0.15551531  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 185.  185.  195.  195.] ,  [ 0.         0.2736299  0.2736299  0.       ] ,  g
plt.plot(xs, ys,  color) =  [ 170.  170.  190.  190.] ,  [ 0.15551531  0.27882902  0.27882902  0.2736299 ] ,  g
plt.plot(xs, ys,  color) =  [ 150.  150.  180.  180.] ,  [ 0.20792488  0.32624703  0.32624703  0.27882902] ,  g
plt.plot(xs, ys,  color) =  [ 135.  135.  165.  165.] ,  [ 0.          0.49103341  0.49103341  0.32624703] ,  g
plt.plot(xs, ys,  color) =  [ 205.  205.  215.  215.] ,  [ 0.          0.26171801  0.26171801  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 225.  225.  235.  235.] ,  [ 0.          0.32244598  0.32244598  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 210.  210.  230.  230.] ,  [ 0.26171801  0.43771502  0.43771502  0.32244598] ,  g
plt.plot(xs, ys,  color) =  [ 245.  245.  255.  255.] ,  [ 0.          0.39169186  0.39169186  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 275.  275.  285.  285.] ,  [ 0.          0.20519917  0.20519917  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 265.  265.  280.  280.] ,  [ 0.          0.32972771  0.32972771  0.20519917] ,  g
plt.plot(xs, ys,  color) =  [ 295.  295.  305.  305.] ,  [ 0.          0.39456212  0.39456212  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 272.5  272.5  300.   300. ] ,  [ 0.32972771  0.45586303  0.45586303  0.39456212] ,  g
plt.plot(xs, ys,  color) =  [ 250.    250.    286.25  286.25] ,  [ 0.39169186  0.46455205  0.46455205  0.45586303] ,  g
plt.plot(xs, ys,  color) =  [ 220.     220.     268.125  268.125] ,  [ 0.43771502  0.49910003  0.49910003  0.46455205] ,  g
plt.plot(xs, ys,  color) =  [ 150.      150.      244.0625  244.0625] ,  [ 0.49103341  0.5318953   0.5318953   0.49910003] ,  g
plt.plot(xs, ys,  color) =  [ 103.75     103.75     197.03125  197.03125] ,  [ 0.51743923  0.54994667  0.54994667  0.5318953 ] ,  g
plt.plot(xs, ys,  color) =  [  85.         85.        150.390625  150.390625] ,  [ 0.          0.6502774   0.6502774   0.54994667] ,  g
plt.plot(xs, ys,  color) =  [  70.          70.         117.6953125  117.6953125] ,  [ 0.24684854  0.65955427  0.65955427  0.6502774 ] ,  g
plt.plot(xs, ys,  color) =  [ 55.          55.          93.84765625  93.84765625] ,  [ 0.          0.67290495  0.67290495  0.65955427] ,  g
plt.plot(xs, ys,  color) =  [ 45.          45.          74.42382812  74.42382812] ,  [ 0.          0.69902612  0.69902612  0.67290495] ,  g
plt.plot(xs, ys,  color) =  [ 30.          30.          59.71191406  59.71191406] ,  [ 0.22993957  0.70981996  0.70981996  0.69902612] ,  g
plt.plot(xs, ys,  color) =  [ 15.          15.          44.85595703  44.85595703] ,  [ 0.          0.82917146  0.82917146  0.70981996] ,  b
plt.plot(xs, ys,  color) =  [  5.           5.          29.92797852  29.92797852] ,  [ 0.          1.01489497  1.01489497  0.82917146] ,  b
leaves:  [23  2 22 25 30 19  3 21  6 20  9 17 29  7 18 27 26 28 13 14 12 15  0  4 10
 16 11  8 24  1  5]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  -- alg_inx =  22
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  25
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  18
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  27
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  26
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  28
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  24
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  21
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  17
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  29
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  13
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  14
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  12
12  is removed from pair - new par10:  1472.20829439
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25
 26 27 28 29 30]  -- alg_inx =  15
15  is removed from pair - new par10:  1472.64164398
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  0
0  is removed from pair - new par10:  1473.7437749
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  4
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  10
10  is removed from pair - new par10:  1473.91450609
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  16
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  11
11  is removed from pair - new par10:  1474.79105902
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  1
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  5
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  20
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  7
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  6
6  is removed from pair - new par10:  1478.05954091
alg_portfolio =  [ 1  2  3  4  5  7  8  9 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30]  -- alg_inx =  19
alg_portfolio =  [ 1  2  3  4  5  7  8  9 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30]  -- alg_inx =  30
alg_portfolio =  [ 1  2  3  4  5  7  8  9 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30]  -- alg_inx =  2
alg_portfolio =  [ 1  2  3  4  5  7  8  9 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30]  -- alg_inx =  23
Oracle performance after algorithm subset selection: num_inst_solved =  1436  - par10 =  97.1196039136
(25 out of 31) Algorithms/solvers to keep are determined: 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.44900000e+03,   1.45000000e+03,   1.45100000e+03]))
(1452 out of 1452) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0, 1232.0, 1233.0, 1234.0, 1235.0, 1236.0, 1237.0, 1238.0, 1239.0, 1240.0, 1241.0, 1242.0, 1243.0, 1244.0, 1245.0, 1246.0, 1247.0, 1248.0, 1249.0, 1250.0, 1251.0, 1252.0, 1253.0, 1254.0, 1255.0, 1256.0, 1257.0, 1258.0, 1259.0, 1260.0, 1261.0, 1262.0, 1263.0, 1264.0, 1265.0, 1266.0, 1267.0, 1268.0, 1269.0, 1270.0, 1271.0, 1272.0, 1273.0, 1274.0, 1275.0, 1276.0, 1277.0, 1278.0, 1279.0, 1280.0, 1281.0, 1282.0, 1283.0, 1284.0, 1285.0, 1286.0, 1287.0, 1288.0, 1289.0, 1290.0, 1291.0, 1292.0, 1293.0, 1294.0, 1295.0, 1296.0, 1297.0, 1298.0, 1299.0, 1300.0, 1301.0, 1302.0, 1303.0, 1304.0, 1305.0, 1306.0, 1307.0, 1308.0, 1309.0, 1310.0, 1311.0, 1312.0, 1313.0, 1314.0, 1315.0, 1316.0, 1317.0, 1318.0, 1319.0, 1320.0, 1321.0, 1322.0, 1323.0, 1324.0, 1325.0, 1326.0, 1327.0, 1328.0, 1329.0, 1330.0, 1331.0, 1332.0, 1333.0, 1334.0, 1335.0, 1336.0, 1337.0, 1338.0, 1339.0, 1340.0, 1341.0, 1342.0, 1343.0, 1344.0, 1345.0, 1346.0, 1347.0, 1348.0, 1349.0, 1350.0, 1351.0, 1352.0, 1353.0, 1354.0, 1355.0, 1356.0, 1357.0, 1358.0, 1359.0, 1360.0, 1361.0, 1362.0, 1363.0, 1364.0, 1365.0, 1366.0, 1367.0, 1368.0, 1369.0, 1370.0, 1371.0, 1372.0, 1373.0, 1374.0, 1375.0, 1376.0, 1377.0, 1378.0, 1379.0, 1380.0, 1381.0, 1382.0, 1383.0, 1384.0, 1385.0, 1386.0, 1387.0, 1388.0, 1389.0, 1390.0, 1391.0, 1392.0, 1393.0, 1394.0, 1395.0, 1396.0, 1397.0, 1398.0, 1399.0, 1400.0, 1401.0, 1402.0, 1403.0, 1404.0, 1405.0, 1406.0, 1407.0, 1408.0, 1409.0, 1410.0, 1411.0, 1412.0, 1413.0, 1414.0, 1415.0, 1416.0, 1417.0, 1418.0, 1419.0, 1420.0, 1421.0, 1422.0, 1423.0, 1424.0, 1425.0, 1426.0, 1427.0, 1428.0, 1429.0, 1430.0, 1431.0, 1432.0, 1433.0, 1434.0, 1435.0, 1436.0, 1437.0, 1438.0, 1439.0, 1440.0, 1441.0, 1442.0, 1443.0, 1444.0, 1445.0, 1446.0, 1447.0, 1448.0, 1449.0, 1450.0, 1451.0
% Backup Solver: mphaseSATm
% Input Instances for Training: 1452 (-unsolvable)
% Used Instances for Training: 1452 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 1006.55 (162 instances)
% >>> 3-th iteration<<<
('sr: ', array([ 4705.2120651 ,  1460.90790737,   628.27797368,   571.15126571,
         435.96850071,   387.20401486,   372.30652057,   361.71760507,
         331.76398038,   320.90098791,   281.25165407,   260.65802639]), ' - svd_k: ', 12)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1435.0 	94.0078823763
2 	1336.0 	924.138049373
3 	1272.0 	1464.52324788
4 	1237.0 	1769.78441844
5 	1193.0 	2141.49703159
6 	1134.0 	2624.90997231
7 	1090.0 	2992.97587472
8 	1042.0 	3385.5350524
9 	997.0 	3762.16503148
10 	942.0 	4222.40211859
11 	830.0 	5154.01977013
12 	768.0 	5665.4372405
13 	736.0 	5932.82940775
14 	709.0 	6153.15135199
15 	692.0 	6298.89871783
16 	670.0 	6480.06477357
17 	643.0 	6703.81741468
18 	613.0 	6951.36011155
19 	582.0 	7211.10887113
20 	544.0 	7523.39306625
21 	503.0 	7863.53325438
22 	471.0 	8133.33298957
23 	385.0 	8839.42103136
24 	203.0 	10328.4868223
25 	152.0 	10747.326216
26 	136.0 	10879.8423206
27 	118.0 	11032.4944599
28 	96.0 	11211.6773449
29 	72.0 	11407.3006829
30 	56.0 	11538.0748014
31 	36.0 	11703.4470383
('top_ft_inx_arr: ', array([ 0,  1,  3,  4,  5,  6,  7,  8, 11, 13, 16, 18, 19, 21, 23, 25, 28,
       29, 31, 33, 34, 36, 37, 38, 39]))
ft_imp_total =  0.9
ft cv scores:  [ 0.53517456  0.51159162  0.53157852  0.50539551  0.56530235  0.58720554
  0.50603819  0.47428801  0.55920038  0.50735052]
top_ft_inx_arr:  [ 0  1  3  4  5  6  7  8 11 13 16 18 19 21 23 25 28 29 31 33 34 36 37 38 39]
(25 out of 50) Features to keep are determined: 0, 1, 3, 4, 5, 6, 7, 8, 11, 13, 16, 18, 19, 21, 23, 25, 28, 29, 31, 33, 34, 36, 37, 38, 39
Oracle performance before algorithm subset selection: num_inst_solved =  1435  - par10 =  94.0078823763
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.22050151  0.22050151  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 45.  45.  55.  55.] ,  [ 0.          0.32364676  0.32364676  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.26184301  0.26184301  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 135.  135.  145.  145.] ,  [ 0.          0.16903789  0.16903789  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 125.  125.  140.  140.] ,  [ 0.          0.47973609  0.47973609  0.16903789] ,  m
plt.plot(xs, ys,  color) =  [ 155.  155.  165.  165.] ,  [ 0.          0.39714214  0.39714214  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 175.  175.  185.  185.] ,  [ 0.          0.15347742  0.15347742  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 195.  195.  205.  205.] ,  [ 0.          0.23727256  0.23727256  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 180.  180.  200.  200.] ,  [ 0.15347742  0.43352572  0.43352572  0.23727256] ,  m
plt.plot(xs, ys,  color) =  [ 160.  160.  190.  190.] ,  [ 0.39714214  0.52621636  0.52621636  0.43352572] ,  m
plt.plot(xs, ys,  color) =  [ 225.  225.  235.  235.] ,  [ 0.          0.23692967  0.23692967  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 245.  245.  255.  255.] ,  [ 0.         0.1366133  0.1366133  0.       ] ,  m
plt.plot(xs, ys,  color) =  [ 265.  265.  275.  275.] ,  [ 0.          0.19396609  0.19396609  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 250.  250.  270.  270.] ,  [ 0.1366133   0.28692272  0.28692272  0.19396609] ,  m
plt.plot(xs, ys,  color) =  [ 230.  230.  260.  260.] ,  [ 0.23692967  0.30984696  0.30984696  0.28692272] ,  m
plt.plot(xs, ys,  color) =  [ 215.  215.  245.  245.] ,  [ 0.          0.46388642  0.46388642  0.30984696] ,  m
plt.plot(xs, ys,  color) =  [ 295.  295.  305.  305.] ,  [ 0.         0.3541438  0.3541438  0.       ] ,  m
plt.plot(xs, ys,  color) =  [ 285.  285.  300.  300.] ,  [ 0.          0.48824149  0.48824149  0.3541438 ] ,  m
plt.plot(xs, ys,  color) =  [ 230.   230.   292.5  292.5] ,  [ 0.46388642  0.54472308  0.54472308  0.48824149] ,  m
plt.plot(xs, ys,  color) =  [ 175.    175.    261.25  261.25] ,  [ 0.52621636  0.54900622  0.54900622  0.54472308] ,  m
plt.plot(xs, ys,  color) =  [ 132.5    132.5    218.125  218.125] ,  [ 0.47973609  0.56533379  0.56533379  0.54900622] ,  m
plt.plot(xs, ys,  color) =  [ 115.      115.      175.3125  175.3125] ,  [ 0.          0.57102228  0.57102228  0.56533379] ,  m
plt.plot(xs, ys,  color) =  [ 105.       105.       145.15625  145.15625] ,  [ 0.          0.64722275  0.64722275  0.57102228] ,  m
plt.plot(xs, ys,  color) =  [  95.         95.        125.078125  125.078125] ,  [ 0.          0.67953974  0.67953974  0.64722275] ,  m
plt.plot(xs, ys,  color) =  [  80.          80.         110.0390625  110.0390625] ,  [ 0.26184301  0.74086741  0.74086741  0.67953974] ,  b
plt.plot(xs, ys,  color) =  [ 65.          65.          95.01953125  95.01953125] ,  [ 0.          0.74848779  0.74848779  0.74086741] ,  b
plt.plot(xs, ys,  color) =  [ 50.          50.          80.00976562  80.00976562] ,  [ 0.32364676  0.75213856  0.75213856  0.74848779] ,  b
plt.plot(xs, ys,  color) =  [ 30.          30.          65.00488281  65.00488281] ,  [ 0.22050151  0.7577021   0.7577021   0.75213856] ,  b
plt.plot(xs, ys,  color) =  [ 15.          15.          47.50244141  47.50244141] ,  [ 0.          0.77628489  0.77628489  0.7577021 ] ,  b
plt.plot(xs, ys,  color) =  [  5.          5.         31.2512207  31.2512207] ,  [ 0.          1.01503968  1.01503968  0.77628489] ,  b
leaves:  [23  2 22 25 17 29 30  3 21  9  6 20 19  8 24  1  5 12 15  0  4  7 13 14 26
 28 18 27 11 10 16]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  -- alg_inx =  22
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  25
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  24
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  12
12  is removed from pair - new par10:  1465.73208412
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25
 26 27 28 29 30]  -- alg_inx =  15
15  is removed from pair - new par10:  1466.60101095
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  26
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  28
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  18
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  27
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  17
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  29
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  21
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  0
0  is removed from pair - new par10:  1467.7135545
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  4
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  13
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  14
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  19
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  1
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  5
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  7
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  10
10  is removed from pair - new par10:  1467.87692732
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  16
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  11
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  20
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  6
6  is removed from pair - new par10:  1471.46616774
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  9
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  30
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  2
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  23
Oracle performance after algorithm subset selection: num_inst_solved =  1435  - par10 =  95.8009624808
(26 out of 31) Algorithms/solvers to keep are determined: 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.45000000e+03,   1.45100000e+03,   1.45200000e+03]))
(1453 out of 1453) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0, 1232.0, 1233.0, 1234.0, 1235.0, 1236.0, 1237.0, 1238.0, 1239.0, 1240.0, 1241.0, 1242.0, 1243.0, 1244.0, 1245.0, 1246.0, 1247.0, 1248.0, 1249.0, 1250.0, 1251.0, 1252.0, 1253.0, 1254.0, 1255.0, 1256.0, 1257.0, 1258.0, 1259.0, 1260.0, 1261.0, 1262.0, 1263.0, 1264.0, 1265.0, 1266.0, 1267.0, 1268.0, 1269.0, 1270.0, 1271.0, 1272.0, 1273.0, 1274.0, 1275.0, 1276.0, 1277.0, 1278.0, 1279.0, 1280.0, 1281.0, 1282.0, 1283.0, 1284.0, 1285.0, 1286.0, 1287.0, 1288.0, 1289.0, 1290.0, 1291.0, 1292.0, 1293.0, 1294.0, 1295.0, 1296.0, 1297.0, 1298.0, 1299.0, 1300.0, 1301.0, 1302.0, 1303.0, 1304.0, 1305.0, 1306.0, 1307.0, 1308.0, 1309.0, 1310.0, 1311.0, 1312.0, 1313.0, 1314.0, 1315.0, 1316.0, 1317.0, 1318.0, 1319.0, 1320.0, 1321.0, 1322.0, 1323.0, 1324.0, 1325.0, 1326.0, 1327.0, 1328.0, 1329.0, 1330.0, 1331.0, 1332.0, 1333.0, 1334.0, 1335.0, 1336.0, 1337.0, 1338.0, 1339.0, 1340.0, 1341.0, 1342.0, 1343.0, 1344.0, 1345.0, 1346.0, 1347.0, 1348.0, 1349.0, 1350.0, 1351.0, 1352.0, 1353.0, 1354.0, 1355.0, 1356.0, 1357.0, 1358.0, 1359.0, 1360.0, 1361.0, 1362.0, 1363.0, 1364.0, 1365.0, 1366.0, 1367.0, 1368.0, 1369.0, 1370.0, 1371.0, 1372.0, 1373.0, 1374.0, 1375.0, 1376.0, 1377.0, 1378.0, 1379.0, 1380.0, 1381.0, 1382.0, 1383.0, 1384.0, 1385.0, 1386.0, 1387.0, 1388.0, 1389.0, 1390.0, 1391.0, 1392.0, 1393.0, 1394.0, 1395.0, 1396.0, 1397.0, 1398.0, 1399.0, 1400.0, 1401.0, 1402.0, 1403.0, 1404.0, 1405.0, 1406.0, 1407.0, 1408.0, 1409.0, 1410.0, 1411.0, 1412.0, 1413.0, 1414.0, 1415.0, 1416.0, 1417.0, 1418.0, 1419.0, 1420.0, 1421.0, 1422.0, 1423.0, 1424.0, 1425.0, 1426.0, 1427.0, 1428.0, 1429.0, 1430.0, 1431.0, 1432.0, 1433.0, 1434.0, 1435.0, 1436.0, 1437.0, 1438.0, 1439.0, 1440.0, 1441.0, 1442.0, 1443.0, 1444.0, 1445.0, 1446.0, 1447.0, 1448.0, 1449.0, 1450.0, 1451.0, 1452.0
% Backup Solver: mphaseSATm
% Input Instances for Training: 1453 (-unsolvable)
% Used Instances for Training: 1453 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 1236.67 (161 instances)
% >>> 4-th iteration<<<
('sr: ', array([ 4701.92980919,  1458.89818212,   623.20808743,   569.76533614,
         438.35512908,   385.08885541,   368.90231436,   365.51938739,
         327.92871406,   317.92396686,   280.08797881,   264.07606753]), ' - svd_k: ', 12)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1435.0 	92.0167186481
2 	1342.0 	874.35928984
3 	1278.0 	1418.46910854
4 	1239.0 	1754.10669719
5 	1194.0 	2134.4948504
6 	1134.0 	2629.43075279
7 	1080.0 	3074.24998622
8 	1032.0 	3467.10483637
9 	991.0 	3812.84617434
10 	940.0 	4239.25536598
11 	833.0 	5129.00418129
12 	773.0 	5624.37280148
13 	739.0 	5907.41081541
14 	713.0 	6119.90783979
15 	697.0 	6257.97901052
16 	676.0 	6432.30858543
17 	646.0 	6678.05020215
18 	621.0 	6887.15991643
19 	592.0 	7132.69404187
20 	548.0 	7490.63883629
21 	508.0 	7822.95555403
22 	472.0 	8125.06019515
23 	393.0 	8776.30662718
24 	213.0 	10251.4512613
25 	156.0 	10717.8400697
26 	139.0 	10857.8261254
27 	117.0 	11042.4221115
28 	94.0 	11229.9665017
29 	67.0 	11448.977561
30 	53.0 	11563.4382439
31 	33.0 	11728.8544739
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  4,  6,  7,  8, 11, 13, 16, 18, 19, 21, 23, 24, 25,
       28, 29, 31, 34, 36, 37, 38, 39]))
ft_imp_total =  0.9
ft cv scores:  [ 0.52772283  0.58916424  0.5223021   0.54482064  0.57277714  0.51720339
  0.49448842  0.49560087  0.49483778  0.51347602]
top_ft_inx_arr:  [ 0  1  2  3  4  6  7  8 11 13 16 18 19 21 23 24 25 28 29 31 34 36 37 38 39]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 4, 6, 7, 8, 11, 13, 16, 18, 19, 21, 23, 24, 25, 28, 29, 31, 34, 36, 37, 38, 39
Oracle performance before algorithm subset selection: num_inst_solved =  1435  - par10 =  92.0167186481
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.28090871  0.28090871  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 45.  45.  55.  55.] ,  [ 0.         0.1752012  0.1752012  0.       ] ,  r
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.29368921  0.29368921  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 115.  115.  125.  125.] ,  [ 0.          0.37658087  0.37658087  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 135.  135.  145.  145.] ,  [ 0.          0.20470443  0.20470443  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 155.  155.  165.  165.] ,  [ 0.          0.25915723  0.25915723  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 140.  140.  160.  160.] ,  [ 0.20470443  0.41463455  0.41463455  0.25915723] ,  c
plt.plot(xs, ys,  color) =  [ 120.  120.  150.  150.] ,  [ 0.37658087  0.52757318  0.52757318  0.41463455] ,  c
plt.plot(xs, ys,  color) =  [ 185.  185.  195.  195.] ,  [ 0.          0.17288597  0.17288597  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 175.  175.  190.  190.] ,  [ 0.          0.44648859  0.44648859  0.17288597] ,  c
plt.plot(xs, ys,  color) =  [ 225.  225.  235.  235.] ,  [ 0.          0.33628967  0.33628967  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 215.  215.  230.  230.] ,  [ 0.          0.41270948  0.41270948  0.33628967] ,  c
plt.plot(xs, ys,  color) =  [ 255.  255.  265.  265.] ,  [ 0.         0.1932777  0.1932777  0.       ] ,  c
plt.plot(xs, ys,  color) =  [ 275.  275.  285.  285.] ,  [ 0.          0.15444749  0.15444749  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 295.  295.  305.  305.] ,  [ 0.          0.27543689  0.27543689  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 280.  280.  300.  300.] ,  [ 0.15444749  0.30506777  0.30506777  0.27543689] ,  c
plt.plot(xs, ys,  color) =  [ 260.  260.  290.  290.] ,  [ 0.1932777   0.31468205  0.31468205  0.30506777] ,  c
plt.plot(xs, ys,  color) =  [ 245.  245.  275.  275.] ,  [ 0.          0.51205384  0.51205384  0.31468205] ,  c
plt.plot(xs, ys,  color) =  [ 222.5  222.5  260.   260. ] ,  [ 0.41270948  0.51297919  0.51297919  0.51205384] ,  c
plt.plot(xs, ys,  color) =  [ 205.    205.    241.25  241.25] ,  [ 0.          0.52440148  0.52440148  0.51297919] ,  c
plt.plot(xs, ys,  color) =  [ 182.5    182.5    223.125  223.125] ,  [ 0.44648859  0.53582081  0.53582081  0.52440148] ,  c
plt.plot(xs, ys,  color) =  [ 135.      135.      202.8125  202.8125] ,  [ 0.52757318  0.56879378  0.56879378  0.53582081] ,  c
plt.plot(xs, ys,  color) =  [ 105.       105.       168.90625  168.90625] ,  [ 0.          0.59769348  0.59769348  0.56879378] ,  c
plt.plot(xs, ys,  color) =  [  95.         95.        136.953125  136.953125] ,  [ 0.          0.63715496  0.63715496  0.59769348] ,  c
plt.plot(xs, ys,  color) =  [  80.          80.         115.9765625  115.9765625] ,  [ 0.29368921  0.67047326  0.67047326  0.63715496] ,  c
plt.plot(xs, ys,  color) =  [ 65.          65.          97.98828125  97.98828125] ,  [ 0.          0.69508792  0.69508792  0.67047326] ,  c
plt.plot(xs, ys,  color) =  [ 50.          50.          81.49414062  81.49414062] ,  [ 0.1752012   0.73038767  0.73038767  0.69508792] ,  b
plt.plot(xs, ys,  color) =  [ 30.          30.          65.74707031  65.74707031] ,  [ 0.28090871  0.75783082  0.75783082  0.73038767] ,  b
plt.plot(xs, ys,  color) =  [ 15.          15.          47.87353516  47.87353516] ,  [ 0.          0.81914974  0.81914974  0.75783082] ,  b
plt.plot(xs, ys,  color) =  [  5.           5.          31.43676758  31.43676758] ,  [ 0.          1.01616817  1.01616817  0.81914974] ,  b
leaves:  [23  2  3 21 22 25 30 17 29  6  9  1  5 12 15  0  4 19  8 24 20 11 10 16  7
 18 27 26 28 13 14]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  21
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  22
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  25
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  12
12  is removed from pair - new par10:  1419.78053711
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25
 26 27 28 29 30]  -- alg_inx =  15
15  is removed from pair - new par10:  1420.63806325
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  0
0  is removed from pair - new par10:  1421.76423746
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  4
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  8
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  24
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  18
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  27
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  26
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  28
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  13
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  14
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  17
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  29
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  1
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  5
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  10
10  is removed from pair - new par10:  1421.93556151
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  16
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  11
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  19
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  7
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  20
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  9
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  6
6  is removed from pair - new par10:  1425.357673
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  30
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  2
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  23
Oracle performance after algorithm subset selection: num_inst_solved =  1435  - par10 =  93.6503074774
(26 out of 31) Algorithms/solvers to keep are determined: 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.45000000e+03,   1.45100000e+03,   1.45200000e+03]))
(1453 out of 1453) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0, 1232.0, 1233.0, 1234.0, 1235.0, 1236.0, 1237.0, 1238.0, 1239.0, 1240.0, 1241.0, 1242.0, 1243.0, 1244.0, 1245.0, 1246.0, 1247.0, 1248.0, 1249.0, 1250.0, 1251.0, 1252.0, 1253.0, 1254.0, 1255.0, 1256.0, 1257.0, 1258.0, 1259.0, 1260.0, 1261.0, 1262.0, 1263.0, 1264.0, 1265.0, 1266.0, 1267.0, 1268.0, 1269.0, 1270.0, 1271.0, 1272.0, 1273.0, 1274.0, 1275.0, 1276.0, 1277.0, 1278.0, 1279.0, 1280.0, 1281.0, 1282.0, 1283.0, 1284.0, 1285.0, 1286.0, 1287.0, 1288.0, 1289.0, 1290.0, 1291.0, 1292.0, 1293.0, 1294.0, 1295.0, 1296.0, 1297.0, 1298.0, 1299.0, 1300.0, 1301.0, 1302.0, 1303.0, 1304.0, 1305.0, 1306.0, 1307.0, 1308.0, 1309.0, 1310.0, 1311.0, 1312.0, 1313.0, 1314.0, 1315.0, 1316.0, 1317.0, 1318.0, 1319.0, 1320.0, 1321.0, 1322.0, 1323.0, 1324.0, 1325.0, 1326.0, 1327.0, 1328.0, 1329.0, 1330.0, 1331.0, 1332.0, 1333.0, 1334.0, 1335.0, 1336.0, 1337.0, 1338.0, 1339.0, 1340.0, 1341.0, 1342.0, 1343.0, 1344.0, 1345.0, 1346.0, 1347.0, 1348.0, 1349.0, 1350.0, 1351.0, 1352.0, 1353.0, 1354.0, 1355.0, 1356.0, 1357.0, 1358.0, 1359.0, 1360.0, 1361.0, 1362.0, 1363.0, 1364.0, 1365.0, 1366.0, 1367.0, 1368.0, 1369.0, 1370.0, 1371.0, 1372.0, 1373.0, 1374.0, 1375.0, 1376.0, 1377.0, 1378.0, 1379.0, 1380.0, 1381.0, 1382.0, 1383.0, 1384.0, 1385.0, 1386.0, 1387.0, 1388.0, 1389.0, 1390.0, 1391.0, 1392.0, 1393.0, 1394.0, 1395.0, 1396.0, 1397.0, 1398.0, 1399.0, 1400.0, 1401.0, 1402.0, 1403.0, 1404.0, 1405.0, 1406.0, 1407.0, 1408.0, 1409.0, 1410.0, 1411.0, 1412.0, 1413.0, 1414.0, 1415.0, 1416.0, 1417.0, 1418.0, 1419.0, 1420.0, 1421.0, 1422.0, 1423.0, 1424.0, 1425.0, 1426.0, 1427.0, 1428.0, 1429.0, 1430.0, 1431.0, 1432.0, 1433.0, 1434.0, 1435.0, 1436.0, 1437.0, 1438.0, 1439.0, 1440.0, 1441.0, 1442.0, 1443.0, 1444.0, 1445.0, 1446.0, 1447.0, 1448.0, 1449.0, 1450.0, 1451.0, 1452.0
% Backup Solver: mphaseSATm
% Input Instances for Training: 1453 (-unsolvable)
% Used Instances for Training: 1453 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 959.53 (161 instances)
% >>> 5-th iteration<<<
('sr: ', array([ 4716.7885218 ,  1457.44159629,   623.98982708,   568.75807864,
         440.74421938,   382.4312407 ,   369.67597827,   364.63685812,
         330.04667598,   320.63835185,   281.50904015,   262.89808403]), ' - svd_k: ', 12)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1432.0 	93.2696237709
2 	1332.0 	935.098429378
3 	1265.0 	1502.16493765
4 	1227.0 	1830.46106874
5 	1183.0 	2202.36472089
6 	1125.0 	2682.1658242
7 	1076.0 	3089.63189261
8 	1032.0 	3451.79305179
9 	988.0 	3821.5180448
10 	933.0 	4279.95067748
11 	823.0 	5195.19532131
12 	766.0 	5669.85620119
13 	733.0 	5944.72603358
14 	705.0 	6173.65358943
15 	687.0 	6326.34657826
16 	669.0 	6477.57196233
17 	642.0 	6701.72144557
18 	615.0 	6927.93235339
19 	581.0 	7213.10944837
20 	537.0 	7571.86962295
21 	497.0 	7906.42048885
22 	459.0 	8222.96719975
23 	379.0 	8882.32423184
24 	202.0 	10336.6789804
25 	148.0 	10781.2521997
26 	134.0 	10897.3413547
27 	114.0 	11066.5207332
28 	91.0 	11253.0638338
29 	66.0 	11456.3181075
30 	52.0 	11570.6488059
31 	36.0 	11703.0888059
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  4,  5,  6,  7,  8, 11, 13, 16, 18, 19, 23, 25, 26,
       29, 31, 33, 34, 36, 37, 38, 39]))
ft_imp_total =  0.9
ft cv scores:  [ 0.55695669  0.51388064  0.55937674  0.55487851  0.51819524  0.52215995
  0.45856866  0.47956131  0.53300749  0.5325037 ]
top_ft_inx_arr:  [ 0  1  2  3  4  5  6  7  8 11 13 16 18 19 23 25 26 29 31 33 34 36 37 38 39]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 16, 18, 19, 23, 25, 26, 29, 31, 33, 34, 36, 37, 38, 39
Oracle performance before algorithm subset selection: num_inst_solved =  1432  - par10 =  93.2696237709
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.27748581  0.27748581  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 45.  45.  55.  55.] ,  [ 0.          0.28567931  0.28567931  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 65.  65.  75.  75.] ,  [ 0.          0.19711993  0.19711993  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 125.  125.  135.  135.] ,  [ 0.          0.43132322  0.43132322  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 145.  145.  155.  155.] ,  [ 0.          0.18563323  0.18563323  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.24179046  0.24179046  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 150.  150.  170.  170.] ,  [ 0.18563323  0.43499888  0.43499888  0.24179046] ,  m
plt.plot(xs, ys,  color) =  [ 130.  130.  160.  160.] ,  [ 0.43132322  0.51214933  0.51214933  0.43499888] ,  m
plt.plot(xs, ys,  color) =  [ 195.  195.  205.  205.] ,  [ 0.          0.28743468  0.28743468  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 215.  215.  225.  225.] ,  [ 0.          0.15337942  0.15337942  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 235.  235.  245.  245.] ,  [ 0.          0.18058628  0.18058628  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 220.  220.  240.  240.] ,  [ 0.15337942  0.28831017  0.28831017  0.18058628] ,  m
plt.plot(xs, ys,  color) =  [ 200.  200.  230.  230.] ,  [ 0.28743468  0.31043216  0.31043216  0.28831017] ,  m
plt.plot(xs, ys,  color) =  [ 185.  185.  215.  215.] ,  [ 0.          0.49536708  0.49536708  0.31043216] ,  m
plt.plot(xs, ys,  color) =  [ 265.  265.  275.  275.] ,  [ 0.          0.19798239  0.19798239  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 255.  255.  270.  270.] ,  [ 0.          0.38164751  0.38164751  0.19798239] ,  m
plt.plot(xs, ys,  color) =  [ 295.  295.  305.  305.] ,  [ 0.          0.33917395  0.33917395  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 285.  285.  300.  300.] ,  [ 0.          0.45776777  0.45776777  0.33917395] ,  m
plt.plot(xs, ys,  color) =  [ 262.5  262.5  292.5  292.5] ,  [ 0.38164751  0.51541671  0.51541671  0.45776777] ,  m
plt.plot(xs, ys,  color) =  [ 200.   200.   277.5  277.5] ,  [ 0.49536708  0.53022194  0.53022194  0.51541671] ,  m
plt.plot(xs, ys,  color) =  [ 145.    145.    238.75  238.75] ,  [ 0.51214933  0.53697787  0.53697787  0.53022194] ,  m
plt.plot(xs, ys,  color) =  [ 115.     115.     191.875  191.875] ,  [ 0.          0.55981587  0.55981587  0.53697787] ,  m
plt.plot(xs, ys,  color) =  [ 105.      105.      153.4375  153.4375] ,  [ 0.          0.59243964  0.59243964  0.55981587] ,  m
plt.plot(xs, ys,  color) =  [  95.        95.       129.21875  129.21875] ,  [ 0.          0.66563248  0.66563248  0.59243964] ,  m
plt.plot(xs, ys,  color) =  [  85.         85.        112.109375  112.109375] ,  [ 0.          0.73611946  0.73611946  0.66563248] ,  b
plt.plot(xs, ys,  color) =  [ 70.         70.         98.5546875  98.5546875] ,  [ 0.19711993  0.73862116  0.73862116  0.73611946] ,  b
plt.plot(xs, ys,  color) =  [ 50.          50.          84.27734375  84.27734375] ,  [ 0.28567931  0.74375695  0.74375695  0.73862116] ,  b
plt.plot(xs, ys,  color) =  [ 30.          30.          67.13867188  67.13867188] ,  [ 0.27748581  0.75458526  0.75458526  0.74375695] ,  b
plt.plot(xs, ys,  color) =  [ 15.          15.          48.56933594  48.56933594] ,  [ 0.          0.82719347  0.82719347  0.75458526] ,  b
plt.plot(xs, ys,  color) =  [  5.           5.          31.78466797  31.78466797] ,  [ 0.          1.01210189  1.01210189  0.82719347] ,  b
leaves:  [23  2  3 21 17 29 22 25 30  9 20  6  1  5 12 15  0  4  7 13 14 26 28 18 27
 19  8 24 11 10 16]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  21
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  22
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  25
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  12
12  is removed from pair - new par10:  1503.36628542
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25
 26 27 28 29 30]  -- alg_inx =  15
15  is removed from pair - new par10:  1504.19013318
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  0
0  is removed from pair - new par10:  1505.28729101
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  4
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  26
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  28
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  18
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  27
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  8
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  24
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  17
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  29
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  1
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  5
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  13
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  14
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  19
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  10
10  is removed from pair - new par10:  1505.43097117
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  16
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  7
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  11
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  6
6  is removed from pair - new par10:  1508.6769139
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  20
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  9
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  30
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  2
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  23
Oracle performance after algorithm subset selection: num_inst_solved =  1432  - par10 =  94.7507340712
(26 out of 31) Algorithms/solvers to keep are determined: 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.44900000e+03,   1.45000000e+03,   1.45100000e+03]))
(1452 out of 1452) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0, 1232.0, 1233.0, 1234.0, 1235.0, 1236.0, 1237.0, 1238.0, 1239.0, 1240.0, 1241.0, 1242.0, 1243.0, 1244.0, 1245.0, 1246.0, 1247.0, 1248.0, 1249.0, 1250.0, 1251.0, 1252.0, 1253.0, 1254.0, 1255.0, 1256.0, 1257.0, 1258.0, 1259.0, 1260.0, 1261.0, 1262.0, 1263.0, 1264.0, 1265.0, 1266.0, 1267.0, 1268.0, 1269.0, 1270.0, 1271.0, 1272.0, 1273.0, 1274.0, 1275.0, 1276.0, 1277.0, 1278.0, 1279.0, 1280.0, 1281.0, 1282.0, 1283.0, 1284.0, 1285.0, 1286.0, 1287.0, 1288.0, 1289.0, 1290.0, 1291.0, 1292.0, 1293.0, 1294.0, 1295.0, 1296.0, 1297.0, 1298.0, 1299.0, 1300.0, 1301.0, 1302.0, 1303.0, 1304.0, 1305.0, 1306.0, 1307.0, 1308.0, 1309.0, 1310.0, 1311.0, 1312.0, 1313.0, 1314.0, 1315.0, 1316.0, 1317.0, 1318.0, 1319.0, 1320.0, 1321.0, 1322.0, 1323.0, 1324.0, 1325.0, 1326.0, 1327.0, 1328.0, 1329.0, 1330.0, 1331.0, 1332.0, 1333.0, 1334.0, 1335.0, 1336.0, 1337.0, 1338.0, 1339.0, 1340.0, 1341.0, 1342.0, 1343.0, 1344.0, 1345.0, 1346.0, 1347.0, 1348.0, 1349.0, 1350.0, 1351.0, 1352.0, 1353.0, 1354.0, 1355.0, 1356.0, 1357.0, 1358.0, 1359.0, 1360.0, 1361.0, 1362.0, 1363.0, 1364.0, 1365.0, 1366.0, 1367.0, 1368.0, 1369.0, 1370.0, 1371.0, 1372.0, 1373.0, 1374.0, 1375.0, 1376.0, 1377.0, 1378.0, 1379.0, 1380.0, 1381.0, 1382.0, 1383.0, 1384.0, 1385.0, 1386.0, 1387.0, 1388.0, 1389.0, 1390.0, 1391.0, 1392.0, 1393.0, 1394.0, 1395.0, 1396.0, 1397.0, 1398.0, 1399.0, 1400.0, 1401.0, 1402.0, 1403.0, 1404.0, 1405.0, 1406.0, 1407.0, 1408.0, 1409.0, 1410.0, 1411.0, 1412.0, 1413.0, 1414.0, 1415.0, 1416.0, 1417.0, 1418.0, 1419.0, 1420.0, 1421.0, 1422.0, 1423.0, 1424.0, 1425.0, 1426.0, 1427.0, 1428.0, 1429.0, 1430.0, 1431.0, 1432.0, 1433.0, 1434.0, 1435.0, 1436.0, 1437.0, 1438.0, 1439.0, 1440.0, 1441.0, 1442.0, 1443.0, 1444.0, 1445.0, 1446.0, 1447.0, 1448.0, 1449.0, 1450.0, 1451.0
% Backup Solver: mphaseSATm
% Input Instances for Training: 1452 (-unsolvable)
% Used Instances for Training: 1452 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 855.89 (162 instances)
% >>> 6-th iteration<<<
('sr: ', array([ 4688.41485609,  1461.0568962 ,   626.11760235,   572.2848228 ,
         440.28957349,   383.68955904,   366.3709276 ,   358.11832981,
         329.03698874,   319.5681886 ,   283.05605428,   264.70376717]), ' - svd_k: ', 12)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1437.0 	95.1159438274
2 	1336.0 	939.108407029
3 	1273.0 	1470.43721695
4 	1239.0 	1764.68558139
5 	1196.0 	2126.47752285
6 	1146.0 	2541.96109275
7 	1095.0 	2964.51828132
8 	1049.0 	3342.14505929
9 	1006.0 	3702.87468351
10 	949.0 	4175.80823256
11 	843.0 	5055.45770366
12 	786.0 	5526.25491311
13 	753.0 	5801.47807942
14 	724.0 	6037.21830905
15 	707.0 	6183.1500627
16 	687.0 	6349.57300633
17 	656.0 	6603.13642316
18 	628.0 	6835.49544891
19 	596.0 	7103.32970082
20 	552.0 	7461.26102998
21 	515.0 	7771.03774533
22 	478.0 	8080.72766878
23 	390.0 	8803.84770355
24 	205.0 	10317.2330063
25 	150.0 	10766.7061865
26 	134.0 	10898.5762561
27 	117.0 	11041.9328184
28 	97.0 	11205.308991
29 	72.0 	11408.4734934
30 	56.0 	11539.1046834
31 	36.0 	11703.880508
('top_ft_inx_arr: ', array([ 0,  1,  3,  4,  6,  7,  8, 11, 13, 16, 18, 19, 21, 23, 24, 25, 28,
       29, 31, 33, 34, 36, 37, 38, 39]))
ft_imp_total =  0.9
ft cv scores:  [ 0.48093201  0.51349293  0.49332009  0.53674637  0.55827233  0.54077865
  0.48447893  0.47811831  0.5398735   0.56777289]
top_ft_inx_arr:  [ 0  1  3  4  6  7  8 11 13 16 18 19 21 23 24 25 28 29 31 33 34 36 37 38 39]
(25 out of 50) Features to keep are determined: 0, 1, 3, 4, 6, 7, 8, 11, 13, 16, 18, 19, 21, 23, 24, 25, 28, 29, 31, 33, 34, 36, 37, 38, 39
Oracle performance before algorithm subset selection: num_inst_solved =  1437  - par10 =  95.1159438274
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.20735701  0.20735701  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 55.  55.  65.  65.] ,  [ 0.          0.24500334  0.24500334  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.31371165  0.31371165  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 125.  125.  135.  135.] ,  [ 0.          0.18300552  0.18300552  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 115.  115.  130.  130.] ,  [ 0.          0.49706144  0.49706144  0.18300552] ,  m
plt.plot(xs, ys,  color) =  [ 155.  155.  165.  165.] ,  [ 0.          0.40057361  0.40057361  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 175.  175.  185.  185.] ,  [ 0.          0.15985763  0.15985763  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 195.  195.  205.  205.] ,  [ 0.          0.22976455  0.22976455  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 180.  180.  200.  200.] ,  [ 0.15985763  0.42633534  0.42633534  0.22976455] ,  m
plt.plot(xs, ys,  color) =  [ 160.  160.  190.  190.] ,  [ 0.40057361  0.52138771  0.52138771  0.42633534] ,  m
plt.plot(xs, ys,  color) =  [ 225.  225.  235.  235.] ,  [ 0.          0.36635937  0.36635937  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 215.  215.  230.  230.] ,  [ 0.          0.4855462   0.4855462   0.36635937] ,  m
plt.plot(xs, ys,  color) =  [ 255.  255.  265.  265.] ,  [ 0.          0.20186977  0.20186977  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 295.  295.  305.  305.] ,  [ 0.          0.13992407  0.13992407  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 285.  285.  300.  300.] ,  [ 0.          0.27333706  0.27333706  0.13992407] ,  m
plt.plot(xs, ys,  color) =  [ 275.   275.   292.5  292.5] ,  [ 0.          0.28540402  0.28540402  0.27333706] ,  m
plt.plot(xs, ys,  color) =  [ 260.    260.    283.75  283.75] ,  [ 0.20186977  0.30878346  0.30878346  0.28540402] ,  m
plt.plot(xs, ys,  color) =  [ 245.     245.     271.875  271.875] ,  [ 0.          0.51648885  0.51648885  0.30878346] ,  m
plt.plot(xs, ys,  color) =  [ 222.5     222.5     258.4375  258.4375] ,  [ 0.4855462   0.54083759  0.54083759  0.51648885] ,  m
plt.plot(xs, ys,  color) =  [ 175.       175.       240.46875  240.46875] ,  [ 0.52138771  0.56897794  0.56897794  0.54083759] ,  m
plt.plot(xs, ys,  color) =  [ 145.        145.        207.734375  207.734375] ,  [ 0.          0.57385865  0.57385865  0.56897794] ,  m
plt.plot(xs, ys,  color) =  [ 122.5        122.5        176.3671875  176.3671875] ,  [ 0.49706144  0.59641985  0.59641985  0.57385865] ,  m
plt.plot(xs, ys,  color) =  [ 105.          105.          149.43359375  149.43359375] ,  [ 0.          0.62123777  0.62123777  0.59641985] ,  m
plt.plot(xs, ys,  color) =  [  95.           95.          127.21679688  127.21679688] ,  [ 0.          0.68448362  0.68448362  0.62123777] ,  m
plt.plot(xs, ys,  color) =  [  80.           80.          111.10839844  111.10839844] ,  [ 0.31371165  0.74375497  0.74375497  0.68448362] ,  b
plt.plot(xs, ys,  color) =  [ 60.          60.          95.55419922  95.55419922] ,  [ 0.24500334  0.74477162  0.74477162  0.74375497] ,  b
plt.plot(xs, ys,  color) =  [ 45.          45.          77.77709961  77.77709961] ,  [ 0.          0.75011233  0.75011233  0.74477162] ,  b
plt.plot(xs, ys,  color) =  [ 30.         30.         61.3885498  61.3885498] ,  [ 0.20735701  0.75365135  0.75365135  0.75011233] ,  b
plt.plot(xs, ys,  color) =  [ 15.         15.         45.6942749  45.6942749] ,  [ 0.          0.76905156  0.76905156  0.75365135] ,  b
plt.plot(xs, ys,  color) =  [  5.           5.          30.34713745  30.34713745] ,  [ 0.          1.00989584  1.00989584  0.76905156] ,  b
leaves:  [23  2 22 25 30  3 21 17 29  6  9 19  8 24 20  1  5 12 15  0  4 11 10 16  7
 18 27 13 14 26 28]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  -- alg_inx =  22
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  25
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  24
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  12
12  is removed from pair - new par10:  1471.80796851
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25
 26 27 28 29 30]  -- alg_inx =  15
15  is removed from pair - new par10:  1472.56404367
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  18
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  27
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  26
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  28
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  21
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  0
0  is removed from pair - new par10:  1473.48704993
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  4
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  17
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  29
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  13
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  14
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  19
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  1
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  5
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  10
10  is removed from pair - new par10:  1473.65876183
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  11
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  16
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  7
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  20
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  9
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  6
6  is removed from pair - new par10:  1477.10329905
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  30
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  2
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  23
Oracle performance after algorithm subset selection: num_inst_solved =  1437  - par10 =  96.7825408699
(26 out of 31) Algorithms/solvers to keep are determined: 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.45000000e+03,   1.45100000e+03,   1.45200000e+03]))
(1453 out of 1453) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0, 1232.0, 1233.0, 1234.0, 1235.0, 1236.0, 1237.0, 1238.0, 1239.0, 1240.0, 1241.0, 1242.0, 1243.0, 1244.0, 1245.0, 1246.0, 1247.0, 1248.0, 1249.0, 1250.0, 1251.0, 1252.0, 1253.0, 1254.0, 1255.0, 1256.0, 1257.0, 1258.0, 1259.0, 1260.0, 1261.0, 1262.0, 1263.0, 1264.0, 1265.0, 1266.0, 1267.0, 1268.0, 1269.0, 1270.0, 1271.0, 1272.0, 1273.0, 1274.0, 1275.0, 1276.0, 1277.0, 1278.0, 1279.0, 1280.0, 1281.0, 1282.0, 1283.0, 1284.0, 1285.0, 1286.0, 1287.0, 1288.0, 1289.0, 1290.0, 1291.0, 1292.0, 1293.0, 1294.0, 1295.0, 1296.0, 1297.0, 1298.0, 1299.0, 1300.0, 1301.0, 1302.0, 1303.0, 1304.0, 1305.0, 1306.0, 1307.0, 1308.0, 1309.0, 1310.0, 1311.0, 1312.0, 1313.0, 1314.0, 1315.0, 1316.0, 1317.0, 1318.0, 1319.0, 1320.0, 1321.0, 1322.0, 1323.0, 1324.0, 1325.0, 1326.0, 1327.0, 1328.0, 1329.0, 1330.0, 1331.0, 1332.0, 1333.0, 1334.0, 1335.0, 1336.0, 1337.0, 1338.0, 1339.0, 1340.0, 1341.0, 1342.0, 1343.0, 1344.0, 1345.0, 1346.0, 1347.0, 1348.0, 1349.0, 1350.0, 1351.0, 1352.0, 1353.0, 1354.0, 1355.0, 1356.0, 1357.0, 1358.0, 1359.0, 1360.0, 1361.0, 1362.0, 1363.0, 1364.0, 1365.0, 1366.0, 1367.0, 1368.0, 1369.0, 1370.0, 1371.0, 1372.0, 1373.0, 1374.0, 1375.0, 1376.0, 1377.0, 1378.0, 1379.0, 1380.0, 1381.0, 1382.0, 1383.0, 1384.0, 1385.0, 1386.0, 1387.0, 1388.0, 1389.0, 1390.0, 1391.0, 1392.0, 1393.0, 1394.0, 1395.0, 1396.0, 1397.0, 1398.0, 1399.0, 1400.0, 1401.0, 1402.0, 1403.0, 1404.0, 1405.0, 1406.0, 1407.0, 1408.0, 1409.0, 1410.0, 1411.0, 1412.0, 1413.0, 1414.0, 1415.0, 1416.0, 1417.0, 1418.0, 1419.0, 1420.0, 1421.0, 1422.0, 1423.0, 1424.0, 1425.0, 1426.0, 1427.0, 1428.0, 1429.0, 1430.0, 1431.0, 1432.0, 1433.0, 1434.0, 1435.0, 1436.0, 1437.0, 1438.0, 1439.0, 1440.0, 1441.0, 1442.0, 1443.0, 1444.0, 1445.0, 1446.0, 1447.0, 1448.0, 1449.0, 1450.0, 1451.0, 1452.0
% Backup Solver: mphaseSATm
% Input Instances for Training: 1453 (-unsolvable)
% Used Instances for Training: 1453 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 1162.01 (161 instances)
% >>> 7-th iteration<<<
('sr: ', array([ 4702.84032262,  1462.33377889,   625.77347934,   568.23487101,
         436.33320906,   379.36384158,   370.66773136,   365.53265285,
         332.66156181,   316.26756642,   279.63875972,   259.35609602]), ' - svd_k: ', 12)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1434.0 	93.3517023989
2 	1337.0 	908.936492929
3 	1272.0 	1459.47359881
4 	1232.0 	1803.09180645
5 	1189.0 	2165.64269199
6 	1136.0 	2606.07813129
7 	1083.0 	3043.52642275
8 	1036.0 	3427.74407963
9 	994.0 	3781.2066389
10 	938.0 	4247.79552313
11 	828.0 	5161.87366816
12 	772.0 	5627.25440734
13 	737.0 	5918.92784527
14 	710.0 	6139.5923362
15 	694.0 	6277.03345195
16 	675.0 	6435.51728737
17 	650.0 	6645.08661791
18 	621.0 	6885.61172948
19 	590.0 	7146.7524617
20 	544.0 	7520.58705724
21 	503.0 	7862.07123434
22 	469.0 	8148.58145749
23 	387.0 	8823.18239888
24 	208.0 	10289.4490516
25 	154.0 	10732.8058717
26 	136.0 	10880.7159972
27 	115.0 	11057.4134728
28 	92.0 	11243.9969874
29 	67.0 	11447.5987308
30 	54.0 	11554.9306555
31 	35.0 	11711.7902859
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  4,  6,  7,  8,  9, 11, 13, 16, 18, 19, 21, 23, 25,
       28, 29, 31, 34, 36, 37, 38, 39]))
ft_imp_total =  0.9
ft cv scores:  [ 0.52524969  0.50372022  0.51285182  0.58339635  0.50597443  0.56785793
  0.50699185  0.52350751  0.54761959  0.49994096]
top_ft_inx_arr:  [ 0  1  2  3  4  6  7  8  9 11 13 16 18 19 21 23 25 28 29 31 34 36 37 38 39]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 16, 18, 19, 21, 23, 25, 28, 29, 31, 34, 36, 37, 38, 39
Oracle performance before algorithm subset selection: num_inst_solved =  1434  - par10 =  93.3517023989
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.30510477  0.30510477  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 45.  45.  55.  55.] ,  [ 0.          0.23014369  0.23014369  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 105.  105.  115.  115.] ,  [ 0.          0.38645564  0.38645564  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 135.  135.  145.  145.] ,  [ 0.          0.20455899  0.20455899  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 175.  175.  185.  185.] ,  [ 0.          0.14913397  0.14913397  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 165.  165.  180.  180.] ,  [ 0.          0.3040472   0.3040472   0.14913397] ,  c
plt.plot(xs, ys,  color) =  [ 155.   155.   172.5  172.5] ,  [ 0.          0.30895669  0.30895669  0.3040472 ] ,  c
plt.plot(xs, ys,  color) =  [ 140.    140.    163.75  163.75] ,  [ 0.20455899  0.3272094   0.3272094   0.30895669] ,  c
plt.plot(xs, ys,  color) =  [ 125.     125.     151.875  151.875] ,  [ 0.         0.4832272  0.4832272  0.3272094] ,  c
plt.plot(xs, ys,  color) =  [ 195.  195.  205.  205.] ,  [ 0.          0.20384882  0.20384882  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 215.  215.  225.  225.] ,  [ 0.          0.29794963  0.29794963  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 200.  200.  220.  220.] ,  [ 0.20384882  0.42273589  0.42273589  0.29794963] ,  c
plt.plot(xs, ys,  color) =  [ 245.  245.  255.  255.] ,  [ 0.          0.17465249  0.17465249  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 235.  235.  250.  250.] ,  [ 0.          0.39903839  0.39903839  0.17465249] ,  c
plt.plot(xs, ys,  color) =  [ 265.  265.  275.  275.] ,  [ 0.          0.41435281  0.41435281  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 242.5  242.5  270.   270. ] ,  [ 0.39903839  0.49451122  0.49451122  0.41435281] ,  c
plt.plot(xs, ys,  color) =  [ 210.    210.    256.25  256.25] ,  [ 0.42273589  0.50212047  0.50212047  0.49451122] ,  c
plt.plot(xs, ys,  color) =  [ 138.4375  138.4375  233.125   233.125 ] ,  [ 0.4832272   0.52834066  0.52834066  0.50212047] ,  c
plt.plot(xs, ys,  color) =  [ 110.       110.       185.78125  185.78125] ,  [ 0.38645564  0.53522027  0.53522027  0.52834066] ,  c
plt.plot(xs, ys,  color) =  [  95.         95.        147.890625  147.890625] ,  [ 0.          0.60397511  0.60397511  0.53522027] ,  c
plt.plot(xs, ys,  color) =  [  85.          85.         121.4453125  121.4453125] ,  [ 0.          0.62181044  0.62181044  0.60397511] ,  c
plt.plot(xs, ys,  color) =  [  75.           75.          103.22265625  103.22265625] ,  [ 0.          0.65548178  0.65548178  0.62181044] ,  c
plt.plot(xs, ys,  color) =  [ 65.          65.          89.11132812  89.11132812] ,  [ 0.          0.67045025  0.67045025  0.65548178] ,  c
plt.plot(xs, ys,  color) =  [ 295.  295.  305.  305.] ,  [ 0.          0.25815878  0.25815878  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 285.  285.  300.  300.] ,  [ 0.          0.74079569  0.74079569  0.25815878] ,  b
plt.plot(xs, ys,  color) =  [  77.05566406   77.05566406  292.5         292.5       ] ,  [ 0.67045025  0.74092375  0.74092375  0.74079569] ,  b
plt.plot(xs, ys,  color) =  [  50.           50.          184.77783203  184.77783203] ,  [ 0.23014369  0.74660786  0.74660786  0.74092375] ,  b
plt.plot(xs, ys,  color) =  [  30.           30.          117.38891602  117.38891602] ,  [ 0.30510477  0.74764461  0.74764461  0.74660786] ,  b
plt.plot(xs, ys,  color) =  [ 15.          15.          73.69445801  73.69445801] ,  [ 0.          0.78298563  0.78298563  0.74764461] ,  b
plt.plot(xs, ys,  color) =  [  5.         5.        44.347229  44.347229] ,  [ 0.          1.0165208   1.0165208   0.78298563] ,  b
leaves:  [23  2 17 29 22 25  9  6 19 20  1  5  7 18 27 13 14 26 28 12 15  0  4 11  8
 24 10 16 30  3 21]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  -- alg_inx =  17
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  29
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  22
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  25
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  18
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  27
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  14
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  26
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  28
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  12
12  is removed from pair - new par10:  1460.73945656
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25
 26 27 28 29 30]  -- alg_inx =  15
15  is removed from pair - new par10:  1461.59361276
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  0
0  is removed from pair - new par10:  1462.69447748
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  4
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  8
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  24
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  3
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  21
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  1
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  5
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  13
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  7
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  11
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  10
10  is removed from pair - new par10:  1462.86424735
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  16
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  20
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  19
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  6
6  is removed from pair - new par10:  1466.15767134
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  9
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  30
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  2
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  23
Oracle performance after algorithm subset selection: num_inst_solved =  1434  - par10 =  94.9824973431
(26 out of 31) Algorithms/solvers to keep are determined: 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.44900000e+03,   1.45000000e+03,   1.45100000e+03]))
(1452 out of 1452) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0, 1232.0, 1233.0, 1234.0, 1235.0, 1236.0, 1237.0, 1238.0, 1239.0, 1240.0, 1241.0, 1242.0, 1243.0, 1244.0, 1245.0, 1246.0, 1247.0, 1248.0, 1249.0, 1250.0, 1251.0, 1252.0, 1253.0, 1254.0, 1255.0, 1256.0, 1257.0, 1258.0, 1259.0, 1260.0, 1261.0, 1262.0, 1263.0, 1264.0, 1265.0, 1266.0, 1267.0, 1268.0, 1269.0, 1270.0, 1271.0, 1272.0, 1273.0, 1274.0, 1275.0, 1276.0, 1277.0, 1278.0, 1279.0, 1280.0, 1281.0, 1282.0, 1283.0, 1284.0, 1285.0, 1286.0, 1287.0, 1288.0, 1289.0, 1290.0, 1291.0, 1292.0, 1293.0, 1294.0, 1295.0, 1296.0, 1297.0, 1298.0, 1299.0, 1300.0, 1301.0, 1302.0, 1303.0, 1304.0, 1305.0, 1306.0, 1307.0, 1308.0, 1309.0, 1310.0, 1311.0, 1312.0, 1313.0, 1314.0, 1315.0, 1316.0, 1317.0, 1318.0, 1319.0, 1320.0, 1321.0, 1322.0, 1323.0, 1324.0, 1325.0, 1326.0, 1327.0, 1328.0, 1329.0, 1330.0, 1331.0, 1332.0, 1333.0, 1334.0, 1335.0, 1336.0, 1337.0, 1338.0, 1339.0, 1340.0, 1341.0, 1342.0, 1343.0, 1344.0, 1345.0, 1346.0, 1347.0, 1348.0, 1349.0, 1350.0, 1351.0, 1352.0, 1353.0, 1354.0, 1355.0, 1356.0, 1357.0, 1358.0, 1359.0, 1360.0, 1361.0, 1362.0, 1363.0, 1364.0, 1365.0, 1366.0, 1367.0, 1368.0, 1369.0, 1370.0, 1371.0, 1372.0, 1373.0, 1374.0, 1375.0, 1376.0, 1377.0, 1378.0, 1379.0, 1380.0, 1381.0, 1382.0, 1383.0, 1384.0, 1385.0, 1386.0, 1387.0, 1388.0, 1389.0, 1390.0, 1391.0, 1392.0, 1393.0, 1394.0, 1395.0, 1396.0, 1397.0, 1398.0, 1399.0, 1400.0, 1401.0, 1402.0, 1403.0, 1404.0, 1405.0, 1406.0, 1407.0, 1408.0, 1409.0, 1410.0, 1411.0, 1412.0, 1413.0, 1414.0, 1415.0, 1416.0, 1417.0, 1418.0, 1419.0, 1420.0, 1421.0, 1422.0, 1423.0, 1424.0, 1425.0, 1426.0, 1427.0, 1428.0, 1429.0, 1430.0, 1431.0, 1432.0, 1433.0, 1434.0, 1435.0, 1436.0, 1437.0, 1438.0, 1439.0, 1440.0, 1441.0, 1442.0, 1443.0, 1444.0, 1445.0, 1446.0, 1447.0, 1448.0, 1449.0, 1450.0, 1451.0
% Backup Solver: mphaseSATm
% Input Instances for Training: 1452 (-unsolvable)
% Used Instances for Training: 1452 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 1012.59 (162 instances)
% >>> 8-th iteration<<<
('sr: ', array([ 4688.22023774,  1457.30429063,   620.31444896,   566.20714233,
         438.72243486,   385.233595  ,   371.98515266,   365.49173001,
         337.75312934,   319.05541444,   284.0570663 ,   264.06868788]), ' - svd_k: ', 12)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1434.0 	92.7157539888
2 	1335.0 	923.645537545
3 	1274.0 	1441.18690424
4 	1239.0 	1745.72723879
5 	1197.0 	2100.98200161
6 	1144.0 	2541.04032794
7 	1092.0 	2971.60414939
8 	1047.0 	3341.39633206
9 	1002.0 	3717.26684112
10 	948.0 	4167.71495827
11 	845.0 	5025.50527207
12 	786.0 	5514.56084388
13 	752.0 	5798.30068349
14 	724.0 	6027.17135294
15 	708.0 	6165.04721764
16 	688.0 	6332.57898891
17 	658.0 	6579.34935152
18 	631.0 	6804.35600424
19 	596.0 	7095.97949796
20 	553.0 	7447.13413534
21 	512.0 	7788.42596237
22 	474.0 	8105.4487169
23 	392.0 	8781.87934449
24 	215.0 	10232.236583
25 	160.0 	10683.7433194
26 	142.0 	10832.2553278
27 	120.0 	11017.4257741
28 	96.0 	11212.5666457
29 	69.0 	11431.9209902
30 	56.0 	11538.4265342
31 	37.0 	11695.5321199
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  4,  5,  6,  8, 11, 13, 16, 18, 19, 21, 23, 24, 25,
       28, 29, 31, 34, 36, 37, 38, 39]))
ft_imp_total =  0.9
ft cv scores:  [ 0.53796088  0.54464905  0.52663904  0.58634073  0.54305592  0.57683852
  0.52845331  0.49907195  0.52748453  0.487422  ]
top_ft_inx_arr:  [ 0  1  2  3  4  5  6  8 11 13 16 18 19 21 23 24 25 28 29 31 34 36 37 38 39]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 4, 5, 6, 8, 11, 13, 16, 18, 19, 21, 23, 24, 25, 28, 29, 31, 34, 36, 37, 38, 39
Oracle performance before algorithm subset selection: num_inst_solved =  1434  - par10 =  92.7157539888
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.21611343  0.21611343  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 55.  55.  65.  65.] ,  [ 0.          0.31321718  0.31321718  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.23582913  0.23582913  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 125.  125.  135.  135.] ,  [ 0.          0.37974346  0.37974346  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 145.  145.  155.  155.] ,  [ 0.          0.16958578  0.16958578  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.24656767  0.24656767  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 150.  150.  170.  170.] ,  [ 0.16958578  0.4433641   0.4433641   0.24656767] ,  m
plt.plot(xs, ys,  color) =  [ 130.  130.  160.  160.] ,  [ 0.37974346  0.54401329  0.54401329  0.4433641 ] ,  m
plt.plot(xs, ys,  color) =  [ 195.  195.  205.  205.] ,  [ 0.          0.18156161  0.18156161  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 225.  225.  235.  235.] ,  [ 0.          0.39226831  0.39226831  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 215.  215.  230.  230.] ,  [ 0.          0.47213169  0.47213169  0.39226831] ,  m
plt.plot(xs, ys,  color) =  [ 200.   200.   222.5  222.5] ,  [ 0.18156161  0.49307591  0.49307591  0.47213169] ,  m
plt.plot(xs, ys,  color) =  [ 255.  255.  265.  265.] ,  [ 0.          0.19222474  0.19222474  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 295.  295.  305.  305.] ,  [ 0.          0.15192404  0.15192404  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 285.  285.  300.  300.] ,  [ 0.          0.28647702  0.28647702  0.15192404] ,  m
plt.plot(xs, ys,  color) =  [ 275.   275.   292.5  292.5] ,  [ 0.          0.29740688  0.29740688  0.28647702] ,  m
plt.plot(xs, ys,  color) =  [ 260.    260.    283.75  283.75] ,  [ 0.19222474  0.30437193  0.30437193  0.29740688] ,  m
plt.plot(xs, ys,  color) =  [ 245.     245.     271.875  271.875] ,  [ 0.          0.49412296  0.49412296  0.30437193] ,  m
plt.plot(xs, ys,  color) =  [ 211.25    211.25    258.4375  258.4375] ,  [ 0.49307591  0.52850213  0.52850213  0.49412296] ,  m
plt.plot(xs, ys,  color) =  [ 185.       185.       234.84375  234.84375] ,  [ 0.          0.55187928  0.55187928  0.52850213] ,  m
plt.plot(xs, ys,  color) =  [ 145.        145.        209.921875  209.921875] ,  [ 0.54401329  0.56316764  0.56316764  0.55187928] ,  m
plt.plot(xs, ys,  color) =  [ 115.         115.         177.4609375  177.4609375] ,  [ 0.          0.60512737  0.60512737  0.56316764] ,  m
plt.plot(xs, ys,  color) =  [ 105.          105.          146.23046875  146.23046875] ,  [ 0.          0.61453687  0.61453687  0.60512737] ,  m
plt.plot(xs, ys,  color) =  [  95.           95.          125.61523438  125.61523438] ,  [ 0.          0.66352311  0.66352311  0.61453687] ,  m
plt.plot(xs, ys,  color) =  [  80.           80.          110.30761719  110.30761719] ,  [ 0.23582913  0.74731207  0.74731207  0.66352311] ,  b
plt.plot(xs, ys,  color) =  [ 60.          60.          95.15380859  95.15380859] ,  [ 0.31321718  0.74958239  0.74958239  0.74731207] ,  b
plt.plot(xs, ys,  color) =  [ 40.         40.         77.5769043  77.5769043] ,  [ 0.21611343  0.75689171  0.75689171  0.74958239] ,  b
plt.plot(xs, ys,  color) =  [ 25.          25.          58.78845215  58.78845215] ,  [ 0.          0.77647849  0.77647849  0.75689171] ,  b
plt.plot(xs, ys,  color) =  [ 15.          15.          41.89422607  41.89422607] ,  [ 0.          0.79174687  0.79174687  0.77647849] ,  b
plt.plot(xs, ys,  color) =  [  5.           5.          28.44711304  28.44711304] ,  [ 0.          1.01020061  1.01020061  0.79174687] ,  b
leaves:  [23  2 30 22 25 17 29  3 21  9 20  6  1  5 12 15  0  4 19  8 24 11 10 16  7
 18 27 13 14 26 28]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  -- alg_inx =  22
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  25
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  12
12  is removed from pair - new par10:  1442.58136031
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25
 26 27 28 29 30]  -- alg_inx =  15
15  is removed from pair - new par10:  1443.43769225
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  24
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  18
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  27
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  26
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  28
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  17
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  29
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  21
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  0
0  is removed from pair - new par10:  1444.56850815
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  4
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  13
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  14
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  1
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  5
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  10
10  is removed from pair - new par10:  1444.74064901
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  16
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  7
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  11
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  19
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  6
6  is removed from pair - new par10:  1448.52077453
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  20
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  9
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  30
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  2
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  23
Oracle performance after algorithm subset selection: num_inst_solved =  1434  - par10 =  94.1345196513
(26 out of 31) Algorithms/solvers to keep are determined: 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.45000000e+03,   1.45100000e+03,   1.45200000e+03]))
(1453 out of 1453) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0, 1232.0, 1233.0, 1234.0, 1235.0, 1236.0, 1237.0, 1238.0, 1239.0, 1240.0, 1241.0, 1242.0, 1243.0, 1244.0, 1245.0, 1246.0, 1247.0, 1248.0, 1249.0, 1250.0, 1251.0, 1252.0, 1253.0, 1254.0, 1255.0, 1256.0, 1257.0, 1258.0, 1259.0, 1260.0, 1261.0, 1262.0, 1263.0, 1264.0, 1265.0, 1266.0, 1267.0, 1268.0, 1269.0, 1270.0, 1271.0, 1272.0, 1273.0, 1274.0, 1275.0, 1276.0, 1277.0, 1278.0, 1279.0, 1280.0, 1281.0, 1282.0, 1283.0, 1284.0, 1285.0, 1286.0, 1287.0, 1288.0, 1289.0, 1290.0, 1291.0, 1292.0, 1293.0, 1294.0, 1295.0, 1296.0, 1297.0, 1298.0, 1299.0, 1300.0, 1301.0, 1302.0, 1303.0, 1304.0, 1305.0, 1306.0, 1307.0, 1308.0, 1309.0, 1310.0, 1311.0, 1312.0, 1313.0, 1314.0, 1315.0, 1316.0, 1317.0, 1318.0, 1319.0, 1320.0, 1321.0, 1322.0, 1323.0, 1324.0, 1325.0, 1326.0, 1327.0, 1328.0, 1329.0, 1330.0, 1331.0, 1332.0, 1333.0, 1334.0, 1335.0, 1336.0, 1337.0, 1338.0, 1339.0, 1340.0, 1341.0, 1342.0, 1343.0, 1344.0, 1345.0, 1346.0, 1347.0, 1348.0, 1349.0, 1350.0, 1351.0, 1352.0, 1353.0, 1354.0, 1355.0, 1356.0, 1357.0, 1358.0, 1359.0, 1360.0, 1361.0, 1362.0, 1363.0, 1364.0, 1365.0, 1366.0, 1367.0, 1368.0, 1369.0, 1370.0, 1371.0, 1372.0, 1373.0, 1374.0, 1375.0, 1376.0, 1377.0, 1378.0, 1379.0, 1380.0, 1381.0, 1382.0, 1383.0, 1384.0, 1385.0, 1386.0, 1387.0, 1388.0, 1389.0, 1390.0, 1391.0, 1392.0, 1393.0, 1394.0, 1395.0, 1396.0, 1397.0, 1398.0, 1399.0, 1400.0, 1401.0, 1402.0, 1403.0, 1404.0, 1405.0, 1406.0, 1407.0, 1408.0, 1409.0, 1410.0, 1411.0, 1412.0, 1413.0, 1414.0, 1415.0, 1416.0, 1417.0, 1418.0, 1419.0, 1420.0, 1421.0, 1422.0, 1423.0, 1424.0, 1425.0, 1426.0, 1427.0, 1428.0, 1429.0, 1430.0, 1431.0, 1432.0, 1433.0, 1434.0, 1435.0, 1436.0, 1437.0, 1438.0, 1439.0, 1440.0, 1441.0, 1442.0, 1443.0, 1444.0, 1445.0, 1446.0, 1447.0, 1448.0, 1449.0, 1450.0, 1451.0, 1452.0
% Backup Solver: mphaseSATm
% Input Instances for Training: 1453 (-unsolvable)
% Used Instances for Training: 1453 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 936.17 (161 instances)
% >>> 9-th iteration<<<
('sr: ', array([ 4689.88605199,  1463.05079297,   617.60870753,   573.09848356,
         440.65464902,   384.57605478,   372.05724042,   359.66508179,
         328.6623216 ,   318.17728607,   280.42142356,   258.61986579]), ' - svd_k: ', 12)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1432.0 	93.4608040014
2 	1334.0 	916.323143115
3 	1273.0 	1434.05655781
4 	1236.0 	1753.52660649
5 	1194.0 	2109.79903656
6 	1136.0 	2588.57132702
7 	1092.0 	2955.82520269
8 	1049.0 	3310.93476969
9 	1005.0 	3679.02748617
10 	946.0 	4169.41368029
11 	837.0 	5079.03789815
12 	780.0 	5551.64731853
13 	747.0 	5827.88489534
14 	721.0 	6039.47145258
15 	709.0 	6147.40134783
16 	690.0 	6306.69123609
17 	659.0 	6561.76542603
18 	630.0 	6803.3050629
19 	598.0 	7074.08979753
20 	550.0 	7463.1371858
21 	510.0 	7798.0806774
22 	472.0 	8115.82803075
23 	393.0 	8767.88113827
24 	214.0 	10237.1188897
25 	159.0 	10689.3870391
26 	141.0 	10837.9906145
27 	122.0 	10998.720014
28 	100.0 	11178.5495461
29 	72.0 	11405.4075279
30 	57.0 	11528.3152654
31 	39.0 	11677.9449441
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  4,  5,  7,  8,  9, 11, 13, 16, 18, 19, 21, 23, 25,
       28, 29, 31, 33, 34, 36, 37, 39]))
ft_imp_total =  0.9
ft cv scores:  [ 0.53457051  0.52984926  0.55773741  0.54648113  0.51106065  0.55408022
  0.52226609  0.50596487  0.54260382  0.50635258]
top_ft_inx_arr:  [ 0  1  2  3  4  5  7  8  9 11 13 16 18 19 21 23 25 28 29 31 33 34 36 37 39]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 16, 18, 19, 21, 23, 25, 28, 29, 31, 33, 34, 36, 37, 39
Oracle performance before algorithm subset selection: num_inst_solved =  1432  - par10 =  93.4608040014
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.18701651  0.18701651  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 55.  55.  65.  65.] ,  [ 0.         0.3309999  0.3309999  0.       ] ,  r
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.25954895  0.25954895  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 125.  125.  135.  135.] ,  [ 0.          0.18892509  0.18892509  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 115.  115.  130.  130.] ,  [ 0.          0.49775156  0.49775156  0.18892509] ,  m
plt.plot(xs, ys,  color) =  [ 145.  145.  155.  155.] ,  [ 0.          0.37751644  0.37751644  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 165.  165.  175.  175.] ,  [ 0.          0.15319015  0.15319015  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 185.  185.  195.  195.] ,  [ 0.          0.23500682  0.23500682  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 170.  170.  190.  190.] ,  [ 0.15319015  0.41690491  0.41690491  0.23500682] ,  m
plt.plot(xs, ys,  color) =  [ 150.  150.  180.  180.] ,  [ 0.37751644  0.52681604  0.52681604  0.41690491] ,  m
plt.plot(xs, ys,  color) =  [ 225.  225.  235.  235.] ,  [ 0.          0.14595977  0.14595977  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 245.  245.  255.  255.] ,  [ 0.          0.19867655  0.19867655  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 230.  230.  250.  250.] ,  [ 0.14595977  0.26005979  0.26005979  0.19867655] ,  m
plt.plot(xs, ys,  color) =  [ 265.  265.  275.  275.] ,  [ 0.          0.29191203  0.29191203  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 240.  240.  270.  270.] ,  [ 0.26005979  0.30069695  0.30069695  0.29191203] ,  m
plt.plot(xs, ys,  color) =  [ 215.  215.  255.  255.] ,  [ 0.          0.47218982  0.47218982  0.30069695] ,  m
plt.plot(xs, ys,  color) =  [ 295.  295.  305.  305.] ,  [ 0.          0.32256315  0.32256315  0.        ] ,  m
plt.plot(xs, ys,  color) =  [ 285.  285.  300.  300.] ,  [ 0.          0.48414276  0.48414276  0.32256315] ,  m
plt.plot(xs, ys,  color) =  [ 235.   235.   292.5  292.5] ,  [ 0.47218982  0.55261466  0.55261466  0.48414276] ,  m
plt.plot(xs, ys,  color) =  [ 205.    205.    263.75  263.75] ,  [ 0.          0.56763613  0.56763613  0.55261466] ,  m
plt.plot(xs, ys,  color) =  [ 165.     165.     234.375  234.375] ,  [ 0.52681604  0.57246671  0.57246671  0.56763613] ,  m
plt.plot(xs, ys,  color) =  [ 122.5     122.5     199.6875  199.6875] ,  [ 0.49775156  0.57849422  0.57849422  0.57246671] ,  m
plt.plot(xs, ys,  color) =  [ 105.       105.       161.09375  161.09375] ,  [ 0.          0.59044514  0.59044514  0.57849422] ,  m
plt.plot(xs, ys,  color) =  [  95.         95.        133.046875  133.046875] ,  [ 0.          0.61866805  0.61866805  0.59044514] ,  m
plt.plot(xs, ys,  color) =  [  80.          80.         114.0234375  114.0234375] ,  [ 0.25954895  0.74345896  0.74345896  0.61866805] ,  b
plt.plot(xs, ys,  color) =  [ 60.          60.          97.01171875  97.01171875] ,  [ 0.3309999   0.75146578  0.75146578  0.74345896] ,  b
plt.plot(xs, ys,  color) =  [ 40.          40.          78.50585938  78.50585938] ,  [ 0.18701651  0.76454171  0.76454171  0.75146578] ,  b
plt.plot(xs, ys,  color) =  [ 25.          25.          59.25292969  59.25292969] ,  [ 0.          0.77715248  0.77715248  0.76454171] ,  b
plt.plot(xs, ys,  color) =  [ 15.          15.          42.12646484  42.12646484] ,  [ 0.          0.78209698  0.78209698  0.77715248] ,  b
plt.plot(xs, ys,  color) =  [  5.           5.          28.56323242  28.56323242] ,  [ 0.          1.01407412  1.01407412  0.78209698] ,  b
leaves:  [23  2 30 22 25 17 29  3 21  9  6 19  8 24  1  5 12 15  0  4 20  7 26 28 18
 27 13 14 11 10 16]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  -- alg_inx =  22
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  25
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  12
12  is removed from pair - new par10:  1435.36426032
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25
 26 27 28 29 30]  -- alg_inx =  15
15  is removed from pair - new par10:  1436.22154384
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  26
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  28
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  17
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  29
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  21
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  24
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  0
0  is removed from pair - new par10:  1436.91247261
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  4
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  13
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  14
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  18
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  27
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  10
10  is removed from pair - new par10:  1436.97785669
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  16
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  19
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  1
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  5
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  7
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  11
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  20
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  6
6  is removed from pair - new par10:  1440.45014719
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  9
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  30
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  2
alg_portfolio =  [ 1  2  3  4  5  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  23
Oracle performance after algorithm subset selection: num_inst_solved =  1432  - par10 =  95.1794911173
(26 out of 31) Algorithms/solvers to keep are determined: 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.44900000e+03,   1.45000000e+03,   1.45100000e+03]))
(1452 out of 1452) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0, 1232.0, 1233.0, 1234.0, 1235.0, 1236.0, 1237.0, 1238.0, 1239.0, 1240.0, 1241.0, 1242.0, 1243.0, 1244.0, 1245.0, 1246.0, 1247.0, 1248.0, 1249.0, 1250.0, 1251.0, 1252.0, 1253.0, 1254.0, 1255.0, 1256.0, 1257.0, 1258.0, 1259.0, 1260.0, 1261.0, 1262.0, 1263.0, 1264.0, 1265.0, 1266.0, 1267.0, 1268.0, 1269.0, 1270.0, 1271.0, 1272.0, 1273.0, 1274.0, 1275.0, 1276.0, 1277.0, 1278.0, 1279.0, 1280.0, 1281.0, 1282.0, 1283.0, 1284.0, 1285.0, 1286.0, 1287.0, 1288.0, 1289.0, 1290.0, 1291.0, 1292.0, 1293.0, 1294.0, 1295.0, 1296.0, 1297.0, 1298.0, 1299.0, 1300.0, 1301.0, 1302.0, 1303.0, 1304.0, 1305.0, 1306.0, 1307.0, 1308.0, 1309.0, 1310.0, 1311.0, 1312.0, 1313.0, 1314.0, 1315.0, 1316.0, 1317.0, 1318.0, 1319.0, 1320.0, 1321.0, 1322.0, 1323.0, 1324.0, 1325.0, 1326.0, 1327.0, 1328.0, 1329.0, 1330.0, 1331.0, 1332.0, 1333.0, 1334.0, 1335.0, 1336.0, 1337.0, 1338.0, 1339.0, 1340.0, 1341.0, 1342.0, 1343.0, 1344.0, 1345.0, 1346.0, 1347.0, 1348.0, 1349.0, 1350.0, 1351.0, 1352.0, 1353.0, 1354.0, 1355.0, 1356.0, 1357.0, 1358.0, 1359.0, 1360.0, 1361.0, 1362.0, 1363.0, 1364.0, 1365.0, 1366.0, 1367.0, 1368.0, 1369.0, 1370.0, 1371.0, 1372.0, 1373.0, 1374.0, 1375.0, 1376.0, 1377.0, 1378.0, 1379.0, 1380.0, 1381.0, 1382.0, 1383.0, 1384.0, 1385.0, 1386.0, 1387.0, 1388.0, 1389.0, 1390.0, 1391.0, 1392.0, 1393.0, 1394.0, 1395.0, 1396.0, 1397.0, 1398.0, 1399.0, 1400.0, 1401.0, 1402.0, 1403.0, 1404.0, 1405.0, 1406.0, 1407.0, 1408.0, 1409.0, 1410.0, 1411.0, 1412.0, 1413.0, 1414.0, 1415.0, 1416.0, 1417.0, 1418.0, 1419.0, 1420.0, 1421.0, 1422.0, 1423.0, 1424.0, 1425.0, 1426.0, 1427.0, 1428.0, 1429.0, 1430.0, 1431.0, 1432.0, 1433.0, 1434.0, 1435.0, 1436.0, 1437.0, 1438.0, 1439.0, 1440.0, 1441.0, 1442.0, 1443.0, 1444.0, 1445.0, 1446.0, 1447.0, 1448.0, 1449.0, 1450.0, 1451.0
% Backup Solver: mphaseSATm
% Input Instances for Training: 1452 (-unsolvable)
% Used Instances for Training: 1452 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 1150.98 (162 instances)
% >>> 10-th iteration<<<
('sr: ', array([ 4702.96657751,  1460.72058786,   621.30478147,   572.07971206,
         439.74589527,   387.97395988,   372.11980941,   365.10551135,
         327.08085034,   322.615244  ,   282.87488553,   259.85678938]), ' - svd_k: ', 12)

opt_portfolio:  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1435.0 	94.6591506481
2 	1337.0 	917.933338564
3 	1272.0 	1466.50599352
4 	1233.0 	1800.82794456
5 	1192.0 	2149.58530336
6 	1137.0 	2604.39665525
7 	1086.0 	3025.52775626
8 	1043.0 	3379.39374926
9 	1001.0 	3733.09428584
10 	944.0 	4206.96781893
11 	832.0 	5137.12869
12 	773.0 	5626.37864817
13 	738.0 	5917.35646698
14 	710.0 	6145.27976314
15 	692.0 	6297.44714989
16 	673.0 	6456.32726835
17 	644.0 	6695.41176311
18 	616.0 	6927.80349134
19 	584.0 	7196.15689203
20 	544.0 	7522.06708716
21 	508.0 	7822.78542859
22 	474.0 	8110.41790943
23 	390.0 	8801.46815331
24 	206.0 	10306.8470801
25 	154.0 	10731.8394704
26 	136.0 	10880.1847387
27 	118.0 	11032.220885
28 	96.0 	11212.1560976
29 	71.0 	11415.6393798
30 	58.0 	11522.4307805
31 	37.0 	11695.93377
('top_ft_inx_arr: ', array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 11, 13, 16, 18, 19, 21, 23,
       25, 28, 29, 31, 34, 36, 37, 38]))
ft_imp_total =  0.9
ft cv scores:  [ 0.53779588  0.52601278  0.55967228  0.52324793  0.51656602  0.55379327
  0.46994097  0.48935527  0.54285253  0.5033324 ]
top_ft_inx_arr:  [ 0  1  2  3  4  5  6  7  8  9 11 13 16 18 19 21 23 25 28 29 31 34 36 37 38]
(25 out of 50) Features to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 18, 19, 21, 23, 25, 28, 29, 31, 34, 36, 37, 38
Oracle performance before algorithm subset selection: num_inst_solved =  1435  - par10 =  94.6591506481
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.25908016  0.25908016  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 45.  45.  55.  55.] ,  [ 0.          0.17851871  0.17851871  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.29316996  0.29316996  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 115.  115.  125.  125.] ,  [ 0.          0.39530008  0.39530008  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 135.  135.  145.  145.] ,  [ 0.          0.17957561  0.17957561  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 155.  155.  165.  165.] ,  [ 0.          0.23155414  0.23155414  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 140.  140.  160.  160.] ,  [ 0.17957561  0.4443201   0.4443201   0.23155414] ,  c
plt.plot(xs, ys,  color) =  [ 120.  120.  150.  150.] ,  [ 0.39530008  0.54820942  0.54820942  0.4443201 ] ,  c
plt.plot(xs, ys,  color) =  [ 185.  185.  195.  195.] ,  [ 0.          0.18300429  0.18300429  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 175.  175.  190.  190.] ,  [ 0.          0.45796993  0.45796993  0.18300429] ,  c
plt.plot(xs, ys,  color) =  [ 225.  225.  235.  235.] ,  [ 0.         0.3297574  0.3297574  0.       ] ,  c
plt.plot(xs, ys,  color) =  [ 215.  215.  230.  230.] ,  [ 0.          0.41115133  0.41115133  0.3297574 ] ,  c
plt.plot(xs, ys,  color) =  [ 255.  255.  265.  265.] ,  [ 0.          0.13820309  0.13820309  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 275.  275.  285.  285.] ,  [ 0.         0.1858144  0.1858144  0.       ] ,  c
plt.plot(xs, ys,  color) =  [ 260.  260.  280.  280.] ,  [ 0.13820309  0.29223101  0.29223101  0.1858144 ] ,  c
plt.plot(xs, ys,  color) =  [ 295.  295.  305.  305.] ,  [ 0.          0.29597058  0.29597058  0.        ] ,  c
plt.plot(xs, ys,  color) =  [ 270.  270.  300.  300.] ,  [ 0.29223101  0.31123614  0.31123614  0.29597058] ,  c
plt.plot(xs, ys,  color) =  [ 245.  245.  285.  285.] ,  [ 0.          0.4954562   0.4954562   0.31123614] ,  c
plt.plot(xs, ys,  color) =  [ 222.5  222.5  265.   265. ] ,  [ 0.41115133  0.51967304  0.51967304  0.4954562 ] ,  c
plt.plot(xs, ys,  color) =  [ 205.    205.    243.75  243.75] ,  [ 0.          0.56226876  0.56226876  0.51967304] ,  c
plt.plot(xs, ys,  color) =  [ 182.5    182.5    224.375  224.375] ,  [ 0.45796993  0.5631106   0.5631106   0.56226876] ,  c
plt.plot(xs, ys,  color) =  [ 135.      135.      203.4375  203.4375] ,  [ 0.54820942  0.56558897  0.56558897  0.5631106 ] ,  c
plt.plot(xs, ys,  color) =  [ 105.       105.       169.21875  169.21875] ,  [ 0.          0.58245104  0.58245104  0.56558897] ,  c
plt.plot(xs, ys,  color) =  [  95.         95.        137.109375  137.109375] ,  [ 0.          0.62217442  0.62217442  0.58245104] ,  c
plt.plot(xs, ys,  color) =  [  80.          80.         116.0546875  116.0546875] ,  [ 0.29316996  0.68572965  0.68572965  0.62217442] ,  c
plt.plot(xs, ys,  color) =  [ 65.          65.          98.02734375  98.02734375] ,  [ 0.          0.72773927  0.72773927  0.68572965] ,  b
plt.plot(xs, ys,  color) =  [ 50.          50.          81.51367188  81.51367188] ,  [ 0.17851871  0.72825511  0.72825511  0.72773927] ,  b
plt.plot(xs, ys,  color) =  [ 30.          30.          65.75683594  65.75683594] ,  [ 0.25908016  0.75767606  0.75767606  0.72825511] ,  b
plt.plot(xs, ys,  color) =  [ 15.          15.          47.87841797  47.87841797] ,  [ 0.          0.80018751  0.80018751  0.75767606] ,  b
plt.plot(xs, ys,  color) =  [  5.           5.          31.43920898  31.43920898] ,  [ 0.          1.00838685  1.00838685  0.80018751] ,  b
leaves:  [23  2  3 21 22 25 30 17 29  6  9  1  5 12 15  0  4 19  8 24 20 11 10 16  7
 26 28 18 27 13 14]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  21
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  22
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  25
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30]  -- alg_inx =  12
12  is removed from pair - new par10:  1467.76429317
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25
 26 27 28 29 30]  -- alg_inx =  15
15  is removed from pair - new par10:  1468.63784718
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26
 27 28 29 30]  -- alg_inx =  0
0  is removed from pair - new par10:  1469.77965902
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  4
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  8
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  24
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  26
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  28
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  18
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  27
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  17
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  29
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  1
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  5
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 10 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27
 28 29 30]  -- alg_inx =  10
10  is removed from pair - new par10:  1469.94987505
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  16
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  13
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  14
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  11
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  19
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  7
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  20
alg_portfolio =  [ 1  2  3  4  5  6  7  8  9 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28
 29 30]  -- alg_inx =  9
9  is removed from pair - new par10:  1472.21517122
alg_portfolio =  [ 1  2  3  4  5  6  7  8 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29
 30]  -- alg_inx =  6
6  is removed from pair - new par10:  1475.46296912
alg_portfolio =  [ 1  2  3  4  5  7  8 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30]  -- alg_inx =  30
alg_portfolio =  [ 1  2  3  4  5  7  8 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30]  -- alg_inx =  2
alg_portfolio =  [ 1  2  3  4  5  7  8 11 13 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30]  -- alg_inx =  23
Oracle performance after algorithm subset selection: num_inst_solved =  1435  - par10 =  97.2678196098
(25 out of 31) Algorithms/solvers to keep are determined: 1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.45000000e+03,   1.45100000e+03,   1.45200000e+03]))
(1453 out of 1453) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0, 1232.0, 1233.0, 1234.0, 1235.0, 1236.0, 1237.0, 1238.0, 1239.0, 1240.0, 1241.0, 1242.0, 1243.0, 1244.0, 1245.0, 1246.0, 1247.0, 1248.0, 1249.0, 1250.0, 1251.0, 1252.0, 1253.0, 1254.0, 1255.0, 1256.0, 1257.0, 1258.0, 1259.0, 1260.0, 1261.0, 1262.0, 1263.0, 1264.0, 1265.0, 1266.0, 1267.0, 1268.0, 1269.0, 1270.0, 1271.0, 1272.0, 1273.0, 1274.0, 1275.0, 1276.0, 1277.0, 1278.0, 1279.0, 1280.0, 1281.0, 1282.0, 1283.0, 1284.0, 1285.0, 1286.0, 1287.0, 1288.0, 1289.0, 1290.0, 1291.0, 1292.0, 1293.0, 1294.0, 1295.0, 1296.0, 1297.0, 1298.0, 1299.0, 1300.0, 1301.0, 1302.0, 1303.0, 1304.0, 1305.0, 1306.0, 1307.0, 1308.0, 1309.0, 1310.0, 1311.0, 1312.0, 1313.0, 1314.0, 1315.0, 1316.0, 1317.0, 1318.0, 1319.0, 1320.0, 1321.0, 1322.0, 1323.0, 1324.0, 1325.0, 1326.0, 1327.0, 1328.0, 1329.0, 1330.0, 1331.0, 1332.0, 1333.0, 1334.0, 1335.0, 1336.0, 1337.0, 1338.0, 1339.0, 1340.0, 1341.0, 1342.0, 1343.0, 1344.0, 1345.0, 1346.0, 1347.0, 1348.0, 1349.0, 1350.0, 1351.0, 1352.0, 1353.0, 1354.0, 1355.0, 1356.0, 1357.0, 1358.0, 1359.0, 1360.0, 1361.0, 1362.0, 1363.0, 1364.0, 1365.0, 1366.0, 1367.0, 1368.0, 1369.0, 1370.0, 1371.0, 1372.0, 1373.0, 1374.0, 1375.0, 1376.0, 1377.0, 1378.0, 1379.0, 1380.0, 1381.0, 1382.0, 1383.0, 1384.0, 1385.0, 1386.0, 1387.0, 1388.0, 1389.0, 1390.0, 1391.0, 1392.0, 1393.0, 1394.0, 1395.0, 1396.0, 1397.0, 1398.0, 1399.0, 1400.0, 1401.0, 1402.0, 1403.0, 1404.0, 1405.0, 1406.0, 1407.0, 1408.0, 1409.0, 1410.0, 1411.0, 1412.0, 1413.0, 1414.0, 1415.0, 1416.0, 1417.0, 1418.0, 1419.0, 1420.0, 1421.0, 1422.0, 1423.0, 1424.0, 1425.0, 1426.0, 1427.0, 1428.0, 1429.0, 1430.0, 1431.0, 1432.0, 1433.0, 1434.0, 1435.0, 1436.0, 1437.0, 1438.0, 1439.0, 1440.0, 1441.0, 1442.0, 1443.0, 1444.0, 1445.0, 1446.0, 1447.0, 1448.0, 1449.0, 1450.0, 1451.0, 1452.0
% Backup Solver: mphaseSATm
% Input Instances for Training: 1453 (-unsolvable)
% Used Instances for Training: 1453 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 1155.74 (161 instances)
% 
%  >>> Instances: 1614 <<<
%  >>> Oracle Evaluation (w/o unsolved) <<<
% 
% Unsolved (not by any algorithm and not by feature computation): 20
% PAR1 time: 107.501011 (93.793370)
% Par10 time: 241.317615 (93.780823)
% #TOs: 20 (0)
% 
%  >>> Cross Fold Evaluation <<<
% 
% Presolved: 20
% >>>With Unsolvable Instances
% Timeouts per #Thread: {1: 124, 2: 95, 3: 75, 4: 72, 5: 65, 6: 59, 7: 49, 8: 45, 9: 44, 10: 41, 11: 40, 12: 37, 13: 36, 14: 36, 15: 34, 16: 34, 17: 32, 18: 32, 19: 30, 20: 29, 21: 28, 22: 27, 23: 27, 24: 25, 25: 25, 26: 25, 27: 15, 28: 0, 29: 0, 30: 0, 31: 0}
% Solved (perc) per #Thread: {1: 0.9231722428748451, 2: 0.9411400247831475, 3: 0.9535315985130112, 4: 0.9553903345724907, 5: 0.959727385377943, 6: 0.9634448574969021, 7: 0.969640644361834, 8: 0.9721189591078067, 9: 0.9727385377942999, 10: 0.9745972738537795, 11: 0.9752168525402726, 12: 0.9770755885997522, 13: 0.9776951672862454, 14: 0.9776951672862454, 15: 0.9789343246592317, 16: 0.9789343246592317, 17: 0.9801734820322181, 18: 0.9801734820322181, 19: 0.9814126394052045, 20: 0.9820322180916976, 21: 0.9826517967781908, 22: 0.983271375464684, 23: 0.983271375464684, 24: 0.9845105328376704, 25: 0.9845105328376704, 26: 0.9845105328376704, 27: 0.9907063197026023, 28: 1.0, 29: 1.0, 30: 1.0, 31: 1.0}
% AVG per #Thread: {1: 211.58050825898485, 2: 179.07550835811656, 3: 164.4130920570008, 4: 160.25978980173414, 5: 155.51995711276257, 6: 149.02530412019806, 7: 143.2509361710036, 8: 140.3075842874842, 9: 138.50273920693877, 10: 137.06526092317185, 11: 136.0599821189587, 12: 134.58714445477028, 13: 133.74837123296112, 14: 133.57253480173455, 15: 133.39747284386607, 16: 133.2281172180915, 17: 131.47126469640637, 18: 131.17931922552663, 19: 130.23015566294924, 20: 129.55473438042128, 21: 128.2460169330854, 22: 127.51275175340761, 23: 127.51262164188348, 24: 126.79609128252785, 25: 126.7956575774473, 26: 126.78982734200741, 27: 88.36004394052041, 28: 0.04366171003717473, 29: 0.04366171003717473, 30: 0.04366171003717473, 31: 0.04366171003717473}
% PAR10 per #Thread: {1: 1041.3202852106576, 2: 814.763240700124, 3: 666.2718281164804, 4: 642.0441764188346, 5: 590.4641950309782, 6: 543.8208431536553, 7: 471.13197706319687, 8: 441.4228259231719, 9: 432.9265310285001, 10: 411.414703302354, 11: 403.71797468401445, 12: 382.17078757744684, 13: 374.6405645415113, 14: 374.46472811028474, 15: 360.90676652416346, 16: 360.7374108983889, 17: 345.59765874845095, 18: 345.3057132775712, 19: 330.9736500867411, 20: 323.6067789900867, 21: 315.60661172862444, 22: 308.18189673482027, 23: 308.18176662329614, 24: 294.0823366356877, 25: 294.08190293060716, 26: 294.0760726951673, 27: 188.73179115241632, 28: 0.04366171003717473, 29: 0.04366171003717473, 30: 0.04366171003717473, 31: 0.04366171003717473}
% >>>Without Unsolved Instances (depends on pre-solved in feature groups)
% Timeouts: {1: 104, 2: 75, 3: 55, 4: 52, 5: 45, 6: 39, 7: 29, 8: 25, 9: 24, 10: 21, 11: 20, 12: 17, 13: 16, 14: 16, 15: 14, 16: 14, 17: 12, 18: 12, 19: 10, 20: 9, 21: 8, 22: 7, 23: 7, 24: 5, 25: 5, 26: 5, 27: -5, 28: -20, 29: -20, 30: -20, 31: -20}
% Solved (perc): {1: 0.9347553324968633, 2: 0.9529485570890841, 3: 0.965495608531995, 4: 0.9673776662484316, 5: 0.9717691342534505, 6: 0.9755332496863237, 7: 0.9818067754077792, 8: 0.9843161856963614, 9: 0.9849435382685069, 10: 0.9868255959849436, 11: 0.9874529485570891, 12: 0.9893350062735258, 13: 0.9899623588456713, 14: 0.9899623588456713, 15: 0.9912170639899623, 16: 0.9912170639899623, 17: 0.9924717691342535, 18: 0.9924717691342535, 19: 0.9937264742785445, 20: 0.9943538268506901, 21: 0.9949811794228356, 22: 0.9956085319949812, 23: 0.9956085319949812, 24: 0.9968632371392723, 25: 0.9968632371392723, 26: 0.9968632371392723, 27: 1.0031367628607277, 28: 1.012547051442911, 29: 1.012547051442911, 30: 1.012547051442911, 31: 1.012547051442911}
% PAR1: {1: 199.17875804893447, 2: 166.26591624215817, 3: 151.41952984943492, 4: 147.2141158971135, 5: 142.41481228356258, 6: 135.83867054579653, 7: 129.99185130489323, 8: 127.01156903387671, 9: 125.18407846925922, 10: 123.7285640715178, 11: 122.7106719824337, 12: 121.21935454830567, 13: 120.37005719573352, 14: 120.19201453575883, 15: 120.01475606649927, 16: 119.84327552697599, 17: 118.06437968632365, 18: 117.76877116060224, 19: 116.80769839397746, 20: 116.123802565872, 21: 114.79866457340015, 22: 114.05619907779166, 23: 114.05606733375153, 24: 113.33054663111666, 25: 113.33010748431614, 26: 113.32420409661228, 27: 74.41224022584689, 28: -15.012252195734002, 29: -15.012252195734002, 30: -15.012252195734002, 31: -15.012252195734002}
% PAR10: {1: 903.8211670828115, 2: 674.4214996800503, 3: 524.0669577038891, 4: 499.5353204140521, 5: 447.3081623462979, 6: 400.07957393350046, 7: 326.47867690087816, 8: 296.39676351317405, 9: 287.7938651693847, 10: 266.0121274341276, 11: 258.2188275658716, 12: 236.40128679422787, 13: 228.77658166248384, 14: 228.5985390025091, 15: 214.87046497490581, 16: 214.6989844353825, 17: 199.36927303638635, 18: 199.07366451066497, 19: 184.56177618569643, 20: 177.10247257841905, 21: 169.00192680677532, 22: 161.48405353199493, 23: 161.4839217879548, 24: 147.2075855269761, 25: 147.20714638017563, 26: 147.20124299247175, 27: 40.53520132998742, 28: -150.5204077791719, 29: -150.5204077791719, 30: -150.5204077791719, 31: -150.5204077791719}
% 
% Time used by each solver: {'ebglucose': 555.47, 'lrglshr': 4125.570000000001, 'sol': 7352.4800000000005, 'mphaseSATm': 50553.22012999997, 'glucose2': 13840.449999999999, 'glueminisat': 16224.640000000005, 'eagleup': 16768.13, 'ebminisat': 1658.8600099999999, 'mphaseSAT64': 24798.889999999992, 'gnoveltyp2': 1190.9900199999997, 'sparrow': 19980.480000000014, 'spear-hw': 0, 'qutersat': 16059.050000000001, 'sattime': 6534.67, 'mxc09': 14415.220019999999, 'lingeling': 25282.91, 'mphaseSAT': 6181.080100000002, 'restartsat': 4900.750000000001, 'marchrw': 17898.36002, 'clasp2': 19793.340010000004, 'clasp1': 18279.91002, 'satime11': 5851.65, 'sattimep': 2242.6500000000005, 'tnm': 2804.45, 'cryptominisat2011': 9348.930000000002, 'sapperlot': 3533.87}
% Optimal Time used by each solver: {'ebglucose': 24915.910000000003, 'lrglshr': 6277.37023, 'sol': 2203.5900000000006, 'mphaseSATm': 7647.1602699999985, 'glucose2': 3922.5200000000004, 'glueminisat': 7013.150019999999, 'picosat': 3753.7701200000033, 'eagleup': 4523.4402100000025, 'ebminisat': 1416.76, 'precosat': 2432.26, 'spear-sw': 6.29, 'minisatpsm': 1737.3800000000003, 'gnoveltyp2': 1287.8801999999998, 'sparrow': 12152.710200000001, 'rcl': 269.69, 'spear-hw': 435.66999999999996, 'qutersat': 8327.940009999997, 'sattime': 1960.0300200000001, 'mxc09': 8447.939999999999, 'mphaseSAT64': 6804.540000000002, 'lingeling': 6001.220000000001, 'mphaseSAT': 389.79999999999995, 'restartsat': 1917.33, 'marchrw': 26151.230040000017, 'clasp2': 8335.570000000002, 'clasp1': 12173.859999999995, 'satime11': 2926.3000199999997, 'sattimep': 2315.30001, 'tnm': 1851.7200299999995, 'cryptominisat2011': 5750.0, 'sapperlot': 158.30001}
Total time passed:  2120.933  seconds
Started solving  /home/misir/Desktop/aslib_data-aslib-v1.1/ASP-POTASSCO
% Command line arguments:
% --aslib-dir /home/misir/Desktop/aslib_data-aslib-v1.1/ASP-POTASSCO --model-dir MODEL_DIR --print-times /home/misir/Desktop/liclipse/Workspace/flexfolio-data_filtering-v3/output/17082015161556555077/ASP-POTASSCO.csv
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/ASP-POTASSCO/description.txt
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/ASP-POTASSCO/algorithm_runs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/ASP-POTASSCO/feature_values.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/ASP-POTASSCO/feature_runstatus.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/ASP-POTASSCO/feature_costs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/ASP-POTASSCO/cv.arff
% 1-th repetition: 129,129,129,130,130,129,129,130,130,129 distribution
% Used Feature Steps: Static,Dynamic-1,Dynamic-2,Dynamic-3,Dynamic-4
% Used features: Frac_Learnt_Others-2,Frac_Learnt_Others-3,Frac_Learnt_Others-1,Frac_Learnt_Others-4,Running_Avg_Conflictlevel-4,Running_Avg_Conflictlevel-1,Running_Avg_Conflictlevel-3,Frac_Choice_Rules,Choices-4,Frac_Normal_Rules,Choices-2,Choices-3,Choices-1,Rules,Ternary_Constraints,Longest_Backjumping-2,Longest_Backjumping-3,Longest_Backjumping-1,Other_Constraints,Constraints/Vars,Frac_Cardinality_Rules,Assigned_Problem_Variables,Equivalences,Frac_Literals_in_Loop_Nogoods-1,Frac_Literals_in_Loop_Nogoods-2,Frac_Literals_in_Loop_Nogoods-3,Frac_Literals_in_Loop_Nogoods-4,Avg_Skipped_Levels_while_Backjumping-4,Choice_Rules,Avg_Skipped_Levels_while_Backjumping-2,Avg_Skipped_Levels_while_Backjumping-3,Learnt_Ternary-1,Avg_LBD_Levels-1,Learnt_Ternary-3,Learnt_Ternary-2,Avg_LBD_Levels-4,Learnt_Ternary-4,Other_Equivalences,Learnt_from_Loop-3,Frac_Learnt_Ternary-2,Removed_Nogoods-2,Removed_Nogoods-3,Frac_Literals_in_Conflict_Nogoods-3,Removed_Nogoods-1,Frac_Learnt_Ternary-1,Removed_Nogoods-4,Frac_Learnt_Binary-1,Frac_Learnt_Binary-2,Frac_Learnt_Binary-3,Frac_Learnt_Binary-4,Frac_Binary_Rules,Running_Avg_LBD-1,Running_Avg_LBD-3,Running_Avg_LBD-2,Tight,Running_Avg_LBD-4,Cardinality_Rules,Learnt_from_Loop-4,Weight_Rules,Frac_Neg_Body,SCCS,Frac_Other_Equivalences,Nodes_in_Positive_BADG,Conflicts/Choices-1,Conflicts/Choices-2,Conflicts/Choices-3,Conflicts/Choices-4,Frac_Atom-Atom_Equivalences,Frac_Pos_Body,Frac_Integrity_Rules,Created_Bodies,Learnt_Binary-4,Learnt_Binary-2,Learnt_Binary-3,Learnt_Binary-1,Frac_Unary_Rules,Avg_Conflict_Levels-2,Avg_Conflict_Levels-1,Avg_Conflict_Levels-4,Running_Avg_Conflictlevel-2,Frac_Removed_Nogood-1,Problem_Variables,Frac_Removed_Nogood-3,Frac_Removed_Nogood-4,Avg_Skipped_Levels_while_Backjumping-1,Free_Problem_Variables,Frac_Literals_in_Conflict_Nogoods-4,Frac_Literals_in_Conflict_Nogoods-1,Frac_Literals_in_Conflict_Nogoods-2,Constraints,Learnt_from_Conflict-3,Learnt_from_Conflict-2,Learnt_from_Conflict-1,Learnt_from_Conflict-4,Frac_Other_Constraints,Frac_Body-Body_Equivalences,Frac_Learnt_Ternary-3,Learnt_from_Loop-2,Learnt_from_Loop-1,Atom-Atom_Equivalences,Longest_Backjumping-4,Frac_Learnt_Ternary-4,Learnt_Others-4,Avg_Conflict_Levels-3,Learnt_Others-1,Learnt_Others-2,Learnt_Others-3,Literals_in_Conflict_Nogoods-2,Literals_in_Conflict_Nogoods-3,Frac_Ternary_Rules,Literals_in_Conflict_Nogoods-1,Binary_Constraints,Literals_in_Conflict_Nogoods-4,Frac_Ternary_Constraints,Program_Atoms,Avg_LBD_Levels-3,Avg_LBD_Levels-2,Frac_Removed_Nogood-2,Frac_Learnt_from_Conflict-1,Frac_Learnt_from_Conflict-3,Frac_Learnt_from_Conflict-2,Frac_Learnt_from_Conflict-4,Body-Body_Equivalences,Frac_Binary_Constraints,Normal_Rules,Literals_in_Loop_Nogoods-4,Literals_in_Loop_Nogoods-2,Literals_in_Loop_Nogoods-3,Literals_in_Loop_Nogoods-1,Frac_Learnt_from_Loop-1,Frac_Learnt_from_Loop-3,Frac_Learnt_from_Loop-2,Frac_Learnt_from_Loop-4,Skipped_Levels_while_Backjumping-1,Skipped_Levels_while_Backjumping-4,Skipped_Levels_while_Backjumping-3,Skipped_Levels_while_Backjumping-2,Frac_Weight_Rules
% 
% Check Consistency and Completeness of input data
% Instances: 		 1294
% Algorithms: 		 11
% Incomplete Feature Vector: 	 0 (maybe imputed)
% Unsolvable Instances (status): 	 82
% Unsolvable Instances (runtime): 	 82
% Valid Instances: 	 1212
% Presolved: 		 204
% Average Feature Costs: 	 1.3299
% Use given CV of 1-th repetition
% >>> 1-th iteration<<<
('sr: ', array([ 780.53633517,  160.61331958,  142.65218293,  122.81021935]), ' - svd_k: ', 4)

opt_portfolio:  [1 1 1 1 1 1 1 1 1 1 1]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1091.0 	20.9323751566
2 	1074.0 	121.67720237
3 	1052.0 	246.323161272
4 	1000.0 	535.04392503
5 	968.0 	708.843095442
6 	942.0 	855.247785893
7 	914.0 	1011.16801832
8 	886.0 	1169.52152146
9 	849.0 	1376.90972692
10 	791.0 	1700.97572789
11 	687.0 	2272.10029825
('top_ft_inx_arr: ', array([  0,   1,   2,   3,   4,   5,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  18,  19,  20,  21,  22,  23,  25,  26,  27,  28,  29,
        30,  31,  32,  33,  34,  35,  36,  37,  41,  46,  47,  57,  59,
        60,  62,  66,  71,  74,  77,  78,  82,  85,  87,  89,  90,  91,
       103, 105, 106, 107, 112, 114, 115, 116, 119, 121, 126, 128, 130,
       131, 132, 136, 137]))
ft_imp_total =  0.9
ft cv scores:  [ 0.43903742  0.5662665   0.59646368  0.50056499  0.532361    0.55802695
  0.54136751  0.56539738  0.61340088  0.57150878]
top_ft_inx_arr:  [  0   1   2   3   4   5   7   8   9  10  11  12  13  14  15  18  19  20
  21  22  23  25  26  27  28  29  30  31  32  33  34  35  36  37  41  46
  47  57  59  60  62  66  71  74  77  78  82  85  87  89  90  91 103 105
 106 107 112 114 115 116 119 121 126 128 130 131 132 136 137]
(69 out of 138) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 46, 47, 57, 59, 60, 62, 66, 71, 74, 77, 78, 82, 85, 87, 89, 90, 91, 103, 105, 106, 107, 112, 114, 115, 116, 119, 121, 126, 128, 130, 131, 132, 136, 137
Oracle performance before algorithm subset selection: num_inst_solved =  1091  - par10 =  20.9323751566
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.43199804  0.43199804  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 45.  45.  55.  55.] ,  [ 0.          0.21784394  0.21784394  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  50.  50.] ,  [ 0.          0.2342886   0.2342886   0.21784394] ,  g
plt.plot(xs, ys,  color) =  [ 25.   25.   42.5  42.5] ,  [ 0.          0.26805434  0.26805434  0.2342886 ] ,  g
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.14718579  0.14718579  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 65.  65.  80.  80.] ,  [ 0.          0.28633661  0.28633661  0.14718579] ,  r
plt.plot(xs, ys,  color) =  [ 33.75  33.75  72.5   72.5 ] ,  [ 0.26805434  0.44155597  0.44155597  0.28633661] ,  b
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.47549695  0.47549695  0.        ] ,  b
plt.plot(xs, ys,  color) =  [  53.125   53.125  100.     100.   ] ,  [ 0.44155597  0.53807869  0.53807869  0.47549695] ,  b
plt.plot(xs, ys,  color) =  [ 10.      10.      76.5625  76.5625] ,  [ 0.43199804  0.55137028  0.55137028  0.53807869] ,  b
leaves:  [ 0  3  1  9  2  4  8  7 10  5  6]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  -- alg_inx =  0
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  2
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  10
10  is removed from pair - new par10:  247.536991178
alg_portfolio =  [0 1 2 3 4 5 6 7 8 9]  -- alg_inx =  5
alg_portfolio =  [0 1 2 3 4 5 6 7 8 9]  -- alg_inx =  6
Oracle performance after algorithm subset selection: num_inst_solved =  1091  - par10 =  21.107888767
(10 out of 11) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.16200000e+03,   1.16300000e+03,   1.16400000e+03]))
(1165 out of 1165) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0
% Backup Solver: clasp/2.1.3/h1-n1
% Input Instances for Training: 1165 (-unsolvable)
% Used Instances for Training: 1165 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 495.58 (129 instances)
% >>> 2-th iteration<<<
('sr: ', array([ 782.63526223,  160.6542724 ,  143.72682644,  124.94902948]), ' - svd_k: ', 4)

opt_portfolio:  [1 1 1 1 1 1 1 1 1 1 1]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1092.0 	22.4246563874
2 	1070.0 	149.455149311
3 	1047.0 	279.388164874
4 	994.0 	573.958411235
5 	962.0 	747.779410957
6 	937.0 	890.120891735
7 	908.0 	1051.96913291
8 	878.0 	1220.72646534
9 	839.0 	1438.97036282
10 	780.0 	1768.12767469
11 	667.0 	2384.76577621
('top_ft_inx_arr: ', array([  0,   1,   2,   3,   4,   5,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  25,  26,  27,
        28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  39,  41,  46,
        60,  62,  65,  66,  72,  78,  81,  84,  85,  87,  89,  91,  94,
       103, 106, 107, 112, 114, 115, 116, 119, 121, 127, 128, 130, 131,
       132, 133, 136, 137]))
ft_imp_total =  0.9
ft cv scores:  [ 0.49637881  0.57488277  0.55688628  0.51826073  0.53722955  0.60433918
  0.61084687  0.5012595   0.6342299   0.54238699]
top_ft_inx_arr:  [  0   1   2   3   4   5   7   8   9  10  11  12  13  14  15  16  17  18
  19  20  21  22  23  25  26  27  28  29  30  31  32  33  34  35  36  37
  39  41  46  60  62  65  66  72  78  81  84  85  87  89  91  94 103 106
 107 112 114 115 116 119 121 127 128 130 131 132 133 136 137]
(69 out of 138) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 46, 60, 62, 65, 66, 72, 78, 81, 84, 85, 87, 89, 91, 94, 103, 106, 107, 112, 114, 115, 116, 119, 121, 127, 128, 130, 131, 132, 133, 136, 137
Oracle performance before algorithm subset selection: num_inst_solved =  1092  - par10 =  22.4246563874
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.44138417  0.44138417  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.42944983  0.42944983  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 55.  55.  65.  65.] ,  [ 0.          0.14600416  0.14600416  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 45.  45.  60.  60.] ,  [ 0.          0.29352698  0.29352698  0.14600416] ,  g
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.18931442  0.18931442  0.        ] ,  r
plt.plot(xs, ys,  color) =  [  85.   85.  100.  100.] ,  [ 0.          0.23327083  0.23327083  0.18931442] ,  r
plt.plot(xs, ys,  color) =  [ 75.   75.   92.5  92.5] ,  [ 0.          0.29423184  0.29423184  0.23327083] ,  r
plt.plot(xs, ys,  color) =  [ 52.5   52.5   83.75  83.75] ,  [ 0.29352698  0.43862904  0.43862904  0.29423184] ,  b
plt.plot(xs, ys,  color) =  [ 30.     30.     68.125  68.125] ,  [ 0.42944983  0.52873984  0.52873984  0.43862904] ,  b
plt.plot(xs, ys,  color) =  [ 10.      10.      49.0625  49.0625] ,  [ 0.44138417  0.54733559  0.54733559  0.52873984] ,  b
leaves:  [ 5  6  0  3  8  7 10  1  9  2  4]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  -- alg_inx =  5
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  6
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  0
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  2
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  10
Oracle performance after algorithm subset selection: num_inst_solved =  1092  - par10 =  22.4246563874
(11 out of 11) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.16200000e+03,   1.16300000e+03,   1.16400000e+03]))
(1165 out of 1165) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0
% Backup Solver: clasp/2.1.3/h1-n1
% Input Instances for Training: 1165 (-unsolvable)
% Used Instances for Training: 1165 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 431.64 (129 instances)
% >>> 3-th iteration<<<
('sr: ', array([ 779.65933602,  159.57539174,  144.27079017,  126.20328424]), ' - svd_k: ', 4)

opt_portfolio:  [1 1 1 1 1 1 1 1 1 1 1]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1094.0 	21.6632902697
2 	1075.0 	132.88092645
3 	1051.0 	267.428918163
4 	1001.0 	544.850192451
5 	970.0 	713.95649773
6 	943.0 	864.464180536
7 	915.0 	1020.30914202
8 	887.0 	1179.05864064
9 	849.0 	1389.94822653
10 	793.0 	1704.43701727
11 	680.0 	2319.54870819
('top_ft_inx_arr: ', array([  0,   1,   2,   3,   4,   5,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  18,  19,  20,  21,  22,  23,  25,  26,  27,  28,  29,
        30,  31,  32,  33,  34,  35,  36,  37,  41,  46,  58,  59,  60,
        62,  65,  66,  71,  72,  77,  81,  82,  85,  87,  89,  91, 102,
       105, 106, 107, 112, 114, 115, 116, 119, 121, 123, 127, 130, 131,
       132, 135, 136, 137]))
ft_imp_total =  0.9
ft cv scores:  [ 0.51736017  0.53809552  0.62799267  0.57311987  0.52127915  0.59099027
  0.58738793  0.50695474  0.62857405  0.53545484]
top_ft_inx_arr:  [  0   1   2   3   4   5   7   8   9  10  11  12  13  14  15  18  19  20
  21  22  23  25  26  27  28  29  30  31  32  33  34  35  36  37  41  46
  58  59  60  62  65  66  71  72  77  81  82  85  87  89  91 102 105 106
 107 112 114 115 116 119 121 123 127 130 131 132 135 136 137]
(69 out of 138) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 46, 58, 59, 60, 62, 65, 66, 71, 72, 77, 81, 82, 85, 87, 89, 91, 102, 105, 106, 107, 112, 114, 115, 116, 119, 121, 123, 127, 130, 131, 132, 135, 136, 137
Oracle performance before algorithm subset selection: num_inst_solved =  1094  - par10 =  21.6632902697
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.48332797  0.48332797  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.43497136  0.43497136  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 55.  55.  65.  65.] ,  [ 0.          0.15176734  0.15176734  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 45.  45.  60.  60.] ,  [ 0.          0.22990986  0.22990986  0.15176734] ,  g
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.18978665  0.18978665  0.        ] ,  r
plt.plot(xs, ys,  color) =  [  85.   85.  100.  100.] ,  [ 0.          0.25868785  0.25868785  0.18978665] ,  r
plt.plot(xs, ys,  color) =  [ 75.   75.   92.5  92.5] ,  [ 0.          0.28229118  0.28229118  0.25868785] ,  r
plt.plot(xs, ys,  color) =  [ 52.5   52.5   83.75  83.75] ,  [ 0.22990986  0.44019496  0.44019496  0.28229118] ,  b
plt.plot(xs, ys,  color) =  [ 30.     30.     68.125  68.125] ,  [ 0.43497136  0.5417352   0.5417352   0.44019496] ,  b
plt.plot(xs, ys,  color) =  [ 10.      10.      49.0625  49.0625] ,  [ 0.48332797  0.58879508  0.58879508  0.5417352 ] ,  b
leaves:  [ 5  6  0  3  8  7 10  1  9  2  4]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  -- alg_inx =  5
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  6
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  0
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  2
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  10
Oracle performance after algorithm subset selection: num_inst_solved =  1094  - par10 =  21.6632902697
(11 out of 11) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.16200000e+03,   1.16300000e+03,   1.16400000e+03]))
(1165 out of 1165) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0
% Backup Solver: clasp/2.1.3/h1-n1
% Input Instances for Training: 1165 (-unsolvable)
% Used Instances for Training: 1165 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 630.68 (129 instances)
% >>> 4-th iteration<<<
('sr: ', array([ 782.11494398,  160.13484046,  143.03840253,  124.57358925]), ' - svd_k: ', 4)

opt_portfolio:  [1 1 1 1 1 1 1 1 1 1 1]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1087.0 	21.0723981918
2 	1069.0 	126.992942246
3 	1046.0 	257.01258627
4 	995.0 	541.354219106
5 	964.0 	711.116605014
6 	938.0 	858.642774075
7 	910.0 	1015.77346467
8 	883.0 	1169.50977018
9 	844.0 	1388.75121223
10 	783.0 	1728.1914471
11 	677.0 	2310.55907492
('top_ft_inx_arr: ', array([  0,   1,   2,   3,   4,   5,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  18,  19,  20,  21,  22,  23,  25,  26,  27,  28,  29,
        30,  31,  33,  34,  35,  36,  37,  41,  46,  49,  58,  60,  62,
        66,  71,  72,  74,  78,  80,  81,  82,  85,  87,  89,  96, 102,
       103, 106, 107, 108, 111, 112, 114, 116, 119, 121, 123, 127, 130,
       131, 132, 136, 137]))
ft_imp_total =  0.9
ft cv scores:  [ 0.47649885  0.55806703  0.63013095  0.55093929  0.50026924  0.58477988
  0.57863516  0.5882894   0.61746427  0.53777603]
top_ft_inx_arr:  [  0   1   2   3   4   5   7   8   9  10  11  12  13  14  15  18  19  20
  21  22  23  25  26  27  28  29  30  31  33  34  35  36  37  41  46  49
  58  60  62  66  71  72  74  78  80  81  82  85  87  89  96 102 103 106
 107 108 111 112 114 116 119 121 123 127 130 131 132 136 137]
(69 out of 138) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 41, 46, 49, 58, 60, 62, 66, 71, 72, 74, 78, 80, 81, 82, 85, 87, 89, 96, 102, 103, 106, 107, 108, 111, 112, 114, 116, 119, 121, 123, 127, 130, 131, 132, 136, 137
Oracle performance before algorithm subset selection: num_inst_solved =  1087  - par10 =  21.0723981918
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.41652801  0.41652801  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 45.  45.  55.  55.] ,  [ 0.          0.20321695  0.20321695  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  50.  50.] ,  [ 0.          0.23877937  0.23877937  0.20321695] ,  g
plt.plot(xs, ys,  color) =  [ 25.   25.   42.5  42.5] ,  [ 0.          0.28553595  0.28553595  0.23877937] ,  g
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.12608836  0.12608836  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 65.  65.  80.  80.] ,  [ 0.          0.3104841   0.3104841   0.12608836] ,  r
plt.plot(xs, ys,  color) =  [ 33.75  33.75  72.5   72.5 ] ,  [ 0.28553595  0.45342931  0.45342931  0.3104841 ] ,  b
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.46068159  0.46068159  0.        ] ,  b
plt.plot(xs, ys,  color) =  [  53.125   53.125  100.     100.   ] ,  [ 0.45342931  0.50904715  0.50904715  0.46068159] ,  b
plt.plot(xs, ys,  color) =  [ 10.      10.      76.5625  76.5625] ,  [ 0.41652801  0.55478631  0.55478631  0.50904715] ,  b
leaves:  [ 0  3  1  9  2  4  8  7 10  5  6]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  -- alg_inx =  0
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  2
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  5
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  6
Oracle performance after algorithm subset selection: num_inst_solved =  1087  - par10 =  21.0723981918
(11 out of 11) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.16100000e+03,   1.16200000e+03,   1.16300000e+03]))
(1164 out of 1164) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0
% Backup Solver: clasp/2.1.3/h1-n1
% Input Instances for Training: 1164 (-unsolvable)
% Used Instances for Training: 1164 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 356.25 (130 instances)
% >>> 5-th iteration<<<
('sr: ', array([ 783.71909037,  159.07925637,  144.25545804,  125.65747417]), ' - svd_k: ', 4)

opt_portfolio:  [1 1 1 1 1 1 1 1 1 1 1]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1086.0 	22.0528739162
2 	1065.0 	144.06280822
3 	1042.0 	274.491501387
4 	994.0 	543.277710764
5 	964.0 	707.937948814
6 	938.0 	856.263079906
7 	906.0 	1034.74511466
8 	875.0 	1208.96162392
9 	837.0 	1421.9098933
10 	783.0 	1726.99773876
11 	672.0 	2335.96022639
('top_ft_inx_arr: ', array([  0,   1,   2,   3,   4,   5,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  18,  19,  20,  21,  22,  23,  25,  26,  27,  28,  29,
        30,  31,  32,  33,  34,  35,  36,  37,  41,  46,  47,  55,  58,
        60,  62,  65,  66,  71,  81,  84,  87,  89,  96, 102, 105, 106,
       107, 108, 109, 111, 112, 114, 116, 119, 121, 123, 127, 130, 131,
       132, 134, 136, 137]))
ft_imp_total =  0.9
ft cv scores:  [ 0.46626386  0.5948606   0.60299225  0.55571032  0.51722425  0.58039255
  0.58230433  0.5682262   0.57370397  0.51467719]
top_ft_inx_arr:  [  0   1   2   3   4   5   7   8   9  10  11  12  13  14  15  18  19  20
  21  22  23  25  26  27  28  29  30  31  32  33  34  35  36  37  41  46
  47  55  58  60  62  65  66  71  81  84  87  89  96 102 105 106 107 108
 109 111 112 114 116 119 121 123 127 130 131 132 134 136 137]
(69 out of 138) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 46, 47, 55, 58, 60, 62, 65, 66, 71, 81, 84, 87, 89, 96, 102, 105, 106, 107, 108, 109, 111, 112, 114, 116, 119, 121, 123, 127, 130, 131, 132, 134, 136, 137
Oracle performance before algorithm subset selection: num_inst_solved =  1086  - par10 =  22.0528739162
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.45016976  0.45016976  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.40986862  0.40986862  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 55.  55.  65.  65.] ,  [ 0.          0.14231136  0.14231136  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 45.  45.  60.  60.] ,  [ 0.          0.26245152  0.26245152  0.14231136] ,  g
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.20063518  0.20063518  0.        ] ,  r
plt.plot(xs, ys,  color) =  [  85.   85.  100.  100.] ,  [ 0.          0.2214285   0.2214285   0.20063518] ,  r
plt.plot(xs, ys,  color) =  [ 75.   75.   92.5  92.5] ,  [ 0.          0.26713114  0.26713114  0.2214285 ] ,  r
plt.plot(xs, ys,  color) =  [ 52.5   52.5   83.75  83.75] ,  [ 0.26245152  0.4901861   0.4901861   0.26713114] ,  b
plt.plot(xs, ys,  color) =  [ 30.     30.     68.125  68.125] ,  [ 0.40986862  0.55634416  0.55634416  0.4901861 ] ,  b
plt.plot(xs, ys,  color) =  [ 10.      10.      49.0625  49.0625] ,  [ 0.45016976  0.56333802  0.56333802  0.55634416] ,  b
leaves:  [ 5  6  0  3  8  7 10  1  9  2  4]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  -- alg_inx =  5
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  6
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  0
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  2
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  9
Oracle performance after algorithm subset selection: num_inst_solved =  1086  - par10 =  22.0528739162
(11 out of 11) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.16100000e+03,   1.16200000e+03,   1.16300000e+03]))
(1164 out of 1164) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0
% Backup Solver: clasp/2.1.3/h1-n1
% Input Instances for Training: 1164 (-unsolvable)
% Used Instances for Training: 1164 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 297.49 (130 instances)
% >>> 6-th iteration<<<
('sr: ', array([ 780.3439542 ,  159.25679537,  143.9455127 ,  123.84329432]), ' - svd_k: ', 4)

opt_portfolio:  [1 1 1 1 1 1 1 1 1 1 1]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1093.0 	20.7920340584
2 	1073.0 	137.17511889
3 	1050.0 	266.540658337
4 	996.0 	565.408682375
5 	968.0 	718.544776255
6 	945.0 	849.254830312
7 	917.0 	1005.73155939
8 	888.0 	1169.33990477
9 	852.0 	1370.98450104
10 	794.0 	1694.81867981
11 	682.0 	2304.20797244
('top_ft_inx_arr: ', array([  0,   1,   2,   3,   4,   5,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  18,  19,  20,  21,  22,  23,  25,  26,  27,  28,  29,
        30,  31,  33,  34,  35,  36,  37,  40,  41,  46,  47,  60,  62,
        66,  71,  72,  78,  81,  82,  84,  87,  89,  91,  98,  99, 102,
       103, 105, 106, 107, 109, 112, 114, 115, 116, 119, 121, 127, 130,
       131, 132, 136, 137]))
ft_imp_total =  0.9
ft cv scores:  [ 0.53814133  0.59269692  0.59531023  0.49737971  0.47371184  0.54117592
  0.55472006  0.5234134   0.58375066  0.516336  ]
top_ft_inx_arr:  [  0   1   2   3   4   5   7   8   9  10  11  12  13  14  15  18  19  20
  21  22  23  25  26  27  28  29  30  31  33  34  35  36  37  40  41  46
  47  60  62  66  71  72  78  81  82  84  87  89  91  98  99 102 103 105
 106 107 109 112 114 115 116 119 121 127 130 131 132 136 137]
(69 out of 138) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 46, 47, 60, 62, 66, 71, 72, 78, 81, 82, 84, 87, 89, 91, 98, 99, 102, 103, 105, 106, 107, 109, 112, 114, 115, 116, 119, 121, 127, 130, 131, 132, 136, 137
Oracle performance before algorithm subset selection: num_inst_solved =  1093  - par10 =  20.7920340584
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.46103878  0.46103878  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.19363312  0.19363312  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  40.  40.] ,  [ 0.          0.3063575   0.3063575   0.19363312] ,  g
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.22363038  0.22363038  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 65.  65.  80.  80.] ,  [ 0.          0.2315518   0.2315518   0.22363038] ,  r
plt.plot(xs, ys,  color) =  [ 55.   55.   72.5  72.5] ,  [ 0.          0.31114013  0.31114013  0.2315518 ] ,  r
plt.plot(xs, ys,  color) =  [ 32.5   32.5   63.75  63.75] ,  [ 0.3063575   0.4187972   0.4187972   0.31114013] ,  b
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.         0.4237233  0.4237233  0.       ] ,  b
plt.plot(xs, ys,  color) =  [  48.125   48.125  100.     100.   ] ,  [ 0.4187972   0.52663655  0.52663655  0.4237233 ] ,  b
plt.plot(xs, ys,  color) =  [ 10.      10.      74.0625  74.0625] ,  [ 0.46103878  0.56118568  0.56118568  0.52663655] ,  b
leaves:  [ 5  6  8  7 10  1  9  2  4  0  3]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  -- alg_inx =  5
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  6
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  2
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  0
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  3
Oracle performance after algorithm subset selection: num_inst_solved =  1093  - par10 =  20.7920340584
(11 out of 11) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.16200000e+03,   1.16300000e+03,   1.16400000e+03]))
(1165 out of 1165) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0
% Backup Solver: clasp/2.1.3/h1-n1
% Input Instances for Training: 1165 (-unsolvable)
% Used Instances for Training: 1165 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 634.13 (129 instances)
% >>> 7-th iteration<<<
('sr: ', array([ 780.07757758,  157.34142119,  142.7732914 ,  125.0204307 ]), ' - svd_k: ', 4)

opt_portfolio:  [1 1 1 1 1 1 1 1 1 1 1]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1091.0 	20.3677554411
2 	1070.0 	141.346011204
3 	1049.0 	259.553416465
4 	1000.0 	532.375635572
5 	972.0 	685.893420667
6 	950.0 	812.683570578
7 	919.0 	984.477714933
8 	894.0 	1127.591518
9 	856.0 	1340.48075344
10 	800.0 	1654.31168694
11 	690.0 	2255.49214782
('top_ft_inx_arr: ', array([  0,   1,   2,   3,   4,   5,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  18,  19,  20,  21,  22,  23,  25,  26,  27,  28,  29,
        30,  31,  32,  33,  34,  35,  36,  37,  40,  41,  46,  47,  60,
        62,  66,  74,  81,  82,  87,  89,  91,  98, 102, 103, 106, 107,
       110, 112, 114, 115, 116, 119, 121, 122, 123, 127, 128, 130, 131,
       132, 135, 136, 137]))
ft_imp_total =  0.9
ft cv scores:  [ 0.49796732  0.58929462  0.5930873   0.56516546  0.53943111  0.57945906
  0.55955233  0.55021135  0.5219663   0.50209389]
top_ft_inx_arr:  [  0   1   2   3   4   5   7   8   9  10  11  12  13  14  15  18  19  20
  21  22  23  25  26  27  28  29  30  31  32  33  34  35  36  37  40  41
  46  47  60  62  66  74  81  82  87  89  91  98 102 103 106 107 110 112
 114 115 116 119 121 122 123 127 128 130 131 132 135 136 137]
(69 out of 138) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 46, 47, 60, 62, 66, 74, 81, 82, 87, 89, 91, 98, 102, 103, 106, 107, 110, 112, 114, 115, 116, 119, 121, 122, 123, 127, 128, 130, 131, 132, 135, 136, 137
Oracle performance before algorithm subset selection: num_inst_solved =  1091  - par10 =  20.3677554411
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.49570924  0.49570924  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.44098707  0.44098707  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 65.  65.  75.  75.] ,  [ 0.          0.20470903  0.20470903  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 55.  55.  70.  70.] ,  [ 0.          0.22725862  0.22725862  0.20470903] ,  g
plt.plot(xs, ys,  color) =  [ 45.   45.   62.5  62.5] ,  [ 0.          0.27729319  0.27729319  0.22725862] ,  g
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.19039477  0.19039477  0.        ] ,  r
plt.plot(xs, ys,  color) =  [  85.   85.  100.  100.] ,  [ 0.          0.28145864  0.28145864  0.19039477] ,  r
plt.plot(xs, ys,  color) =  [ 53.75  53.75  92.5   92.5 ] ,  [ 0.27729319  0.45773092  0.45773092  0.28145864] ,  b
plt.plot(xs, ys,  color) =  [ 30.     30.     73.125  73.125] ,  [ 0.44098707  0.52266008  0.52266008  0.45773092] ,  b
plt.plot(xs, ys,  color) =  [ 10.      10.      51.5625  51.5625] ,  [ 0.49570924  0.55145157  0.55145157  0.52266008] ,  b
leaves:  [ 5  6  0  3  1  9  2  4  8  7 10]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  -- alg_inx =  5
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  6
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  0
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  2
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  10
Oracle performance after algorithm subset selection: num_inst_solved =  1091  - par10 =  20.3677554411
(11 out of 11) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.16200000e+03,   1.16300000e+03,   1.16400000e+03]))
(1165 out of 1165) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0
% Backup Solver: clasp/2.1.3/h1-n1
% Input Instances for Training: 1165 (-unsolvable)
% Used Instances for Training: 1165 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 504.00 (129 instances)
% >>> 8-th iteration<<<
('sr: ', array([ 780.17062485,  159.4454264 ,  142.93852352,  125.33052577]), ' - svd_k: ', 4)

opt_portfolio:  [1 1 1 1 1 1 1 1 1 1 1]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1091.0 	20.9832948077
2 	1070.0 	142.84806618
3 	1050.0 	256.950832859
4 	999.0 	540.725618877
5 	969.0 	704.661871478
6 	943.0 	851.399621579
7 	912.0 	1023.15829355
8 	885.0 	1174.91879222
9 	852.0 	1362.50871942
10 	795.0 	1681.27399119
11 	680.0 	2308.68770155
('top_ft_inx_arr: ', array([  0,   1,   2,   3,   4,   5,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  18,  19,  20,  21,  22,  23,  25,  26,  27,  28,  29,
        30,  31,  32,  33,  34,  35,  36,  37,  41,  46,  56,  57,  59,
        60,  62,  66,  71,  78,  81,  82,  83,  85,  87,  89,  91,  94,
       103, 105, 106, 107, 112, 113, 114, 116, 119, 121, 123, 128, 130,
       131, 132, 136, 137]))
ft_imp_total =  0.9
ft cv scores:  [ 0.57799481  0.59912869  0.59400885  0.57971317  0.58420492  0.55659782
  0.57228126  0.55168747  0.63292     0.53759764]
top_ft_inx_arr:  [  0   1   2   3   4   5   7   8   9  10  11  12  13  14  15  18  19  20
  21  22  23  25  26  27  28  29  30  31  32  33  34  35  36  37  41  46
  56  57  59  60  62  66  71  78  81  82  83  85  87  89  91  94 103 105
 106 107 112 113 114 116 119 121 123 128 130 131 132 136 137]
(69 out of 138) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 46, 56, 57, 59, 60, 62, 66, 71, 78, 81, 82, 83, 85, 87, 89, 91, 94, 103, 105, 106, 107, 112, 113, 114, 116, 119, 121, 123, 128, 130, 131, 132, 136, 137
Oracle performance before algorithm subset selection: num_inst_solved =  1091  - par10 =  20.9832948077
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.42468599  0.42468599  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 65.  65.  75.  75.] ,  [ 0.          0.16326664  0.16326664  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 55.  55.  70.  70.] ,  [ 0.          0.26714736  0.26714736  0.16326664] ,  g
plt.plot(xs, ys,  color) =  [ 45.   45.   62.5  62.5] ,  [ 0.          0.27217654  0.27217654  0.26714736] ,  g
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.         0.1363649  0.1363649  0.       ] ,  r
plt.plot(xs, ys,  color) =  [  85.   85.  100.  100.] ,  [ 0.          0.31644098  0.31644098  0.1363649 ] ,  r
plt.plot(xs, ys,  color) =  [ 53.75  53.75  92.5   92.5 ] ,  [ 0.27217654  0.45944761  0.45944761  0.31644098] ,  b
plt.plot(xs, ys,  color) =  [ 35.     35.     73.125  73.125] ,  [ 0.          0.48852014  0.48852014  0.45944761] ,  b
plt.plot(xs, ys,  color) =  [ 25.      25.      54.0625  54.0625] ,  [ 0.          0.52195338  0.52195338  0.48852014] ,  b
plt.plot(xs, ys,  color) =  [ 10.       10.       39.53125  39.53125] ,  [ 0.42468599  0.53750583  0.53750583  0.52195338] ,  b
leaves:  [ 0  3  5  6  1  9  2  4  8  7 10]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  -- alg_inx =  0
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  2
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  6
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  5
Oracle performance after algorithm subset selection: num_inst_solved =  1091  - par10 =  20.9832948077
(11 out of 11) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.16100000e+03,   1.16200000e+03,   1.16300000e+03]))
(1164 out of 1164) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0
% Backup Solver: clasp/2.1.3/h1-n1
% Input Instances for Training: 1164 (-unsolvable)
% Used Instances for Training: 1164 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 540.00 (130 instances)
% >>> 9-th iteration<<<
('sr: ', array([ 781.0188234 ,  160.94143535,  142.25306435,  125.26784924]), ' - svd_k: ', 4)

opt_portfolio:  [1 1 1 1 1 1 1 1 1 1 1]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1090.0 	21.9623486817
2 	1070.0 	138.637027125
3 	1046.0 	273.343362209
4 	999.0 	536.23740944
5 	967.0 	710.770645889
6 	942.0 	852.595955827
7 	911.0 	1024.90660172
8 	882.0 	1187.94877609
9 	846.0 	1391.58538014
10 	787.0 	1721.54178351
11 	674.0 	2338.61443409
('top_ft_inx_arr: ', array([  0,   1,   2,   3,   4,   5,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  16,  18,  19,  20,  21,  22,  23,  25,  26,  27,  28,
        29,  30,  31,  32,  33,  34,  35,  36,  37,  41,  46,  55,  56,
        58,  60,  61,  62,  65,  66,  80,  83,  84,  87,  89,  91,  94,
        96, 102, 103, 106, 107, 110, 112, 113, 114, 116, 119, 121, 128,
       131, 132, 136, 137]))
ft_imp_total =  0.9
ft cv scores:  [ 0.5734431   0.62181774  0.60405994  0.55147534  0.56291245  0.56237491
  0.59672589  0.57773027  0.55368876  0.5110759 ]
top_ft_inx_arr:  [  0   1   2   3   4   5   7   8   9  10  11  12  13  14  15  16  18  19
  20  21  22  23  25  26  27  28  29  30  31  32  33  34  35  36  37  41
  46  55  56  58  60  61  62  65  66  80  83  84  87  89  91  94  96 102
 103 106 107 110 112 113 114 116 119 121 128 131 132 136 137]
(69 out of 138) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 46, 55, 56, 58, 60, 61, 62, 65, 66, 80, 83, 84, 87, 89, 91, 94, 96, 102, 103, 106, 107, 110, 112, 113, 114, 116, 119, 121, 128, 131, 132, 136, 137
Oracle performance before algorithm subset selection: num_inst_solved =  1090  - par10 =  21.9623486817
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.46111324  0.46111324  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.41725473  0.41725473  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 55.  55.  65.  65.] ,  [ 0.          0.16678348  0.16678348  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 45.  45.  60.  60.] ,  [ 0.          0.26152429  0.26152429  0.16678348] ,  g
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.20941016  0.20941016  0.        ] ,  r
plt.plot(xs, ys,  color) =  [  85.   85.  100.  100.] ,  [ 0.          0.21213171  0.21213171  0.20941016] ,  r
plt.plot(xs, ys,  color) =  [ 75.   75.   92.5  92.5] ,  [ 0.          0.30688422  0.30688422  0.21213171] ,  r
plt.plot(xs, ys,  color) =  [ 52.5   52.5   83.75  83.75] ,  [ 0.26152429  0.46361017  0.46361017  0.30688422] ,  b
plt.plot(xs, ys,  color) =  [ 30.     30.     68.125  68.125] ,  [ 0.41725473  0.54386916  0.54386916  0.46361017] ,  b
plt.plot(xs, ys,  color) =  [ 10.      10.      49.0625  49.0625] ,  [ 0.46111324  0.56205564  0.56205564  0.54386916] ,  b
leaves:  [ 5  6  0  3  8  7 10  1  9  2  4]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  -- alg_inx =  5
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  6
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  0
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  2
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  9
Oracle performance after algorithm subset selection: num_inst_solved =  1090  - par10 =  21.9623486817
(11 out of 11) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.16100000e+03,   1.16200000e+03,   1.16300000e+03]))
(1164 out of 1164) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0
% Backup Solver: clasp/2.1.3/h1-n1
% Input Instances for Training: 1164 (-unsolvable)
% Used Instances for Training: 1164 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 436.41 (130 instances)
% >>> 10-th iteration<<<
('sr: ', array([ 779.32200043,  159.45221614,  143.8157533 ,  125.53458438]), ' - svd_k: ', 4)

opt_portfolio:  [1 1 1 1 1 1 1 1 1 1 1]
opt_portfolio v2:  set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	1093.0 	20.8850304552
2 	1074.0 	132.465437573
3 	1052.0 	256.389216691
4 	1003.0 	529.172253485
5 	971.0 	703.708524742
6 	945.0 	850.521011302
7 	914.0 	1021.54155054
8 	889.0 	1164.36862315
9 	854.0 	1361.11188799
10 	796.0 	1685.62500566
11 	677.0 	2332.40960771
('top_ft_inx_arr: ', array([  0,   1,   2,   3,   4,   5,   7,   8,   9,  10,  11,  12,  13,
        14,  15,  16,  18,  19,  20,  21,  22,  23,  25,  26,  27,  28,
        29,  30,  31,  32,  33,  34,  35,  36,  37,  39,  46,  56,  60,
        62,  66,  71,  78,  80,  81,  82,  83,  87,  91,  96, 102, 103,
       105, 106, 107, 108, 112, 114, 116, 119, 121, 123, 127, 128, 130,
       131, 132, 136, 137]))
ft_imp_total =  0.9
ft cv scores:  [ 0.49497486  0.5952749   0.57632806  0.55199507  0.55423254  0.57304658
  0.58989222  0.57177684  0.61316146  0.59940442]
top_ft_inx_arr:  [  0   1   2   3   4   5   7   8   9  10  11  12  13  14  15  16  18  19
  20  21  22  23  25  26  27  28  29  30  31  32  33  34  35  36  37  39
  46  56  60  62  66  71  78  80  81  82  83  87  91  96 102 103 105 106
 107 108 112 114 116 119 121 123 127 128 130 131 132 136 137]
(69 out of 138) Features to keep are determined: 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 46, 56, 60, 62, 66, 71, 78, 80, 81, 82, 83, 87, 91, 96, 102, 103, 105, 106, 107, 108, 112, 114, 116, 119, 121, 123, 127, 128, 130, 131, 132, 136, 137
Oracle performance before algorithm subset selection: num_inst_solved =  1093  - par10 =  20.8850304552
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.41711725  0.41711725  0.        ] ,  b
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.17299708  0.17299708  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  40.  40.] ,  [ 0.          0.27198712  0.27198712  0.17299708] ,  g
plt.plot(xs, ys,  color) =  [ 75.  75.  85.  85.] ,  [ 0.          0.21071322  0.21071322  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 65.  65.  80.  80.] ,  [ 0.          0.25014999  0.25014999  0.21071322] ,  r
plt.plot(xs, ys,  color) =  [ 55.   55.   72.5  72.5] ,  [ 0.          0.29073376  0.29073376  0.25014999] ,  r
plt.plot(xs, ys,  color) =  [ 32.5   32.5   63.75  63.75] ,  [ 0.27198712  0.41039445  0.41039445  0.29073376] ,  b
plt.plot(xs, ys,  color) =  [  95.   95.  105.  105.] ,  [ 0.          0.47787137  0.47787137  0.        ] ,  b
plt.plot(xs, ys,  color) =  [  48.125   48.125  100.     100.   ] ,  [ 0.41039445  0.54649807  0.54649807  0.47787137] ,  b
plt.plot(xs, ys,  color) =  [ 10.      10.      74.0625  74.0625] ,  [ 0.41711725  0.54910908  0.54910908  0.54649807] ,  b
leaves:  [ 0  3  8  7 10  1  9  2  4  5  6]
alg_portfolio =  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  -- alg_inx =  0
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  3
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  1
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  2
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  4
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  7
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  8
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  9
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  10
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  5
alg_portfolio =  [ 0  1  2  3  4  5  6  7  8  9 10]  -- alg_inx =  6
Oracle performance after algorithm subset selection: num_inst_solved =  1093  - par10 =  20.8850304552
(11 out of 11) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.16200000e+03,   1.16300000e+03,   1.16400000e+03]))
(1165 out of 1165) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0
% Backup Solver: clasp/2.1.3/h1-n1
% Input Instances for Training: 1165 (-unsolvable)
% Used Instances for Training: 1165 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 587.79 (129 instances)
% 
%  >>> Instances: 1294 <<<
%  >>> Oracle Evaluation (w/o unsolved) <<<
% 
% Unsolved (not by any algorithm and not by feature computation): 82
% PAR1 time: 58.047715 (21.380976)
% Par10 time: 400.179091 (21.313320)
% #TOs: 82 (0)
% 
%  >>> Cross Fold Evaluation <<<
% 
% Presolved: 204
% >>>With Unsolvable Instances
% Timeouts per #Thread: {1: 100, 2: 90, 3: 88, 4: 86, 5: 86, 6: 86, 7: 85, 8: 83, 9: 82, 10: 82, 11: 82}
% Solved (perc) per #Thread: {1: 0.9227202472952086, 2: 0.9304482225656878, 3: 0.9319938176197836, 4: 0.9335394126738794, 5: 0.9335394126738794, 6: 0.9335394126738794, 7: 0.9343122102009274, 8: 0.9358578052550232, 9: 0.9366306027820711, 10: 0.9366306027820711, 11: 0.9366306027820711}
% AVG per #Thread: {1: 73.82810436573445, 2: 64.65604958149946, 3: 62.40977678837728, 4: 61.72100862207125, 5: 60.91578877315327, 6: 60.69572303188555, 7: 60.256407620293615, 8: 59.61000295120548, 9: 59.230219642936646, 10: 59.14196044038649, 11: 59.1209758321174}
% PAR10 per #Thread: {1: 491.1387689716077, 2: 440.2356477267854, 3: 429.64316164154576, 4: 420.6081801831223, 5: 419.8029603342043, 6: 419.58289459293655, 7: 414.97047253528586, 8: 405.9778545740803, 9: 401.4249646197527, 10: 401.33670541720255, 11: 401.31572080893346}
% >>>Without Unsolved Instances (depends on pre-solved in feature groups)
% Timeouts: {1: 18, 2: 8, 3: 6, 4: 4, 5: 4, 6: 4, 7: 3, 8: 1, 9: 0, 10: 0, 11: 0}
% Solved (perc): {1: 0.9851485148514851, 2: 0.9933993399339934, 3: 0.995049504950495, 4: 0.9966996699669967, 5: 0.9966996699669967, 6: 0.9966996699669967, 7: 0.9975247524752475, 8: 0.9991749174917491, 9: 1.0, 10: 1.0, 11: 1.0}
% PAR1: {1: 38.229015717211524, 2: 28.436409371666915, 3: 26.03816102653482, 4: 25.30279303379555, 5: 24.443094614241197, 6: 24.20813993668309, 7: 23.73910186523097, 8: 23.048963546914106, 9: 22.643485328349854, 10: 22.54925479361396, 11: 22.526850434620393}
% PAR10: {1: 118.42703551919172, 2: 64.07997372810256, 3: 52.770834293861554, 4: 43.12457521201337, 5: 42.26487679245902, 6: 42.02992211490091, 7: 37.10543849889434, 8: 27.50440909146856, 9: 22.643485328349854, 10: 22.54925479361396, 11: 22.526850434620393}
% 
% Time used by each solver: {'clasp/2.1.3/h3-n1': 6120.677824, 'clasp/2.1.3/h5-n1': 10891.848098199998, 'clasp/2.1.3/h10-n1': 2223.0970574000003, 'clasp/2.1.3/h8-n1': 23880.06175659999, 'clasp/2.1.3/h6-n1': 25830.462714060024, 'clasp/2.1.3/h1-n1': 9207.991049900002, 'clasp/2.1.3/h4-n1': 5193.995876899999, 'clasp/2.1.3/h7-n1': 2521.6090369999997, 'clasp/2.1.3/h9-n1': 2675.72177, 'clasp/2.1.3/h2-n1': 3743.0770641000004, 'clasp/2.1.3/h11-n1': 1669.0248010999999}
% Optimal Time used by each solver: {'clasp/2.1.3/h3-n1': 50397.57458789999, 'clasp/2.1.3/h5-n1': 1241.84529904, 'clasp/2.1.3/h10-n1': 787.4970792099997, 'clasp/2.1.3/h8-n1': 7284.532217179998, 'clasp/2.1.3/h6-n1': 8413.77887909, 'clasp/2.1.3/h1-n1': 1706.6577620499997, 'clasp/2.1.3/h4-n1': 1324.5864103199995, 'clasp/2.1.3/h7-n1': 599.5658013, 'clasp/2.1.3/h9-n1': 1129.9146371200004, 'clasp/2.1.3/h2-n1': 864.9418335300003, 'clasp/2.1.3/h11-n1': 1362.8489301}
Total time passed:  900.107  seconds
Started solving  /home/misir/Desktop/aslib_data-aslib-v1.1/PREMARSHALLING-ASTAR-2015
% Command line arguments:
% --aslib-dir /home/misir/Desktop/aslib_data-aslib-v1.1/PREMARSHALLING-ASTAR-2015 --model-dir MODEL_DIR --print-times /home/misir/Desktop/liclipse/Workspace/flexfolio-data_filtering-v3/output/17082015161556555077/PREMARSHALLING-ASTAR-2015.csv
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/PREMARSHALLING-ASTAR-2015/description.txt
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/PREMARSHALLING-ASTAR-2015/algorithm_runs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/PREMARSHALLING-ASTAR-2015/feature_values.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/PREMARSHALLING-ASTAR-2015/feature_runstatus.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/PREMARSHALLING-ASTAR-2015/cv.arff
% 1-th repetition: 53,53,53,53,53,53,52,52,53,52 distribution
% Used Feature Steps: orig,lfa1,lfa2
% Used features: avg-l1-top-left-lg-group,top-good-min,container-density,group-same-min,empty-stack-pct,tier-weighted-groups,pct-bottom-pct-on-top,group-same-max,overstowing-2cont-stack-pct,cont-empty-grt-estack,bflb,overstowage-pct,group-same-stdev,tiers,top-good-mean,group-same-mean,stack-tier-ratio,top-good-max,overstowing-stack-pct,left-density,top-good-stdev,stacks
% 
% Check Consistency and Completeness of input data
% Instances: 		 527
% Algorithms: 		 4
% Incomplete Feature Vector: 	 0 (maybe imputed)
% Unsolvable Instances (status): 	 0
% Unsolvable Instances (runtime): 	 0
% Valid Instances: 	 527
% Presolved: 		 0
% Average Feature Costs: 	 0.0000
% Use given CV of 1-th repetition
% >>> 1-th iteration<<<
('sr: ', array([ 117.99381399,   36.49437026]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	474.0 	221.675808143
2 	414.0 	4796.36751266
3 	271.0 	15526.426981
4 	230.0 	18636.6942004
('top_ft_inx_arr: ', array([ 1,  2,  3,  5, 10, 13, 15, 16, 17, 18, 19]))
ft_imp_total =  0.9
ft cv scores:  [ 0.04642536 -0.12916926  0.37427625  0.44475091  0.07470041  0.43490032
  0.14580457 -0.12367917  0.15568359 -0.07419982]
top_ft_inx_arr:  [ 1  2  3  5 10 13 15 16 17 18 19]
(11 out of 22) Features to keep are determined: 1, 2, 3, 5, 10, 13, 15, 16, 17, 18, 19
Oracle performance before algorithm subset selection: num_inst_solved =  474  - par10 =  221.675808143
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.06672195  0.06672195  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.12507118  0.12507118  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 10.  10.  30.  30.] ,  [ 0.06672195  0.90047038  0.90047038  0.12507118] ,  b
leaves:  [0 3 1 2]
alg_portfolio =  [0, 1, 2, 3]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3]  -- alg_inx =  2
Oracle performance after algorithm subset selection: num_inst_solved =  474  - par10 =  221.675808143
(4 out of 4) Algorithms/solvers to keep are determined: 0, 1, 2, 3
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.,
        270.,  271.,  272.,  273.,  274.,  275.,  276.,  277.,  278.,
        279.,  280.,  281.,  282.,  283.,  284.,  285.,  286.,  287.,
        288.,  289.,  290.,  291.,  292.,  293.,  294.,  295.,  296.,
        297.,  298.,  299.,  300.,  301.,  302.,  303.,  304.,  305.,
        306.,  307.,  308.,  309.,  310.,  311.,  312.,  313.,  314.,
        315.,  316.,  317.,  318.,  319.,  320.,  321.,  322.,  323.,
        324.,  325.,  326.,  327.,  328.,  329.,  330.,  331.,  332.,
        333.,  334.,  335.,  336.,  337.,  338.,  339.,  340.,  341.,
        342.,  343.,  344.,  345.,  346.,  347.,  348.,  349.,  350.,
        351.,  352.,  353.,  354.,  355.,  356.,  357.,  358.,  359.,
        360.,  361.,  362.,  363.,  364.,  365.,  366.,  367.,  368.,
        369.,  370.,  371.,  372.,  373.,  374.,  375.,  376.,  377.,
        378.,  379.,  380.,  381.,  382.,  383.,  384.,  385.,  386.,
        387.,  388.,  389.,  390.,  391.,  392.,  393.,  394.,  395.,
        396.,  397.,  398.,  399.,  400.,  401.,  402.,  403.,  404.,
        405.,  406.,  407.,  408.,  409.,  410.,  411.,  412.,  413.,
        414.,  415.,  416.,  417.,  418.,  419.,  420.,  421.,  422.,
        423.,  424.,  425.,  426.,  427.,  428.,  429.,  430.,  431.,
        432.,  433.,  434.,  435.,  436.,  437.,  438.,  439.,  440.,
        441.,  442.,  443.,  444.,  445.,  446.,  447.,  448.,  449.,
        450.,  451.,  452.,  453.,  454.,  455.,  456.,  457.,  458.,
        459.,  460.,  461.,  462.,  463.,  464.,  465.,  466.,  467.,
        468.,  469.,  470.,  471.,  472.,  473.]))
(474 out of 474) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0
% Backup Solver: idastar-symmulgt-transmul
% Input Instances for Training: 474 (-unsolvable)
% Used Instances for Training: 474 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 7702.57 (53 instances)
% >>> 2-th iteration<<<
('sr: ', array([ 117.98984443,   37.17330689]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	474.0 	226.918877785
2 	410.0 	5103.91922996
3 	268.0 	15758.1808861
4 	220.0 	19396.7470084
('top_ft_inx_arr: ', array([ 1,  2,  3,  5, 10, 13, 15, 16, 17, 18, 19]))
ft_imp_total =  0.9
ft cv scores:  [-0.05522739 -0.16842698  0.06855126  0.33933164  0.15242834  0.10681996
  0.31794773  0.01352826  0.15448714 -0.17331597]
top_ft_inx_arr:  [ 1  2  3  5 10 13 15 16 17 18 19]
(11 out of 22) Features to keep are determined: 1, 2, 3, 5, 10, 13, 15, 16, 17, 18, 19
Oracle performance before algorithm subset selection: num_inst_solved =  474  - par10 =  226.918877785
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.00659066  0.00659066  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.09271165  0.09271165  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 10.  10.  30.  30.] ,  [ 0.00659066  0.94953373  0.94953373  0.09271165] ,  b
leaves:  [0 3 1 2]
alg_portfolio =  [0, 1, 2, 3]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3]  -- alg_inx =  2
Oracle performance after algorithm subset selection: num_inst_solved =  474  - par10 =  226.918877785
(4 out of 4) Algorithms/solvers to keep are determined: 0, 1, 2, 3
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.,
        270.,  271.,  272.,  273.,  274.,  275.,  276.,  277.,  278.,
        279.,  280.,  281.,  282.,  283.,  284.,  285.,  286.,  287.,
        288.,  289.,  290.,  291.,  292.,  293.,  294.,  295.,  296.,
        297.,  298.,  299.,  300.,  301.,  302.,  303.,  304.,  305.,
        306.,  307.,  308.,  309.,  310.,  311.,  312.,  313.,  314.,
        315.,  316.,  317.,  318.,  319.,  320.,  321.,  322.,  323.,
        324.,  325.,  326.,  327.,  328.,  329.,  330.,  331.,  332.,
        333.,  334.,  335.,  336.,  337.,  338.,  339.,  340.,  341.,
        342.,  343.,  344.,  345.,  346.,  347.,  348.,  349.,  350.,
        351.,  352.,  353.,  354.,  355.,  356.,  357.,  358.,  359.,
        360.,  361.,  362.,  363.,  364.,  365.,  366.,  367.,  368.,
        369.,  370.,  371.,  372.,  373.,  374.,  375.,  376.,  377.,
        378.,  379.,  380.,  381.,  382.,  383.,  384.,  385.,  386.,
        387.,  388.,  389.,  390.,  391.,  392.,  393.,  394.,  395.,
        396.,  397.,  398.,  399.,  400.,  401.,  402.,  403.,  404.,
        405.,  406.,  407.,  408.,  409.,  410.,  411.,  412.,  413.,
        414.,  415.,  416.,  417.,  418.,  419.,  420.,  421.,  422.,
        423.,  424.,  425.,  426.,  427.,  428.,  429.,  430.,  431.,
        432.,  433.,  434.,  435.,  436.,  437.,  438.,  439.,  440.,
        441.,  442.,  443.,  444.,  445.,  446.,  447.,  448.,  449.,
        450.,  451.,  452.,  453.,  454.,  455.,  456.,  457.,  458.,
        459.,  460.,  461.,  462.,  463.,  464.,  465.,  466.,  467.,
        468.,  469.,  470.,  471.,  472.,  473.]))
(474 out of 474) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0
% Backup Solver: idastar-symmulgt-transmul
% Input Instances for Training: 474 (-unsolvable)
% Used Instances for Training: 474 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 4314.05 (53 instances)
% >>> 3-th iteration<<<
('sr: ', array([ 117.99768794,   37.32136937]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	474.0 	228.950926287
2 	410.0 	5107.99118354
3 	267.0 	15835.4792004
4 	224.0 	19094.9725232
('top_ft_inx_arr: ', array([ 1,  2,  3,  5, 10, 13, 15, 16, 17, 18, 19]))
ft_imp_total =  0.9
ft cv scores:  [ 0.12809244 -0.236955    0.23395578  0.47897297  0.16676861  0.15403874
  0.34896313 -0.25354333 -0.09144383  0.12752571]
top_ft_inx_arr:  [ 1  2  3  5 10 13 15 16 17 18 19]
(11 out of 22) Features to keep are determined: 1, 2, 3, 5, 10, 13, 15, 16, 17, 18, 19
Oracle performance before algorithm subset selection: num_inst_solved =  474  - par10 =  228.950926287
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.00454221  0.00454221  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.09223315  0.09223315  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 10.  10.  30.  30.] ,  [ 0.00454221  0.9498718   0.9498718   0.09223315] ,  b
leaves:  [0 3 1 2]
alg_portfolio =  [0, 1, 2, 3]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3]  -- alg_inx =  2
Oracle performance after algorithm subset selection: num_inst_solved =  474  - par10 =  228.950926287
(4 out of 4) Algorithms/solvers to keep are determined: 0, 1, 2, 3
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.,
        270.,  271.,  272.,  273.,  274.,  275.,  276.,  277.,  278.,
        279.,  280.,  281.,  282.,  283.,  284.,  285.,  286.,  287.,
        288.,  289.,  290.,  291.,  292.,  293.,  294.,  295.,  296.,
        297.,  298.,  299.,  300.,  301.,  302.,  303.,  304.,  305.,
        306.,  307.,  308.,  309.,  310.,  311.,  312.,  313.,  314.,
        315.,  316.,  317.,  318.,  319.,  320.,  321.,  322.,  323.,
        324.,  325.,  326.,  327.,  328.,  329.,  330.,  331.,  332.,
        333.,  334.,  335.,  336.,  337.,  338.,  339.,  340.,  341.,
        342.,  343.,  344.,  345.,  346.,  347.,  348.,  349.,  350.,
        351.,  352.,  353.,  354.,  355.,  356.,  357.,  358.,  359.,
        360.,  361.,  362.,  363.,  364.,  365.,  366.,  367.,  368.,
        369.,  370.,  371.,  372.,  373.,  374.,  375.,  376.,  377.,
        378.,  379.,  380.,  381.,  382.,  383.,  384.,  385.,  386.,
        387.,  388.,  389.,  390.,  391.,  392.,  393.,  394.,  395.,
        396.,  397.,  398.,  399.,  400.,  401.,  402.,  403.,  404.,
        405.,  406.,  407.,  408.,  409.,  410.,  411.,  412.,  413.,
        414.,  415.,  416.,  417.,  418.,  419.,  420.,  421.,  422.,
        423.,  424.,  425.,  426.,  427.,  428.,  429.,  430.,  431.,
        432.,  433.,  434.,  435.,  436.,  437.,  438.,  439.,  440.,
        441.,  442.,  443.,  444.,  445.,  446.,  447.,  448.,  449.,
        450.,  451.,  452.,  453.,  454.,  455.,  456.,  457.,  458.,
        459.,  460.,  461.,  462.,  463.,  464.,  465.,  466.,  467.,
        468.,  469.,  470.,  471.,  472.,  473.]))
(474 out of 474) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0
% Backup Solver: idastar-symmulgt-transmul
% Input Instances for Training: 474 (-unsolvable)
% Used Instances for Training: 474 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 3649.93 (53 instances)
% >>> 4-th iteration<<<
('sr: ', array([ 118.09087186,   37.02593361]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	474.0 	237.993455844
2 	411.0 	5043.84033755
3 	264.0 	16061.7859451
4 	214.0 	19841.1056076
('top_ft_inx_arr: ', array([ 1,  2,  3,  5, 10, 13, 15, 16, 17, 18, 21]))
ft_imp_total =  0.9
ft cv scores:  [-0.07639556 -0.12651856  0.08336158  0.40804029  0.31188186  0.25320869
  0.3215253   0.00345201  0.13260008  0.22452475]
top_ft_inx_arr:  [ 1  2  3  5 10 13 15 16 17 18 21]
(11 out of 22) Features to keep are determined: 1, 2, 3, 5, 10, 13, 15, 16, 17, 18, 21
Oracle performance before algorithm subset selection: num_inst_solved =  474  - par10 =  237.993455844
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.03159079  0.03159079  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.         0.1057992  0.1057992  0.       ] ,  r
plt.plot(xs, ys,  color) =  [ 10.  10.  30.  30.] ,  [ 0.03159079  0.93294538  0.93294538  0.1057992 ] ,  b
leaves:  [0 3 1 2]
alg_portfolio =  [0, 1, 2, 3]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3]  -- alg_inx =  2
Oracle performance after algorithm subset selection: num_inst_solved =  474  - par10 =  237.993455844
(4 out of 4) Algorithms/solvers to keep are determined: 0, 1, 2, 3
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.,
        270.,  271.,  272.,  273.,  274.,  275.,  276.,  277.,  278.,
        279.,  280.,  281.,  282.,  283.,  284.,  285.,  286.,  287.,
        288.,  289.,  290.,  291.,  292.,  293.,  294.,  295.,  296.,
        297.,  298.,  299.,  300.,  301.,  302.,  303.,  304.,  305.,
        306.,  307.,  308.,  309.,  310.,  311.,  312.,  313.,  314.,
        315.,  316.,  317.,  318.,  319.,  320.,  321.,  322.,  323.,
        324.,  325.,  326.,  327.,  328.,  329.,  330.,  331.,  332.,
        333.,  334.,  335.,  336.,  337.,  338.,  339.,  340.,  341.,
        342.,  343.,  344.,  345.,  346.,  347.,  348.,  349.,  350.,
        351.,  352.,  353.,  354.,  355.,  356.,  357.,  358.,  359.,
        360.,  361.,  362.,  363.,  364.,  365.,  366.,  367.,  368.,
        369.,  370.,  371.,  372.,  373.,  374.,  375.,  376.,  377.,
        378.,  379.,  380.,  381.,  382.,  383.,  384.,  385.,  386.,
        387.,  388.,  389.,  390.,  391.,  392.,  393.,  394.,  395.,
        396.,  397.,  398.,  399.,  400.,  401.,  402.,  403.,  404.,
        405.,  406.,  407.,  408.,  409.,  410.,  411.,  412.,  413.,
        414.,  415.,  416.,  417.,  418.,  419.,  420.,  421.,  422.,
        423.,  424.,  425.,  426.,  427.,  428.,  429.,  430.,  431.,
        432.,  433.,  434.,  435.,  436.,  437.,  438.,  439.,  440.,
        441.,  442.,  443.,  444.,  445.,  446.,  447.,  448.,  449.,
        450.,  451.,  452.,  453.,  454.,  455.,  456.,  457.,  458.,
        459.,  460.,  461.,  462.,  463.,  464.,  465.,  466.,  467.,
        468.,  469.,  470.,  471.,  472.,  473.]))
(474 out of 474) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0
% Backup Solver: idastar-symmulgt-transmul
% Input Instances for Training: 474 (-unsolvable)
% Used Instances for Training: 474 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 4849.05 (53 instances)
% >>> 5-th iteration<<<
('sr: ', array([ 117.87037861,   37.45145   ]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	474.0 	223.600481118
2 	411.0 	5036.63503165
3 	266.0 	15901.089943
4 	221.0 	19311.1150253
('top_ft_inx_arr: ', array([ 1,  2,  3,  5, 10, 13, 15, 16, 17, 18, 19]))
ft_imp_total =  0.9
ft cv scores:  [ 0.17654805  0.01464999  0.21549207  0.49901665  0.08104071  0.37729143
  0.1730655  -0.33403368 -0.09179262 -0.13703847]
top_ft_inx_arr:  [ 1  2  3  5 10 13 15 16 17 18 19]
(11 out of 22) Features to keep are determined: 1, 2, 3, 5, 10, 13, 15, 16, 17, 18, 19
Oracle performance before algorithm subset selection: num_inst_solved =  474  - par10 =  223.600481118
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.00533935  0.00533935  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.07446514  0.07446514  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 10.  10.  30.  30.] ,  [ 0.00533935  0.95990428  0.95990428  0.07446514] ,  b
leaves:  [0 3 1 2]
alg_portfolio =  [0, 1, 2, 3]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3]  -- alg_inx =  2
Oracle performance after algorithm subset selection: num_inst_solved =  474  - par10 =  223.600481118
(4 out of 4) Algorithms/solvers to keep are determined: 0, 1, 2, 3
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.,
        270.,  271.,  272.,  273.,  274.,  275.,  276.,  277.,  278.,
        279.,  280.,  281.,  282.,  283.,  284.,  285.,  286.,  287.,
        288.,  289.,  290.,  291.,  292.,  293.,  294.,  295.,  296.,
        297.,  298.,  299.,  300.,  301.,  302.,  303.,  304.,  305.,
        306.,  307.,  308.,  309.,  310.,  311.,  312.,  313.,  314.,
        315.,  316.,  317.,  318.,  319.,  320.,  321.,  322.,  323.,
        324.,  325.,  326.,  327.,  328.,  329.,  330.,  331.,  332.,
        333.,  334.,  335.,  336.,  337.,  338.,  339.,  340.,  341.,
        342.,  343.,  344.,  345.,  346.,  347.,  348.,  349.,  350.,
        351.,  352.,  353.,  354.,  355.,  356.,  357.,  358.,  359.,
        360.,  361.,  362.,  363.,  364.,  365.,  366.,  367.,  368.,
        369.,  370.,  371.,  372.,  373.,  374.,  375.,  376.,  377.,
        378.,  379.,  380.,  381.,  382.,  383.,  384.,  385.,  386.,
        387.,  388.,  389.,  390.,  391.,  392.,  393.,  394.,  395.,
        396.,  397.,  398.,  399.,  400.,  401.,  402.,  403.,  404.,
        405.,  406.,  407.,  408.,  409.,  410.,  411.,  412.,  413.,
        414.,  415.,  416.,  417.,  418.,  419.,  420.,  421.,  422.,
        423.,  424.,  425.,  426.,  427.,  428.,  429.,  430.,  431.,
        432.,  433.,  434.,  435.,  436.,  437.,  438.,  439.,  440.,
        441.,  442.,  443.,  444.,  445.,  446.,  447.,  448.,  449.,
        450.,  451.,  452.,  453.,  454.,  455.,  456.,  457.,  458.,
        459.,  460.,  461.,  462.,  463.,  464.,  465.,  466.,  467.,
        468.,  469.,  470.,  471.,  472.,  473.]))
(474 out of 474) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0
% Backup Solver: idastar-symmulgt-transmul
% Input Instances for Training: 474 (-unsolvable)
% Used Instances for Training: 474 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 3584.94 (53 instances)
% >>> 6-th iteration<<<
('sr: ', array([ 117.77751546,   36.70094781]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	474.0 	222.486384114
2 	415.0 	4728.55730802
3 	269.0 	15683.4870084
4 	221.0 	19316.6482384
('top_ft_inx_arr: ', array([ 1,  2,  3,  5, 10, 13, 15, 16, 17, 18, 19]))
ft_imp_total =  0.9
ft cv scores:  [  9.66929499e-02  -2.26125522e-01   2.62844251e-01   3.64128137e-01
   2.91981534e-04   1.76785896e-01   1.65503028e-01  -5.96248008e-01
  -7.24216829e-02  -9.02420671e-02]
top_ft_inx_arr:  [ 1  2  3  5 10 13 15 16 17 18 19]
(11 out of 22) Features to keep are determined: 1, 2, 3, 5, 10, 13, 15, 16, 17, 18, 19
Oracle performance before algorithm subset selection: num_inst_solved =  474  - par10 =  222.486384114
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.00864047  0.00864047  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.08741505  0.08741505  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 10.  10.  30.  30.] ,  [ 0.00864047  0.95106362  0.95106362  0.08741505] ,  b
leaves:  [0 3 1 2]
alg_portfolio =  [0, 1, 2, 3]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3]  -- alg_inx =  2
Oracle performance after algorithm subset selection: num_inst_solved =  474  - par10 =  222.486384114
(4 out of 4) Algorithms/solvers to keep are determined: 0, 1, 2, 3
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.,
        270.,  271.,  272.,  273.,  274.,  275.,  276.,  277.,  278.,
        279.,  280.,  281.,  282.,  283.,  284.,  285.,  286.,  287.,
        288.,  289.,  290.,  291.,  292.,  293.,  294.,  295.,  296.,
        297.,  298.,  299.,  300.,  301.,  302.,  303.,  304.,  305.,
        306.,  307.,  308.,  309.,  310.,  311.,  312.,  313.,  314.,
        315.,  316.,  317.,  318.,  319.,  320.,  321.,  322.,  323.,
        324.,  325.,  326.,  327.,  328.,  329.,  330.,  331.,  332.,
        333.,  334.,  335.,  336.,  337.,  338.,  339.,  340.,  341.,
        342.,  343.,  344.,  345.,  346.,  347.,  348.,  349.,  350.,
        351.,  352.,  353.,  354.,  355.,  356.,  357.,  358.,  359.,
        360.,  361.,  362.,  363.,  364.,  365.,  366.,  367.,  368.,
        369.,  370.,  371.,  372.,  373.,  374.,  375.,  376.,  377.,
        378.,  379.,  380.,  381.,  382.,  383.,  384.,  385.,  386.,
        387.,  388.,  389.,  390.,  391.,  392.,  393.,  394.,  395.,
        396.,  397.,  398.,  399.,  400.,  401.,  402.,  403.,  404.,
        405.,  406.,  407.,  408.,  409.,  410.,  411.,  412.,  413.,
        414.,  415.,  416.,  417.,  418.,  419.,  420.,  421.,  422.,
        423.,  424.,  425.,  426.,  427.,  428.,  429.,  430.,  431.,
        432.,  433.,  434.,  435.,  436.,  437.,  438.,  439.,  440.,
        441.,  442.,  443.,  444.,  445.,  446.,  447.,  448.,  449.,
        450.,  451.,  452.,  453.,  454.,  455.,  456.,  457.,  458.,
        459.,  460.,  461.,  462.,  463.,  464.,  465.,  466.,  467.,
        468.,  469.,  470.,  471.,  472.,  473.]))
(474 out of 474) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0
% Backup Solver: idastar-symmulgt-transmul
% Input Instances for Training: 474 (-unsolvable)
% Used Instances for Training: 474 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 4330.21 (53 instances)
% >>> 7-th iteration<<<
('sr: ', array([ 118.28909842,   37.27980885]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	475.0 	233.748019095
2 	411.0 	5090.88903789
3 	264.0 	16097.1324316
4 	219.0 	19496.7080779
('top_ft_inx_arr: ', array([ 1,  2,  3,  5,  9, 10, 13, 15, 16, 18, 19]))
ft_imp_total =  0.9
ft cv scores:  [-0.09507142 -0.12045669  0.16099937  0.50610857  0.03894298  0.28338722
  0.05295895 -0.02019736 -0.00836797  0.1563048 ]
top_ft_inx_arr:  [ 1  2  3  5  9 10 13 15 16 18 19]
(11 out of 22) Features to keep are determined: 1, 2, 3, 5, 9, 10, 13, 15, 16, 18, 19
Oracle performance before algorithm subset selection: num_inst_solved =  475  - par10 =  233.748019095
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.02766823  0.02766823  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.         0.1288632  0.1288632  0.       ] ,  r
plt.plot(xs, ys,  color) =  [ 10.  10.  30.  30.] ,  [ 0.02766823  0.92249135  0.92249135  0.1288632 ] ,  b
leaves:  [0 3 1 2]
alg_portfolio =  [0, 1, 2, 3]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3]  -- alg_inx =  2
Oracle performance after algorithm subset selection: num_inst_solved =  475  - par10 =  233.748019095
(4 out of 4) Algorithms/solvers to keep are determined: 0, 1, 2, 3
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.,
        270.,  271.,  272.,  273.,  274.,  275.,  276.,  277.,  278.,
        279.,  280.,  281.,  282.,  283.,  284.,  285.,  286.,  287.,
        288.,  289.,  290.,  291.,  292.,  293.,  294.,  295.,  296.,
        297.,  298.,  299.,  300.,  301.,  302.,  303.,  304.,  305.,
        306.,  307.,  308.,  309.,  310.,  311.,  312.,  313.,  314.,
        315.,  316.,  317.,  318.,  319.,  320.,  321.,  322.,  323.,
        324.,  325.,  326.,  327.,  328.,  329.,  330.,  331.,  332.,
        333.,  334.,  335.,  336.,  337.,  338.,  339.,  340.,  341.,
        342.,  343.,  344.,  345.,  346.,  347.,  348.,  349.,  350.,
        351.,  352.,  353.,  354.,  355.,  356.,  357.,  358.,  359.,
        360.,  361.,  362.,  363.,  364.,  365.,  366.,  367.,  368.,
        369.,  370.,  371.,  372.,  373.,  374.,  375.,  376.,  377.,
        378.,  379.,  380.,  381.,  382.,  383.,  384.,  385.,  386.,
        387.,  388.,  389.,  390.,  391.,  392.,  393.,  394.,  395.,
        396.,  397.,  398.,  399.,  400.,  401.,  402.,  403.,  404.,
        405.,  406.,  407.,  408.,  409.,  410.,  411.,  412.,  413.,
        414.,  415.,  416.,  417.,  418.,  419.,  420.,  421.,  422.,
        423.,  424.,  425.,  426.,  427.,  428.,  429.,  430.,  431.,
        432.,  433.,  434.,  435.,  436.,  437.,  438.,  439.,  440.,
        441.,  442.,  443.,  444.,  445.,  446.,  447.,  448.,  449.,
        450.,  451.,  452.,  453.,  454.,  455.,  456.,  457.,  458.,
        459.,  460.,  461.,  462.,  463.,  464.,  465.,  466.,  467.,
        468.,  469.,  470.,  471.,  472.,  473.,  474.]))
(475 out of 475) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0
% Backup Solver: idastar-symmulgt-transmul
% Input Instances for Training: 475 (-unsolvable)
% Used Instances for Training: 475 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 5806.73 (52 instances)
% >>> 8-th iteration<<<
('sr: ', array([ 118.17436765,   37.56215919]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	475.0 	235.079825389
2 	412.0 	5027.13592211
3 	263.0 	16172.3680821
4 	222.0 	19272.3926947
('top_ft_inx_arr: ', array([ 1,  2,  3,  5,  9, 10, 13, 15, 16, 17, 18]))
ft_imp_total =  0.9
ft cv scores:  [ 0.08556183 -0.11278234  0.17255138  0.49676193  0.12993715  0.13490702
  0.48798239 -0.2632745   0.35325745  0.0509443 ]
top_ft_inx_arr:  [ 1  2  3  5  9 10 13 15 16 17 18]
(11 out of 22) Features to keep are determined: 1, 2, 3, 5, 9, 10, 13, 15, 16, 17, 18
Oracle performance before algorithm subset selection: num_inst_solved =  475  - par10 =  235.079825389
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.00834498  0.00834498  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.09251016  0.09251016  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 10.  10.  30.  30.] ,  [ 0.00834498  0.94874162  0.94874162  0.09251016] ,  b
leaves:  [0 3 1 2]
alg_portfolio =  [0, 1, 2, 3]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3]  -- alg_inx =  2
Oracle performance after algorithm subset selection: num_inst_solved =  475  - par10 =  235.079825389
(4 out of 4) Algorithms/solvers to keep are determined: 0, 1, 2, 3
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.,
        270.,  271.,  272.,  273.,  274.,  275.,  276.,  277.,  278.,
        279.,  280.,  281.,  282.,  283.,  284.,  285.,  286.,  287.,
        288.,  289.,  290.,  291.,  292.,  293.,  294.,  295.,  296.,
        297.,  298.,  299.,  300.,  301.,  302.,  303.,  304.,  305.,
        306.,  307.,  308.,  309.,  310.,  311.,  312.,  313.,  314.,
        315.,  316.,  317.,  318.,  319.,  320.,  321.,  322.,  323.,
        324.,  325.,  326.,  327.,  328.,  329.,  330.,  331.,  332.,
        333.,  334.,  335.,  336.,  337.,  338.,  339.,  340.,  341.,
        342.,  343.,  344.,  345.,  346.,  347.,  348.,  349.,  350.,
        351.,  352.,  353.,  354.,  355.,  356.,  357.,  358.,  359.,
        360.,  361.,  362.,  363.,  364.,  365.,  366.,  367.,  368.,
        369.,  370.,  371.,  372.,  373.,  374.,  375.,  376.,  377.,
        378.,  379.,  380.,  381.,  382.,  383.,  384.,  385.,  386.,
        387.,  388.,  389.,  390.,  391.,  392.,  393.,  394.,  395.,
        396.,  397.,  398.,  399.,  400.,  401.,  402.,  403.,  404.,
        405.,  406.,  407.,  408.,  409.,  410.,  411.,  412.,  413.,
        414.,  415.,  416.,  417.,  418.,  419.,  420.,  421.,  422.,
        423.,  424.,  425.,  426.,  427.,  428.,  429.,  430.,  431.,
        432.,  433.,  434.,  435.,  436.,  437.,  438.,  439.,  440.,
        441.,  442.,  443.,  444.,  445.,  446.,  447.,  448.,  449.,
        450.,  451.,  452.,  453.,  454.,  455.,  456.,  457.,  458.,
        459.,  460.,  461.,  462.,  463.,  464.,  465.,  466.,  467.,
        468.,  469.,  470.,  471.,  472.,  473.,  474.]))
(475 out of 475) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0
% Backup Solver: idastar-symmulgt-transmul
% Input Instances for Training: 475 (-unsolvable)
% Used Instances for Training: 475 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 6398.81 (52 instances)
% >>> 9-th iteration<<<
('sr: ', array([ 118.02680395,   37.33043516]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	474.0 	229.878704747
2 	410.0 	5111.95543249
3 	264.0 	16064.1933165
4 	217.0 	19616.512211
('top_ft_inx_arr: ', array([ 1,  2,  3,  5, 10, 13, 15, 16, 17, 18, 19]))
ft_imp_total =  0.9
ft cv scores:  [ 0.09697186  0.22077851  0.06499856  0.48881308  0.11993197  0.31586203
  0.20286426 -0.59110705  0.18202775 -0.3465253 ]
top_ft_inx_arr:  [ 1  2  3  5 10 13 15 16 17 18 19]
(11 out of 22) Features to keep are determined: 1, 2, 3, 5, 10, 13, 15, 16, 17, 18, 19
Oracle performance before algorithm subset selection: num_inst_solved =  474  - par10 =  229.878704747
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.01774389  0.01774389  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.08495843  0.08495843  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 10.  10.  30.  30.] ,  [ 0.01774389  0.9473881   0.9473881   0.08495843] ,  b
leaves:  [0 3 1 2]
alg_portfolio =  [0, 1, 2, 3]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3]  -- alg_inx =  2
Oracle performance after algorithm subset selection: num_inst_solved =  474  - par10 =  229.878704747
(4 out of 4) Algorithms/solvers to keep are determined: 0, 1, 2, 3
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.,
        270.,  271.,  272.,  273.,  274.,  275.,  276.,  277.,  278.,
        279.,  280.,  281.,  282.,  283.,  284.,  285.,  286.,  287.,
        288.,  289.,  290.,  291.,  292.,  293.,  294.,  295.,  296.,
        297.,  298.,  299.,  300.,  301.,  302.,  303.,  304.,  305.,
        306.,  307.,  308.,  309.,  310.,  311.,  312.,  313.,  314.,
        315.,  316.,  317.,  318.,  319.,  320.,  321.,  322.,  323.,
        324.,  325.,  326.,  327.,  328.,  329.,  330.,  331.,  332.,
        333.,  334.,  335.,  336.,  337.,  338.,  339.,  340.,  341.,
        342.,  343.,  344.,  345.,  346.,  347.,  348.,  349.,  350.,
        351.,  352.,  353.,  354.,  355.,  356.,  357.,  358.,  359.,
        360.,  361.,  362.,  363.,  364.,  365.,  366.,  367.,  368.,
        369.,  370.,  371.,  372.,  373.,  374.,  375.,  376.,  377.,
        378.,  379.,  380.,  381.,  382.,  383.,  384.,  385.,  386.,
        387.,  388.,  389.,  390.,  391.,  392.,  393.,  394.,  395.,
        396.,  397.,  398.,  399.,  400.,  401.,  402.,  403.,  404.,
        405.,  406.,  407.,  408.,  409.,  410.,  411.,  412.,  413.,
        414.,  415.,  416.,  417.,  418.,  419.,  420.,  421.,  422.,
        423.,  424.,  425.,  426.,  427.,  428.,  429.,  430.,  431.,
        432.,  433.,  434.,  435.,  436.,  437.,  438.,  439.,  440.,
        441.,  442.,  443.,  444.,  445.,  446.,  447.,  448.,  449.,
        450.,  451.,  452.,  453.,  454.,  455.,  456.,  457.,  458.,
        459.,  460.,  461.,  462.,  463.,  464.,  465.,  466.,  467.,
        468.,  469.,  470.,  471.,  472.,  473.]))
(474 out of 474) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0
% Backup Solver: idastar-symmulgt-transmul
% Input Instances for Training: 474 (-unsolvable)
% Used Instances for Training: 474 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 2178.87 (53 instances)
% >>> 10-th iteration<<<
('sr: ', array([ 117.91818872,   36.81726665]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	475.0 	215.711564358
2 	418.0 	4557.11788211
3 	268.0 	15800.9460779
4 	217.0 	19645.6142568
('top_ft_inx_arr: ', array([ 1,  2,  3,  5,  9, 10, 13, 15, 16, 17, 18]))
ft_imp_total =  0.9
ft cv scores:  [ 0.19472843 -0.02882489  0.26273507  0.63091412  0.1790895   0.39825859
  0.21297725 -0.38790027  0.08859543 -0.12020747]
top_ft_inx_arr:  [ 1  2  3  5  9 10 13 15 16 17 18]
(11 out of 22) Features to keep are determined: 1, 2, 3, 5, 9, 10, 13, 15, 16, 17, 18
Oracle performance before algorithm subset selection: num_inst_solved =  475  - par10 =  215.711564358
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.00996853  0.00996853  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 25.  25.  35.  35.] ,  [ 0.          0.08818933  0.08818933  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 10.  10.  30.  30.] ,  [ 0.00996853  0.95041339  0.95041339  0.08818933] ,  b
leaves:  [0 3 1 2]
alg_portfolio =  [0, 1, 2, 3]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3]  -- alg_inx =  2
Oracle performance after algorithm subset selection: num_inst_solved =  475  - par10 =  215.711564358
(4 out of 4) Algorithms/solvers to keep are determined: 0, 1, 2, 3
('inst_per_cls : ', array([   0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,
          9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,
         18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   26.,
         27.,   28.,   29.,   30.,   31.,   32.,   33.,   34.,   35.,
         36.,   37.,   38.,   39.,   40.,   41.,   42.,   43.,   44.,
         45.,   46.,   47.,   48.,   49.,   50.,   51.,   52.,   53.,
         54.,   55.,   56.,   57.,   58.,   59.,   60.,   61.,   62.,
         63.,   64.,   65.,   66.,   67.,   68.,   69.,   70.,   71.,
         72.,   73.,   74.,   75.,   76.,   77.,   78.,   79.,   80.,
         81.,   82.,   83.,   84.,   85.,   86.,   87.,   88.,   89.,
         90.,   91.,   92.,   93.,   94.,   95.,   96.,   97.,   98.,
         99.,  100.,  101.,  102.,  103.,  104.,  105.,  106.,  107.,
        108.,  109.,  110.,  111.,  112.,  113.,  114.,  115.,  116.,
        117.,  118.,  119.,  120.,  121.,  122.,  123.,  124.,  125.,
        126.,  127.,  128.,  129.,  130.,  131.,  132.,  133.,  134.,
        135.,  136.,  137.,  138.,  139.,  140.,  141.,  142.,  143.,
        144.,  145.,  146.,  147.,  148.,  149.,  150.,  151.,  152.,
        153.,  154.,  155.,  156.,  157.,  158.,  159.,  160.,  161.,
        162.,  163.,  164.,  165.,  166.,  167.,  168.,  169.,  170.,
        171.,  172.,  173.,  174.,  175.,  176.,  177.,  178.,  179.,
        180.,  181.,  182.,  183.,  184.,  185.,  186.,  187.,  188.,
        189.,  190.,  191.,  192.,  193.,  194.,  195.,  196.,  197.,
        198.,  199.,  200.,  201.,  202.,  203.,  204.,  205.,  206.,
        207.,  208.,  209.,  210.,  211.,  212.,  213.,  214.,  215.,
        216.,  217.,  218.,  219.,  220.,  221.,  222.,  223.,  224.,
        225.,  226.,  227.,  228.,  229.,  230.,  231.,  232.,  233.,
        234.,  235.,  236.,  237.,  238.,  239.,  240.,  241.,  242.,
        243.,  244.,  245.,  246.,  247.,  248.,  249.,  250.,  251.,
        252.,  253.,  254.,  255.,  256.,  257.,  258.,  259.,  260.,
        261.,  262.,  263.,  264.,  265.,  266.,  267.,  268.,  269.,
        270.,  271.,  272.,  273.,  274.,  275.,  276.,  277.,  278.,
        279.,  280.,  281.,  282.,  283.,  284.,  285.,  286.,  287.,
        288.,  289.,  290.,  291.,  292.,  293.,  294.,  295.,  296.,
        297.,  298.,  299.,  300.,  301.,  302.,  303.,  304.,  305.,
        306.,  307.,  308.,  309.,  310.,  311.,  312.,  313.,  314.,
        315.,  316.,  317.,  318.,  319.,  320.,  321.,  322.,  323.,
        324.,  325.,  326.,  327.,  328.,  329.,  330.,  331.,  332.,
        333.,  334.,  335.,  336.,  337.,  338.,  339.,  340.,  341.,
        342.,  343.,  344.,  345.,  346.,  347.,  348.,  349.,  350.,
        351.,  352.,  353.,  354.,  355.,  356.,  357.,  358.,  359.,
        360.,  361.,  362.,  363.,  364.,  365.,  366.,  367.,  368.,
        369.,  370.,  371.,  372.,  373.,  374.,  375.,  376.,  377.,
        378.,  379.,  380.,  381.,  382.,  383.,  384.,  385.,  386.,
        387.,  388.,  389.,  390.,  391.,  392.,  393.,  394.,  395.,
        396.,  397.,  398.,  399.,  400.,  401.,  402.,  403.,  404.,
        405.,  406.,  407.,  408.,  409.,  410.,  411.,  412.,  413.,
        414.,  415.,  416.,  417.,  418.,  419.,  420.,  421.,  422.,
        423.,  424.,  425.,  426.,  427.,  428.,  429.,  430.,  431.,
        432.,  433.,  434.,  435.,  436.,  437.,  438.,  439.,  440.,
        441.,  442.,  443.,  444.,  445.,  446.,  447.,  448.,  449.,
        450.,  451.,  452.,  453.,  454.,  455.,  456.,  457.,  458.,
        459.,  460.,  461.,  462.,  463.,  464.,  465.,  466.,  467.,
        468.,  469.,  470.,  471.,  472.,  473.,  474.]))
(475 out of 475) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0
% Backup Solver: idastar-symmulgt-transmul
% Input Instances for Training: 475 (-unsolvable)
% Used Instances for Training: 475 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 3250.43 (52 instances)
% 
%  >>> Instances: 527 <<<
%  >>> Oracle Evaluation (w/o unsolved) <<<
% 
% Unsolved (not by any algorithm and not by feature computation): 0
% PAR1 time: 227.604769 (227.604769)
% Par10 time: 227.604769 (227.604769)
% #TOs: 0 (0)
% 
%  >>> Cross Fold Evaluation <<<
% 
% Presolved: 0
% >>>With Unsolvable Instances
% Timeouts per #Thread: {1: 64, 2: 18, 3: 7, 4: 0}
% Solved (perc) per #Thread: {1: 0.8785578747628083, 2: 0.9658444022770398, 3: 0.9867172675521821, 4: 1.0}
% AVG per #Thread: {1: 668.7294763946876, 2: 356.5382733776082, 3: 282.09890905123285, 4: 227.60476863377627}
% PAR10 per #Thread: {1: 4603.454334079697, 2: 1463.1796396015172, 3: 712.4594403605307, 4: 227.60476863377627}
% >>>Without Unsolved Instances (depends on pre-solved in feature groups)
% Timeouts: {1: 64, 2: 18, 3: 7, 4: 0}
% Solved (perc): {1: 0.8785578747628083, 2: 0.9658444022770398, 3: 0.9867172675521821, 4: 1.0}
% PAR1: {1: 668.7294763946876, 2: 356.5382733776082, 3: 282.09890905123285, 4: 227.60476863377627}
% PAR10: {1: 4603.454334079697, 2: 1463.1796396015172, 3: 712.4594403605307, 4: 227.60476863377627}
% 
% Time used by each solver: {'astar-symmulgt-transmul': 91842.04200000002, 'idastar-symmulgt-transmul': 92811.56606000004, 'idastar-symmullt-transmul': 111652.24600000004, 'astar-symmullt-transmul': 56114.57999999999}
% Optimal Time used by each solver: {'astar-symmulgt-transmul': 1368.003, 'idastar-symmulgt-transmul': 30145.18607000003, 'idastar-symmullt-transmul': 85399.83600000001, 'astar-symmullt-transmul': 3034.6879999999996}
Total time passed:  59.145  seconds
Started solving  /home/misir/Desktop/aslib_data-aslib-v1.1/QBF-2011
% Command line arguments:
% --aslib-dir /home/misir/Desktop/aslib_data-aslib-v1.1/QBF-2011 --model-dir MODEL_DIR --print-times /home/misir/Desktop/liclipse/Workspace/flexfolio-data_filtering-v3/output/17082015161556555077/QBF-2011.csv
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/QBF-2011/description.txt
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/QBF-2011/algorithm_runs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/QBF-2011/feature_values.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/QBF-2011/feature_runstatus.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/QBF-2011/cv.arff
% 1-th repetition: 136,137,137,137,137,137,137,137,137,136 distribution
% Used Feature Steps: all_feats
% Used features: EXIST_VARS_PER_SET,POS_HORN,EXIST_VARS,FORALL_VARS,W_OCCS_FORALL_NO_PER_VAR,W_OCCS_POS_NO_PER_VAR,EXIST_LIT_PER_CLAUSE,NEG_HORN,WOCCN_WOCC,OCCP_OCCN,OCCEN_OCC,FORALL_POS_LITS_PER_CLAUSE,OCCFP_OCCFN,W_OCCS_FORALL_POS_NO_PER_VAR,OCCS_POS_NO_PER_VAR,TERNARY_MORE_CLAUSES,FORALL_LIT_PER_CLAUSE,LITEN_LITE,TERMORE_CLAUSE,LITEN_LITN,EXIST_SET,LITEP_LIT,LITFP_LITFN,OCCE_OCC,FORALL_NEG_LITS_PER_CLAUSE,FORALL_SET,TOTAL_SET,LITN_LIT,LITERALS,OCCS_FORALL_POS_NO_PER_VAR,OCCS_FORALL_NO_PER_VAR,NEG_HORN_CLAUSE,WOCCFN_WOCCN,W_PRODUCTS,TOTAL_VARS,LITFN_LIT,WOCCEP_WOCC,BINARY_CLAUSES,WOCCEP_WOCCE,UNARY_CLAUSES,OCCEN_OCCN,OCCFP_OCCF,WOCCFN_WOCC,CLAUSES,WOCCEP_WOCCP,OCCEN_OCCE
% 
% Check Consistency and Completeness of input data
% Instances: 		 1368
% Algorithms: 		 5
% Incomplete Feature Vector: 	 0 (maybe imputed)
% Unsolvable Instances (status): 	 314
% Unsolvable Instances (runtime): 	 314
% Valid Instances: 	 1054
% Presolved: 		 0
% Average Feature Costs: 	 0.0000
% Use given CV of 1-th repetition
% >>> 1-th iteration<<<
('sr: ', array([ 306.19784113,   63.85838771]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	941.0 	90.4895862912
2 	706.0 	9195.83299724
3 	526.0 	16025.8129226
4 	380.0 	21615.3804357
5 	213.0 	27872.2202763
('top_ft_inx_arr: ', array([ 1,  3,  4,  8, 10, 11, 15, 16, 18, 19, 20, 21, 23, 24, 26, 31, 33,
       36, 38, 39, 40, 41, 43]))
ft_imp_total =  0.9
ft cv scores:  [ 0.59598439  0.59362788  0.74734664  0.62917564  0.61386074  0.53474652
  0.5503134   0.6272504   0.63642133  0.51106217]
top_ft_inx_arr:  [ 1  3  4  8 10 11 15 16 18 19 20 21 23 24 26 31 33 36 38 39 40 41 43]
(23 out of 46) Features to keep are determined: 1, 3, 4, 8, 10, 11, 15, 16, 18, 19, 20, 21, 23, 24, 26, 31, 33, 36, 38, 39, 40, 41, 43
Oracle performance before algorithm subset selection: num_inst_solved =  941  - par10 =  90.4895862912
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.21567416  0.21567416  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.06097688  0.06097688  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 25.  25.  40.  40.] ,  [ 0.          0.23879094  0.23879094  0.06097688] ,  r
plt.plot(xs, ys,  color) =  [ 10.   10.   32.5  32.5] ,  [ 0.21567416  0.61525941  0.61525941  0.23879094] ,  b
leaves:  [0 2 1 3 4]
alg_portfolio =  [0, 1, 2, 3, 4]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  2
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  4
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  1
Oracle performance after algorithm subset selection: num_inst_solved =  941  - par10 =  90.4895862912
(5 out of 5) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.22900000e+03,   1.23000000e+03,   1.23100000e+03]))
(1232 out of 1232) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0
% Backup Solver: sKizzo
% Input Instances for Training: 1232 (-unsolvable)
% Used Instances for Training: 1232 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 7015.82 (136 instances)
% >>> 2-th iteration<<<
('sr: ', array([ 304.76295151,   64.74427058]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	958.0 	97.2825895094
2 	709.0 	9546.88717164
3 	532.0 	16161.9290399
4 	384.0 	21713.5218267
5 	218.0 	27829.2006576
('top_ft_inx_arr: ', array([ 1,  3,  4,  8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 24, 26, 33,
       36, 38, 39, 40, 41, 43]))
ft_imp_total =  0.9
ft cv scores:  [ 0.62128475  0.67205232  0.74382717  0.62783546  0.67620536  0.68872533
  0.56381647  0.6779656   0.61591237  0.39315828]
top_ft_inx_arr:  [ 1  3  4  8 10 11 12 15 16 18 19 20 21 23 24 26 33 36 38 39 40 41 43]
(23 out of 46) Features to keep are determined: 1, 3, 4, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 24, 26, 33, 36, 38, 39, 40, 41, 43
Oracle performance before algorithm subset selection: num_inst_solved =  958  - par10 =  97.2825895094
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.22697215  0.22697215  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.15317912  0.15317912  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 25.  25.  40.  40.] ,  [ 0.          0.22762717  0.22762717  0.15317912] ,  r
plt.plot(xs, ys,  color) =  [ 10.   10.   32.5  32.5] ,  [ 0.22697215  0.57455498  0.57455498  0.22762717] ,  b
leaves:  [0 2 1 3 4]
alg_portfolio =  [0, 1, 2, 3, 4]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  2
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  4
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  1
Oracle performance after algorithm subset selection: num_inst_solved =  958  - par10 =  97.2825895094
(5 out of 5) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.22800000e+03,   1.22900000e+03,   1.23000000e+03]))
(1231 out of 1231) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0
% Backup Solver: sKizzo
% Input Instances for Training: 1231 (-unsolvable)
% Used Instances for Training: 1231 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 11676.03 (137 instances)
% >>> 3-th iteration<<<
('sr: ', array([ 304.67964644,   64.37129072]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	953.0 	94.8909136936
2 	716.0 	9141.65201513
3 	534.0 	15979.49723
4 	389.0 	21458.2376915
5 	218.0 	27783.4039874
('top_ft_inx_arr: ', array([ 1,  3,  4,  8, 10, 11, 13, 15, 16, 18, 19, 20, 21, 23, 24, 26, 33,
       36, 38, 39, 40, 41, 43]))
ft_imp_total =  0.9
ft cv scores:  [ 0.69805847  0.68602285  0.6235403   0.63943984  0.6408761   0.58082667
  0.62937808  0.683032    0.56422308  0.51808404]
top_ft_inx_arr:  [ 1  3  4  8 10 11 13 15 16 18 19 20 21 23 24 26 33 36 38 39 40 41 43]
(23 out of 46) Features to keep are determined: 1, 3, 4, 8, 10, 11, 13, 15, 16, 18, 19, 20, 21, 23, 24, 26, 33, 36, 38, 39, 40, 41, 43
Oracle performance before algorithm subset selection: num_inst_solved =  953  - par10 =  94.8909136936
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.21400842  0.21400842  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.10772558  0.10772558  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 25.  25.  40.  40.] ,  [ 0.          0.2452834   0.2452834   0.10772558] ,  r
plt.plot(xs, ys,  color) =  [ 10.   10.   32.5  32.5] ,  [ 0.21400842  0.59082319  0.59082319  0.2452834 ] ,  b
leaves:  [0 2 1 3 4]
alg_portfolio =  [0, 1, 2, 3, 4]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  2
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  4
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  1
Oracle performance after algorithm subset selection: num_inst_solved =  953  - par10 =  94.8909136936
(5 out of 5) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.22800000e+03,   1.22900000e+03,   1.23000000e+03]))
(1231 out of 1231) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0
% Backup Solver: sKizzo
% Input Instances for Training: 1231 (-unsolvable)
% Used Instances for Training: 1231 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 10649.39 (137 instances)
% >>> 4-th iteration<<<
('sr: ', array([ 306.22680964,   63.89211185]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	942.0 	97.37293069
2 	702.0 	9359.16041443
3 	522.0 	16200.260446
4 	377.0 	21743.4110085
5 	209.0 	28032.8940127
('top_ft_inx_arr: ', array([ 1,  2,  3,  4,  8, 10, 11, 12, 15, 16, 19, 20, 21, 23, 24, 26, 33,
       36, 38, 39, 41, 42, 43]))
ft_imp_total =  0.9
ft cv scores:  [ 0.51905592  0.69125866  0.72054332  0.60845227  0.62170464  0.663271
  0.6263622   0.6391884   0.54995763  0.45842055]
top_ft_inx_arr:  [ 1  2  3  4  8 10 11 12 15 16 19 20 21 23 24 26 33 36 38 39 41 42 43]
(23 out of 46) Features to keep are determined: 1, 2, 3, 4, 8, 10, 11, 12, 15, 16, 19, 20, 21, 23, 24, 26, 33, 36, 38, 39, 41, 42, 43
Oracle performance before algorithm subset selection: num_inst_solved =  942  - par10 =  97.37293069
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.20263157  0.20263157  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.         0.0664653  0.0664653  0.       ] ,  r
plt.plot(xs, ys,  color) =  [ 25.  25.  40.  40.] ,  [ 0.          0.24684199  0.24684199  0.0664653 ] ,  r
plt.plot(xs, ys,  color) =  [ 10.   10.   32.5  32.5] ,  [ 0.20263157  0.61392189  0.61392189  0.24684199] ,  b
leaves:  [0 2 1 3 4]
alg_portfolio =  [0, 1, 2, 3, 4]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  2
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  4
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  1
Oracle performance after algorithm subset selection: num_inst_solved =  942  - par10 =  97.37293069
(5 out of 5) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.22800000e+03,   1.22900000e+03,   1.23000000e+03]))
(1231 out of 1231) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0
% Backup Solver: sKizzo
% Input Instances for Training: 1231 (-unsolvable)
% Used Instances for Training: 1231 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 6933.32 (137 instances)
% >>> 5-th iteration<<<
('sr: ', array([ 305.83157504,   64.51411094]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	949.0 	98.1735729715
2 	701.0 	9599.3006854
3 	520.0 	16420.8139517
4 	384.0 	21574.3655321
5 	219.0 	27713.8859115
('top_ft_inx_arr: ', array([ 1,  3,  4,  8, 10, 11, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 33,
       36, 38, 39, 40, 41, 43]))
ft_imp_total =  0.9
ft cv scores:  [ 0.61769538  0.72130787  0.63165144  0.62732679  0.68976621  0.72564456
  0.62560352  0.60500311  0.64981522  0.54109143]
top_ft_inx_arr:  [ 1  3  4  8 10 11 15 16 18 19 20 21 23 24 25 26 33 36 38 39 40 41 43]
(23 out of 46) Features to keep are determined: 1, 3, 4, 8, 10, 11, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 33, 36, 38, 39, 40, 41, 43
Oracle performance before algorithm subset selection: num_inst_solved =  949  - par10 =  98.1735729715
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.20350874  0.20350874  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.12169594  0.12169594  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 25.  25.  40.  40.] ,  [ 0.          0.24965173  0.24965173  0.12169594] ,  r
plt.plot(xs, ys,  color) =  [ 10.   10.   32.5  32.5] ,  [ 0.20350874  0.58483674  0.58483674  0.24965173] ,  b
leaves:  [0 2 1 3 4]
alg_portfolio =  [0, 1, 2, 3, 4]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  2
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  4
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  1
Oracle performance after algorithm subset selection: num_inst_solved =  949  - par10 =  98.1735729715
(5 out of 5) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.22800000e+03,   1.22900000e+03,   1.23000000e+03]))
(1231 out of 1231) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0
% Backup Solver: sKizzo
% Input Instances for Training: 1231 (-unsolvable)
% Used Instances for Training: 1231 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 9551.59 (137 instances)
% >>> 6-th iteration<<<
('sr: ', array([ 305.3663191 ,   64.38681584]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	948.0 	91.7744838502
2 	709.0 	9266.03615019
3 	532.0 	15950.4394411
4 	384.0 	21571.3046414
5 	214.0 	27893.9342511
('top_ft_inx_arr: ', array([ 1,  3,  4,  8, 10, 11, 13, 15, 16, 18, 19, 20, 21, 24, 26, 33, 36,
       38, 39, 40, 41, 42, 43]))
ft_imp_total =  0.9
ft cv scores:  [ 0.62823768  0.65608299  0.64039021  0.63685122  0.64596746  0.63717961
  0.4697105   0.62327586  0.54794866  0.46004945]
top_ft_inx_arr:  [ 1  3  4  8 10 11 13 15 16 18 19 20 21 24 26 33 36 38 39 40 41 42 43]
(23 out of 46) Features to keep are determined: 1, 3, 4, 8, 10, 11, 13, 15, 16, 18, 19, 20, 21, 24, 26, 33, 36, 38, 39, 40, 41, 42, 43
Oracle performance before algorithm subset selection: num_inst_solved =  948  - par10 =  91.7744838502
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.21649886  0.21649886  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.05298718  0.05298718  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 25.  25.  40.  40.] ,  [ 0.          0.26564452  0.26564452  0.05298718] ,  r
plt.plot(xs, ys,  color) =  [ 10.   10.   32.5  32.5] ,  [ 0.21649886  0.59612997  0.59612997  0.26564452] ,  b
leaves:  [0 2 1 3 4]
alg_portfolio =  [0, 1, 2, 3, 4]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  2
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  4
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  1
Oracle performance after algorithm subset selection: num_inst_solved =  948  - par10 =  91.7744838502
(5 out of 5) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.22800000e+03,   1.22900000e+03,   1.23000000e+03]))
(1231 out of 1231) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0
% Backup Solver: sKizzo
% Input Instances for Training: 1231 (-unsolvable)
% Used Instances for Training: 1231 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 9371.81 (137 instances)
% >>> 7-th iteration<<<
('sr: ', array([ 306.4153575 ,   63.93151169]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	942.0 	96.7244912208
2 	694.0 	9669.7364017
3 	524.0 	16120.0973887
4 	384.0 	21472.3031847
5 	219.0 	27652.1960722
('top_ft_inx_arr: ', array([ 1,  3,  4,  8, 10, 11, 15, 16, 19, 20, 21, 23, 24, 26, 33, 36, 38,
       39, 40, 41, 42, 43, 45]))
ft_imp_total =  0.9
ft cv scores:  [ 0.62307128  0.66866727  0.53389855  0.6350099   0.71243296  0.65457895
  0.55959753  0.58800046  0.67742855  0.464087  ]
top_ft_inx_arr:  [ 1  3  4  8 10 11 15 16 19 20 21 23 24 26 33 36 38 39 40 41 42 43 45]
(23 out of 46) Features to keep are determined: 1, 3, 4, 8, 10, 11, 15, 16, 19, 20, 21, 23, 24, 26, 33, 36, 38, 39, 40, 41, 42, 43, 45
Oracle performance before algorithm subset selection: num_inst_solved =  942  - par10 =  96.7244912208
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.23428949  0.23428949  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.21405767  0.21405767  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 25.  25.  40.  40.] ,  [ 0.          0.2391345   0.2391345   0.21405767] ,  r
plt.plot(xs, ys,  color) =  [ 10.   10.   32.5  32.5] ,  [ 0.23428949  0.53409571  0.53409571  0.2391345 ] ,  b
leaves:  [0 2 3 1 4]
alg_portfolio =  [0, 1, 2, 3, 4]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  2
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  4
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  3
Oracle performance after algorithm subset selection: num_inst_solved =  942  - par10 =  96.7244912208
(5 out of 5) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.22800000e+03,   1.22900000e+03,   1.23000000e+03]))
(1231 out of 1231) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0
% Backup Solver: sKizzo
% Input Instances for Training: 1231 (-unsolvable)
% Used Instances for Training: 1231 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 8024.08 (137 instances)
% >>> 8-th iteration<<<
('sr: ', array([ 305.32735878,   64.1422857 ]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	950.0 	99.4881060421
2 	703.0 	9550.14985307
3 	532.0 	15992.8424634
4 	388.0 	21441.6743368
5 	218.0 	27758.5710737
('top_ft_inx_arr: ', array([ 1,  3,  4,  8, 10, 11, 14, 16, 18, 19, 20, 21, 23, 24, 26, 33, 36,
       38, 39, 40, 41, 43, 45]))
ft_imp_total =  0.9
ft cv scores:  [ 0.64080157  0.65503703  0.68626792  0.66138788  0.62377908  0.56528828
  0.63616817  0.67048262  0.65905404  0.52473639]
top_ft_inx_arr:  [ 1  3  4  8 10 11 14 16 18 19 20 21 23 24 26 33 36 38 39 40 41 43 45]
(23 out of 46) Features to keep are determined: 1, 3, 4, 8, 10, 11, 14, 16, 18, 19, 20, 21, 23, 24, 26, 33, 36, 38, 39, 40, 41, 43, 45
Oracle performance before algorithm subset selection: num_inst_solved =  950  - par10 =  99.4881060421
plt.plot(xs, ys,  color) =  [ 15.  15.  25.  25.] ,  [ 0.          0.17351737  0.17351737  0.        ] ,  g
plt.plot(xs, ys,  color) =  [  5.   5.  20.  20.] ,  [ 0.          0.21273108  0.21273108  0.17351737] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.23668789  0.23668789  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 12.5  12.5  40.   40. ] ,  [ 0.21273108  0.56902048  0.56902048  0.23668789] ,  b
leaves:  [1 3 4 0 2]
alg_portfolio =  [0, 1, 2, 3, 4]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  4
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  1
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  2
Oracle performance after algorithm subset selection: num_inst_solved =  950  - par10 =  99.4881060421
(5 out of 5) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.22800000e+03,   1.22900000e+03,   1.23000000e+03]))
(1231 out of 1231) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0
% Backup Solver: sKizzo
% Input Instances for Training: 1231 (-unsolvable)
% Used Instances for Training: 1231 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 9305.95 (137 instances)
% >>> 9-th iteration<<<
('sr: ', array([ 305.07569071,   64.2804807 ]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	949.0 	94.9042789884
2 	709.0 	9291.52919962
3 	536.0 	15817.9106957
4 	389.0 	21389.0363014
5 	221.0 	27637.407176
('top_ft_inx_arr: ', array([ 1,  3,  4,  8, 10, 11, 15, 16, 18, 19, 20, 21, 23, 24, 26, 33, 36,
       38, 39, 40, 41, 42, 43]))
ft_imp_total =  0.9
ft cv scores:  [ 0.60739772  0.62386867  0.63367313  0.61663183  0.68586012  0.66512161
  0.54087389  0.6582046   0.66389955  0.41824081]
top_ft_inx_arr:  [ 1  3  4  8 10 11 15 16 18 19 20 21 23 24 26 33 36 38 39 40 41 42 43]
(23 out of 46) Features to keep are determined: 1, 3, 4, 8, 10, 11, 15, 16, 18, 19, 20, 21, 23, 24, 26, 33, 36, 38, 39, 40, 41, 42, 43
Oracle performance before algorithm subset selection: num_inst_solved =  949  - par10 =  94.9042789884
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.20490931  0.20490931  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.19040932  0.19040932  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 25.  25.  40.  40.] ,  [ 0.          0.20963694  0.20963694  0.19040932] ,  r
plt.plot(xs, ys,  color) =  [ 10.   10.   32.5  32.5] ,  [ 0.20490931  0.58478185  0.58478185  0.20963694] ,  b
leaves:  [0 2 1 3 4]
alg_portfolio =  [0, 1, 2, 3, 4]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  2
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  4
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  1
Oracle performance after algorithm subset selection: num_inst_solved =  949  - par10 =  94.9042789884
(5 out of 5) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.22800000e+03,   1.22900000e+03,   1.23000000e+03]))
(1231 out of 1231) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0
% Backup Solver: sKizzo
% Input Instances for Training: 1231 (-unsolvable)
% Used Instances for Training: 1231 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 9601.36 (137 instances)
% >>> 10-th iteration<<<
('sr: ', array([ 304.76355266,   64.5684472 ]), ' - svd_k: ', 2)

opt_portfolio:  [0 0 0 0 0]
opt_portfolio v2:  set([0, 1, 2, 3, 4])
evaluate_dataset_hardness: k	 num_solved	 par10
1 	954.0 	98.5347701363
2 	716.0 	9174.26195013
3 	534.0 	15999.5590254
4 	393.0 	21318.1733648
5 	220.0 	27719.8952516
('top_ft_inx_arr: ', array([ 1,  3,  4,  8, 10, 11, 14, 15, 16, 18, 19, 20, 21, 24, 26, 33, 36,
       38, 39, 40, 41, 43, 44]))
ft_imp_total =  0.9
ft cv scores:  [ 0.60751581  0.64965949  0.65201503  0.60600201  0.69060876  0.64102368
  0.53436269  0.61867924  0.63432543  0.43829057]
top_ft_inx_arr:  [ 1  3  4  8 10 11 14 15 16 18 19 20 21 24 26 33 36 38 39 40 41 43 44]
(23 out of 46) Features to keep are determined: 1, 3, 4, 8, 10, 11, 14, 15, 16, 18, 19, 20, 21, 24, 26, 33, 36, 38, 39, 40, 41, 43, 44
Oracle performance before algorithm subset selection: num_inst_solved =  954  - par10 =  98.5347701363
plt.plot(xs, ys,  color) =  [  5.   5.  15.  15.] ,  [ 0.          0.21832848  0.21832848  0.        ] ,  g
plt.plot(xs, ys,  color) =  [ 35.  35.  45.  45.] ,  [ 0.          0.13409048  0.13409048  0.        ] ,  r
plt.plot(xs, ys,  color) =  [ 25.  25.  40.  40.] ,  [ 0.          0.2329052   0.2329052   0.13409048] ,  r
plt.plot(xs, ys,  color) =  [ 10.   10.   32.5  32.5] ,  [ 0.21832848  0.58466358  0.58466358  0.2329052 ] ,  b
leaves:  [0 2 1 3 4]
alg_portfolio =  [0, 1, 2, 3, 4]  -- alg_inx =  0
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  2
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  3
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  4
alg_portfolio =  [0 1 2 3 4]  -- alg_inx =  1
Oracle performance after algorithm subset selection: num_inst_solved =  954  - par10 =  98.5347701363
(5 out of 5) Algorithms/solvers to keep are determined: 0, 1, 2, 3, 4
('inst_per_cls : ', array([  0.00000000e+00,   1.00000000e+00,   2.00000000e+00, ...,
         1.22900000e+03,   1.23000000e+03,   1.23100000e+03]))
(1232 out of 1232) Instances to keep are determined: 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0, 232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 333.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0, 445.0, 446.0, 447.0, 448.0, 449.0, 450.0, 451.0, 452.0, 453.0, 454.0, 455.0, 456.0, 457.0, 458.0, 459.0, 460.0, 461.0, 462.0, 463.0, 464.0, 465.0, 466.0, 467.0, 468.0, 469.0, 470.0, 471.0, 472.0, 473.0, 474.0, 475.0, 476.0, 477.0, 478.0, 479.0, 480.0, 481.0, 482.0, 483.0, 484.0, 485.0, 486.0, 487.0, 488.0, 489.0, 490.0, 491.0, 492.0, 493.0, 494.0, 495.0, 496.0, 497.0, 498.0, 499.0, 500.0, 501.0, 502.0, 503.0, 504.0, 505.0, 506.0, 507.0, 508.0, 509.0, 510.0, 511.0, 512.0, 513.0, 514.0, 515.0, 516.0, 517.0, 518.0, 519.0, 520.0, 521.0, 522.0, 523.0, 524.0, 525.0, 526.0, 527.0, 528.0, 529.0, 530.0, 531.0, 532.0, 533.0, 534.0, 535.0, 536.0, 537.0, 538.0, 539.0, 540.0, 541.0, 542.0, 543.0, 544.0, 545.0, 546.0, 547.0, 548.0, 549.0, 550.0, 551.0, 552.0, 553.0, 554.0, 555.0, 556.0, 557.0, 558.0, 559.0, 560.0, 561.0, 562.0, 563.0, 564.0, 565.0, 566.0, 567.0, 568.0, 569.0, 570.0, 571.0, 572.0, 573.0, 574.0, 575.0, 576.0, 577.0, 578.0, 579.0, 580.0, 581.0, 582.0, 583.0, 584.0, 585.0, 586.0, 587.0, 588.0, 589.0, 590.0, 591.0, 592.0, 593.0, 594.0, 595.0, 596.0, 597.0, 598.0, 599.0, 600.0, 601.0, 602.0, 603.0, 604.0, 605.0, 606.0, 607.0, 608.0, 609.0, 610.0, 611.0, 612.0, 613.0, 614.0, 615.0, 616.0, 617.0, 618.0, 619.0, 620.0, 621.0, 622.0, 623.0, 624.0, 625.0, 626.0, 627.0, 628.0, 629.0, 630.0, 631.0, 632.0, 633.0, 634.0, 635.0, 636.0, 637.0, 638.0, 639.0, 640.0, 641.0, 642.0, 643.0, 644.0, 645.0, 646.0, 647.0, 648.0, 649.0, 650.0, 651.0, 652.0, 653.0, 654.0, 655.0, 656.0, 657.0, 658.0, 659.0, 660.0, 661.0, 662.0, 663.0, 664.0, 665.0, 666.0, 667.0, 668.0, 669.0, 670.0, 671.0, 672.0, 673.0, 674.0, 675.0, 676.0, 677.0, 678.0, 679.0, 680.0, 681.0, 682.0, 683.0, 684.0, 685.0, 686.0, 687.0, 688.0, 689.0, 690.0, 691.0, 692.0, 693.0, 694.0, 695.0, 696.0, 697.0, 698.0, 699.0, 700.0, 701.0, 702.0, 703.0, 704.0, 705.0, 706.0, 707.0, 708.0, 709.0, 710.0, 711.0, 712.0, 713.0, 714.0, 715.0, 716.0, 717.0, 718.0, 719.0, 720.0, 721.0, 722.0, 723.0, 724.0, 725.0, 726.0, 727.0, 728.0, 729.0, 730.0, 731.0, 732.0, 733.0, 734.0, 735.0, 736.0, 737.0, 738.0, 739.0, 740.0, 741.0, 742.0, 743.0, 744.0, 745.0, 746.0, 747.0, 748.0, 749.0, 750.0, 751.0, 752.0, 753.0, 754.0, 755.0, 756.0, 757.0, 758.0, 759.0, 760.0, 761.0, 762.0, 763.0, 764.0, 765.0, 766.0, 767.0, 768.0, 769.0, 770.0, 771.0, 772.0, 773.0, 774.0, 775.0, 776.0, 777.0, 778.0, 779.0, 780.0, 781.0, 782.0, 783.0, 784.0, 785.0, 786.0, 787.0, 788.0, 789.0, 790.0, 791.0, 792.0, 793.0, 794.0, 795.0, 796.0, 797.0, 798.0, 799.0, 800.0, 801.0, 802.0, 803.0, 804.0, 805.0, 806.0, 807.0, 808.0, 809.0, 810.0, 811.0, 812.0, 813.0, 814.0, 815.0, 816.0, 817.0, 818.0, 819.0, 820.0, 821.0, 822.0, 823.0, 824.0, 825.0, 826.0, 827.0, 828.0, 829.0, 830.0, 831.0, 832.0, 833.0, 834.0, 835.0, 836.0, 837.0, 838.0, 839.0, 840.0, 841.0, 842.0, 843.0, 844.0, 845.0, 846.0, 847.0, 848.0, 849.0, 850.0, 851.0, 852.0, 853.0, 854.0, 855.0, 856.0, 857.0, 858.0, 859.0, 860.0, 861.0, 862.0, 863.0, 864.0, 865.0, 866.0, 867.0, 868.0, 869.0, 870.0, 871.0, 872.0, 873.0, 874.0, 875.0, 876.0, 877.0, 878.0, 879.0, 880.0, 881.0, 882.0, 883.0, 884.0, 885.0, 886.0, 887.0, 888.0, 889.0, 890.0, 891.0, 892.0, 893.0, 894.0, 895.0, 896.0, 897.0, 898.0, 899.0, 900.0, 901.0, 902.0, 903.0, 904.0, 905.0, 906.0, 907.0, 908.0, 909.0, 910.0, 911.0, 912.0, 913.0, 914.0, 915.0, 916.0, 917.0, 918.0, 919.0, 920.0, 921.0, 922.0, 923.0, 924.0, 925.0, 926.0, 927.0, 928.0, 929.0, 930.0, 931.0, 932.0, 933.0, 934.0, 935.0, 936.0, 937.0, 938.0, 939.0, 940.0, 941.0, 942.0, 943.0, 944.0, 945.0, 946.0, 947.0, 948.0, 949.0, 950.0, 951.0, 952.0, 953.0, 954.0, 955.0, 956.0, 957.0, 958.0, 959.0, 960.0, 961.0, 962.0, 963.0, 964.0, 965.0, 966.0, 967.0, 968.0, 969.0, 970.0, 971.0, 972.0, 973.0, 974.0, 975.0, 976.0, 977.0, 978.0, 979.0, 980.0, 981.0, 982.0, 983.0, 984.0, 985.0, 986.0, 987.0, 988.0, 989.0, 990.0, 991.0, 992.0, 993.0, 994.0, 995.0, 996.0, 997.0, 998.0, 999.0, 1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0, 1010.0, 1011.0, 1012.0, 1013.0, 1014.0, 1015.0, 1016.0, 1017.0, 1018.0, 1019.0, 1020.0, 1021.0, 1022.0, 1023.0, 1024.0, 1025.0, 1026.0, 1027.0, 1028.0, 1029.0, 1030.0, 1031.0, 1032.0, 1033.0, 1034.0, 1035.0, 1036.0, 1037.0, 1038.0, 1039.0, 1040.0, 1041.0, 1042.0, 1043.0, 1044.0, 1045.0, 1046.0, 1047.0, 1048.0, 1049.0, 1050.0, 1051.0, 1052.0, 1053.0, 1054.0, 1055.0, 1056.0, 1057.0, 1058.0, 1059.0, 1060.0, 1061.0, 1062.0, 1063.0, 1064.0, 1065.0, 1066.0, 1067.0, 1068.0, 1069.0, 1070.0, 1071.0, 1072.0, 1073.0, 1074.0, 1075.0, 1076.0, 1077.0, 1078.0, 1079.0, 1080.0, 1081.0, 1082.0, 1083.0, 1084.0, 1085.0, 1086.0, 1087.0, 1088.0, 1089.0, 1090.0, 1091.0, 1092.0, 1093.0, 1094.0, 1095.0, 1096.0, 1097.0, 1098.0, 1099.0, 1100.0, 1101.0, 1102.0, 1103.0, 1104.0, 1105.0, 1106.0, 1107.0, 1108.0, 1109.0, 1110.0, 1111.0, 1112.0, 1113.0, 1114.0, 1115.0, 1116.0, 1117.0, 1118.0, 1119.0, 1120.0, 1121.0, 1122.0, 1123.0, 1124.0, 1125.0, 1126.0, 1127.0, 1128.0, 1129.0, 1130.0, 1131.0, 1132.0, 1133.0, 1134.0, 1135.0, 1136.0, 1137.0, 1138.0, 1139.0, 1140.0, 1141.0, 1142.0, 1143.0, 1144.0, 1145.0, 1146.0, 1147.0, 1148.0, 1149.0, 1150.0, 1151.0, 1152.0, 1153.0, 1154.0, 1155.0, 1156.0, 1157.0, 1158.0, 1159.0, 1160.0, 1161.0, 1162.0, 1163.0, 1164.0, 1165.0, 1166.0, 1167.0, 1168.0, 1169.0, 1170.0, 1171.0, 1172.0, 1173.0, 1174.0, 1175.0, 1176.0, 1177.0, 1178.0, 1179.0, 1180.0, 1181.0, 1182.0, 1183.0, 1184.0, 1185.0, 1186.0, 1187.0, 1188.0, 1189.0, 1190.0, 1191.0, 1192.0, 1193.0, 1194.0, 1195.0, 1196.0, 1197.0, 1198.0, 1199.0, 1200.0, 1201.0, 1202.0, 1203.0, 1204.0, 1205.0, 1206.0, 1207.0, 1208.0, 1209.0, 1210.0, 1211.0, 1212.0, 1213.0, 1214.0, 1215.0, 1216.0, 1217.0, 1218.0, 1219.0, 1220.0, 1221.0, 1222.0, 1223.0, 1224.0, 1225.0, 1226.0, 1227.0, 1228.0, 1229.0, 1230.0, 1231.0
% Backup Solver: sKizzo
% Input Instances for Training: 1232 (-unsolvable)
% Used Instances for Training: 1232 (-unsolvable)
% Train with RANDOMFOREST-CLASSVOTER
% PAR10 on current test set: 10655.33 (136 instances)
% 
%  >>> Instances: 1368 <<<
%  >>> Oracle Evaluation (w/o unsolved) <<<
% 
% Unsolved (not by any algorithm and not by feature computation): 314
% PAR1 time: 900.486777 (96.267468)
% Par10 time: 8337.099350 (95.969555)
% #TOs: 314 (0)
% 
%  >>> Cross Fold Evaluation <<<
% 
% Presolved: 0
% >>>With Unsolvable Instances
% Timeouts per #Thread: {1: 348, 2: 321, 3: 314, 4: 314, 5: 314}
% Solved (perc) per #Thread: {1: 0.7456140350877193, 2: 0.7653508771929824, 3: 0.77046783625731, 4: 0.77046783625731, 5: 0.77046783625731}
% AVG per #Thread: {1: 1037.0105558479388, 2: 927.945680219288, 3: 905.2977928654767, 4: 900.266908399103, 5: 900.2572447441325}
% PAR10 per #Thread: {1: 9279.115819005834, 2: 8530.577259166655, 3: 8342.139898128635, 4: 8337.10901366226, 5: 8337.099350007291}
% >>>Without Unsolved Instances (depends on pre-solved in feature groups)
% Timeouts: {1: 34, 2: 7, 3: 0, 4: 0, 5: 0}
% Solved (perc): {1: 0.967741935483871, 2: 0.9933586337760911, 3: 1.0, 4: 1.0, 5: 1.0}
% PAR1: {1: 273.46341593926013, 2: 131.9067272675388, 3: 102.51174633773451, 4: 95.9820974288169, 5: 95.96955484817197}
% PAR10: {1: 1318.6247062618409, 2: 347.08699292218597, 3: 102.51174633773451, 4: 95.9820974288169, 5: 95.96955484817197}
% 
% Time used by each solver: {'quantor': 61746.73014000001, '2clsQ': 47393.67001, 'sKizzo': 625717.2602500002, 'sSolve': 486847.9000000001, 'QuBE': 196924.87999999986}
% Optimal Time used by each solver: {'quantor': 1137041.1207100004, '2clsQ': 9994.160020000003, 'sKizzo': 24376.40008, 'sSolve': 43738.620000000024, 'QuBE': 16715.61}
Total time passed:  438.533  seconds
Started solving  /home/misir/Desktop/aslib_data-aslib-v1.1/multiclass
% Command line arguments:
% --aslib-dir /home/misir/Desktop/aslib_data-aslib-v1.1/multiclass --model-dir MODEL_DIR --print-times /home/misir/Desktop/liclipse/Workspace/flexfolio-data_filtering-v3/output/17082015161556555077/multiclass.csv
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/multiclass/description.txt
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/multiclass/algorithm_runs.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/multiclass/feature_values.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/multiclass/feature_runstatus.arff
% Read /home/misir/Desktop/aslib_data-aslib-v1.1/multiclass/feature_costs.arff
% Used Feature Steps: NumberOfInstancesWithMissingValues,LogInverseDatasetRatio,PCASkewnessFirstPC,ClassEntropy,SymbolsMin,NumberOfFeatures,NumberOfCategoricalFeatures,PercentageOfMissingValues,PCA,LandmarkLDA,ClassProbabilityMax,KurtosisMax,Landmark1NN,LandmarkNaiveBayes,NumberOfMissingValues,NumSymbols,PercentageOfFeaturesWithMissingValues,PCAKurtosisFirstPC,NumberOfNumericFeatures,Kurtosisses,RatioNumericalToNominal,SkewnessMin,KurtosisMean,SkewnessMean,LogNumberOfFeatures,LandmarkDecisionNodeLearner,NumberOfClasses,SymbolsSum,SymbolsMean,PCAFractionOfComponentsFor95PercentVariance,NumberOfFeaturesWithMissingValues,ClassProbabilitySTD,LandmarkRandomNodeLearner,LogNumberOfInstances,Skewnesses,RatioNominalToNumerical,ClassProbabilityMean,ClassOccurences,KurtosisSTD,SkewnessSTD,KurtosisMin,SymbolsSTD,NumberOfInstances,InverseDatasetRatio,ClassProbabilityMin,LogDatasetRatio,LandmarkDecisionTree,PercentageOfInstancesWithMissingValues,SymbolsMax,MissingValues,SkewnessMax,DatasetRatio
% Used features: NumberOfMissingValues,NumberOfInstancesWithMissingValues,KurtosisMax,PCASkewnessFirstPC,ClassEntropy,KurtosisMean,NumberOfFeatures,LogNumberOfFeatures,NumberOfCategoricalFeatures,ClassProbabilityMean,LandmarkDecisionTree,LandmarkLDA,ClassProbabilityMax,PCAKurtosisFirstPC,SymbolsMin,LandmarkNaiveBayes,PercentageOfFeaturesWithMissingValues,NumberOfNumericFeatures,RatioNumericalToNominal,SkewnessMin,SkewnessMean,SymbolsMean,LandmarkDecisionNodeLearner,NumberOfClasses,SymbolsSum,PercentageOfMissingValues,PCAFractionOfComponentsFor95PercentVariance,NumberOfFeaturesWithMissingValues,ClassProbabilitySTD,LandmarkRandomNodeLearner,LogNumberOfInstances,RatioNominalToNumerical,Landmark1NN,KurtosisSTD,SkewnessSTD,KurtosisMin,SymbolsSTD,NumberOfInstances,InverseDatasetRatio,ClassProbabilityMin,LogDatasetRatio,PercentageOfInstancesWithMissingValues,LogInverseDatasetRatio,SymbolsMax,SkewnessMax,DatasetRatio
% 
% Check Consistency and Completeness of input data
